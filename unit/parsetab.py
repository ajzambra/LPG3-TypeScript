
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAND ANY ARROW AS ASYNC AWAIT BIGINT_TYPE BOOLEAN_TYPE BREAK CASE CATCH CLASS COLON COMMA CONSOLE CONST CONTINUE DEFAULT DIV DIV_ASSIGN DOT ELSE ENUM EQ EQUAL EXPORT FALSE FINALLY FLOAT FOR FUNCTION GE GT IDENTIFIER IF IMPORT INTERFACE LBRACE LBRACKET LE LET LOG LPAREN LT MINUS MINUSMINUS MINUS_ASSIGN MOD MOD_ASSIGN MULT_ASSIGN NEQ NEW NOT NULL_TYPE NUMBER NUMBER_TYPE OF OR PLUS PLUSPLUS PLUS_ASSIGN POT PRIVATE PROMPT PROTECTED PUBLIC RBRACE RBRACKET RETURN RPAREN SEMICOLON STATIC STRICT_EQ STRICT_NEQ STRING STRING_TYPE SUPER SWITCH SYMBOL_TYPE THIS TIMES TRUE TRY TYPE UNDEFINED_TYPE VAR VOID WHILEprogram : program element\n               | elementelement : letAssignment\n               | declaracion\n               | function\n               | arrow_function\n               | async_function\n               | constAssignment\n               | enum_definition\n               | controlEstructure\n               | forEstructure\n               | class_definition\n               | statement\n               | interface\n               | assignment\n               | expression SEMICOLON\n               | consolelogassignment : IDENTIFIER EQUAL expression SEMICOLONletAssignment : LET IDENTIFIER COLON type EQUAL expression SEMICOLONletAssignment : LET IDENTIFIER EQUAL expression SEMICOLONdeclaracion : LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLONlista_expresiones_opt : lista_expresiones\n                            | emptylista_expresiones : expression\n                        | expression COMMA lista_expresionesforEstructure : FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statementforEstructure : FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statementfor_init : LET IDENTIFIER EQUAL expression\n                | LET IDENTIFIER COLON type EQUAL expression\n                | expression\n                | emptyfor_update : expression\n                  | expression PLUSPLUS\n                  | expression MINUSMINUS\n                  | PLUSPLUS expression\n                  | MINUSMINUS expression\n                  | emptyfunction : FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACEparameters : IDENTIFIER COLON type\n                | IDENTIFIER COLON type COMMA parameters\n                | emptybody_function : instruction_list\n                    | emptytype : LBRACKET type COMMA type RBRACKETexpression : LBRACKET expression COMMA expression RBRACKETtype : NUMBER_TYPE\n            | STRING_TYPE\n            | BOOLEAN_TYPE\n            | IDENTIFIER\n            | VOID\n            | type LBRACKET RBRACKETexpression : expression PLUS expressionexpression : expression MINUS expressionexpression : expression TIMES expressionexpression : expression DIV expressionexpression : expression MOD expressionexpression : expression PLUS_ASSIGN expressionexpression : expression MINUS_ASSIGN expressionexpression : expression MULT_ASSIGN expressionexpression : expression DIV_ASSIGN expressionexpression : expression MOD_ASSIGN expressionexpression : expression POT expressionexpression : expression AND expressionexpression : expression OR expressionexpression : expression EQ expressionexpression : expression NEQ expressionexpression : expression STRICT_EQ expressionexpression : expression STRICT_NEQ expressionexpression : expression LT expressionexpression : expression GT expressionexpression : expression LE expressionexpression : expression GE expressionexpression : PROMPT LPAREN STRING RPARENexpression : NOT expressionexpression : LPAREN expression RPARENexpression : expression DOT IDENTIFIERexpression : expression LBRACKET expression RBRACKETexpression : IDENTIFIER LPAREN lista_expresiones_opt RPARENexpression : NUMBERexpression : FLOATexpression : STRINGexpression : IDENTIFIERexpression : TRUEexpression : FALSEexpression : expression PLUSPLUS\n                    | expression MINUSMINUS\n                    | PLUSPLUS expression\n                    | MINUSMINUS expressionconsolelog : CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLONcontrolEstructure : IF LPAREN expression RPAREN statement \n                        | IF LPAREN expression RPAREN statement ELSE statement \n                        | IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement \n                        | IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statementstatement : LBRACE instruction_list RBRACE\n                 | letAssignment\n                 | varAssignment\n                 | constAssignment\n                 | declaracion\n                 | function\n                 | arrow_function\n                 | async_function\n                 | consolelog\n                 | expression SEMICOLON\n                 | controlEstructure\n                 | RETURN expression SEMICOLON\n                 | forEstructure\n                 | RETURN SEMICOLON\n                 | class_definitionstatement : LBRACE RBRACEinstruction_list : instruction_list statement\n                        | statement\n                        | emptyempty :constAssignment : CONST IDENTIFIER COLON type EQUAL expression SEMICOLONconstAssignment : CONST IDENTIFIER EQUAL expression SEMICOLONclass_definition : CLASS IDENTIFIER LBRACE class_body RBRACEclass_body : class_body class_element\n                  | class_element\n                  | emptyclass_element : function\n                     | letAssignment\n                     | varAssignment\n                     | constAssignmentcontrolEstructure : SWITCH LPAREN expression RPAREN LBRACE case_block RBRACEcase_block : case_block case\n                  | case\n                  | emptycase : CASE expression COLON instruction_list\n            | DEFAULT COLON instruction_listenum_definition : ENUM IDENTIFIER LBRACE enum_members RBRACEenum_members : IDENTIFIER\n                    | IDENTIFIER COMMA enum_membersasync_function : ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACEcontrolEstructure : WHILE LPAREN expression RPAREN statementvarAssignment : VAR IDENTIFIER COLON type EQUAL expression SEMICOLONvarAssignment : VAR IDENTIFIER EQUAL expression SEMICOLONarrow_function : CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLONinterface : INTERFACE IDENTIFIER LBRACE interface_body RBRACEinterface_body : interface_body interface_property\n                      | interface_property\n                      | emptyinterface_property : IDENTIFIER COLON type SEMICOLONexpression : LBRACE object_properties RBRACEobject_properties : object_property\n                         | object_property COMMA object_properties\n                         | emptyobject_property : IDENTIFIER COLON expression'
    
_lr_action_items = {'LET':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,23,32,46,47,81,82,84,85,87,88,89,90,91,92,93,95,96,97,106,109,152,153,156,171,172,187,203,205,209,210,211,212,213,214,215,229,236,241,242,244,249,250,254,258,269,284,290,293,294,297,303,307,308,312,313,316,317,318,321,324,328,329,331,333,334,336,339,340,341,342,343,344,345,],[18,18,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,18,-96,-1,-16,18,-109,-111,-112,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,169,-107,-94,-110,-103,216,-105,-18,18,18,216,-118,-119,-120,-121,-122,-123,-20,-115,-130,-90,-134,-116,-117,-138,-136,18,-19,-114,-91,-124,18,18,-89,-135,18,18,18,18,-112,18,-27,18,-112,18,18,-26,-38,18,-21,-137,-133,-90,18,-91,]),'FUNCTION':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,23,25,32,46,47,81,82,84,85,87,88,89,90,91,92,93,95,96,97,109,152,153,156,171,172,187,203,205,209,210,211,212,213,214,215,229,236,241,242,244,249,250,254,258,269,284,290,293,294,297,303,307,308,312,313,316,317,318,321,324,328,329,331,333,334,336,339,340,341,342,343,344,345,],[21,21,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,21,101,-96,-1,-16,21,-109,-111,-112,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,-107,-94,-110,-103,21,-105,-18,21,21,21,-118,-119,-120,-121,-122,-123,-20,-115,-130,-90,-134,-116,-117,-138,-136,21,-19,-114,-91,-124,21,21,-89,-135,21,21,21,21,-112,21,-27,21,-112,21,21,-26,-38,21,-21,-137,-133,-90,21,-91,]),'CONST':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,23,32,46,47,81,82,84,85,87,88,89,90,91,92,93,95,96,97,106,109,152,153,156,171,172,187,203,205,209,210,211,212,213,214,215,229,236,241,242,244,249,250,254,258,269,284,290,293,294,297,303,307,308,312,313,316,317,318,321,324,328,329,331,333,334,336,339,340,341,342,343,344,345,],[24,24,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,99,-96,-1,-16,99,-109,-111,-112,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,168,-107,-94,-110,-103,217,-105,-18,99,99,217,-118,-119,-120,-121,-122,-123,-20,-115,-130,-90,-134,-116,-117,-138,-136,99,-19,-114,-91,-124,99,99,-89,-135,99,99,99,99,-112,99,-27,99,-112,99,99,-26,-38,99,-21,-137,-133,-90,99,-91,]),'ASYNC':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,23,32,46,47,81,82,84,85,87,88,89,90,91,92,93,95,96,97,109,152,153,156,172,187,203,205,229,236,241,242,244,249,254,258,269,284,290,293,294,297,303,307,308,312,313,316,317,318,321,324,328,329,331,333,334,336,339,340,341,342,343,344,345,],[25,25,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,25,-96,-1,-16,25,-109,-111,-112,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,-107,-94,-110,-103,-105,-18,25,25,-20,-115,-130,-90,-134,-116,-138,-136,25,-19,-114,-91,-124,25,25,-89,-135,25,25,25,25,-112,25,-27,25,-112,25,25,-26,-38,25,-21,-137,-133,-90,25,-91,]),'ENUM':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,32,46,47,82,87,88,89,90,91,92,93,95,96,97,109,152,156,172,187,229,236,241,242,244,249,254,258,284,290,293,294,307,308,324,334,336,340,341,342,343,345,],[26,26,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,-96,-1,-16,-109,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,-107,-94,-103,-105,-18,-20,-115,-130,-90,-134,-116,-138,-136,-19,-114,-91,-124,-89,-135,-27,-26,-38,-21,-137,-133,-90,-91,]),'IF':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,23,32,46,47,81,82,84,85,87,88,89,90,91,92,93,95,96,97,109,152,153,156,172,187,203,205,229,236,241,242,244,249,254,258,269,284,290,293,294,297,303,307,308,312,313,316,317,318,321,324,328,329,331,333,334,336,339,340,341,342,343,344,345,],[27,27,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,27,-96,-1,-16,27,-109,-111,-112,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,-107,-94,-110,-103,-105,-18,27,27,-20,-115,-130,-90,-134,-116,-138,-136,292,-19,-114,-91,-124,27,27,-89,-135,27,27,27,27,-112,27,-27,27,-112,27,27,-26,-38,27,-21,-137,-133,-90,292,-91,]),'SWITCH':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,23,32,46,47,81,82,84,85,87,88,89,90,91,92,93,95,96,97,109,152,153,156,172,187,203,205,229,236,241,242,244,249,254,258,269,284,290,293,294,297,303,307,308,312,313,316,317,318,321,324,328,329,331,333,334,336,339,340,341,342,343,344,345,],[28,28,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,28,-96,-1,-16,28,-109,-111,-112,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,-107,-94,-110,-103,-105,-18,28,28,-20,-115,-130,-90,-134,-116,-138,-136,28,-19,-114,-91,-124,28,28,-89,-135,28,28,28,28,-112,28,-27,28,-112,28,28,-26,-38,28,-21,-137,-133,-90,28,-91,]),'WHILE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,23,32,46,47,81,82,84,85,87,88,89,90,91,92,93,95,96,97,109,152,153,156,172,187,203,205,229,236,241,242,244,249,254,258,269,284,290,293,294,297,303,307,308,312,313,316,317,318,321,324,328,329,331,333,334,336,339,340,341,342,343,344,345,],[29,29,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,29,-96,-1,-16,29,-109,-111,-112,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,-107,-94,-110,-103,-105,-18,29,29,-20,-115,-130,-90,-134,-116,-138,-136,29,-19,-114,-91,-124,29,29,-89,-135,29,29,29,29,-112,29,-27,29,-112,29,29,-26,-38,29,-21,-137,-133,-90,29,-91,]),'FOR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,23,32,46,47,81,82,84,85,87,88,89,90,91,92,93,95,96,97,109,152,153,156,172,187,203,205,229,236,241,242,244,249,254,258,269,284,290,293,294,297,303,307,308,312,313,316,317,318,321,324,328,329,331,333,334,336,339,340,341,342,343,344,345,],[30,30,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,30,-96,-1,-16,30,-109,-111,-112,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,-107,-94,-110,-103,-105,-18,30,30,-20,-115,-130,-90,-134,-116,-138,-136,30,-19,-114,-91,-124,30,30,-89,-135,30,30,30,30,-112,30,-27,30,-112,30,30,-26,-38,30,-21,-137,-133,-90,30,-91,]),'CLASS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,23,32,46,47,81,82,84,85,87,88,89,90,91,92,93,95,96,97,109,152,153,156,172,187,203,205,229,236,241,242,244,249,254,258,269,284,290,293,294,297,303,307,308,312,313,316,317,318,321,324,328,329,331,333,334,336,339,340,341,342,343,344,345,],[31,31,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,31,-96,-1,-16,31,-109,-111,-112,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,-107,-94,-110,-103,-105,-18,31,31,-20,-115,-130,-90,-134,-116,-138,-136,31,-19,-114,-91,-124,31,31,-89,-135,31,31,31,31,-112,31,-27,31,-112,31,31,-26,-38,31,-21,-137,-133,-90,31,-91,]),'LBRACE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,20,22,23,32,33,37,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,74,75,81,82,84,85,87,88,89,90,91,92,93,95,96,97,102,103,104,105,106,107,109,110,141,147,152,153,156,157,159,172,177,179,182,183,184,185,187,189,196,197,203,204,205,206,223,226,229,236,237,241,242,244,247,249,254,257,258,266,269,273,275,280,284,288,289,290,293,294,297,300,301,303,304,307,308,309,310,312,313,314,315,316,317,318,321,324,328,329,331,333,334,336,339,340,341,342,343,344,345,],[23,23,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,78,78,23,-96,78,78,78,78,-1,-16,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,23,-109,-111,-112,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,162,78,78,78,78,171,-107,173,78,78,-94,-110,-103,78,78,-105,78,-49,-46,-47,-48,-50,-18,78,78,78,23,243,23,78,78,78,-20,-115,78,-130,-90,-134,78,-116,-138,78,-136,-51,23,78,78,78,-19,312,313,-114,-91,-124,23,78,78,23,78,-89,-135,78,-44,23,23,331,78,23,23,-112,23,-27,23,-112,23,23,-26,-38,23,-21,-137,-133,-90,23,-91,]),'RETURN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,23,32,46,47,81,82,84,85,87,88,89,90,91,92,93,95,96,97,109,152,153,156,172,187,203,205,229,236,241,242,244,249,254,258,269,284,290,293,294,297,303,307,308,312,313,316,317,318,321,324,328,329,331,333,334,336,339,340,341,342,343,344,345,],[33,33,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,33,-96,-1,-16,33,-109,-111,-112,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,-107,-94,-110,-103,-105,-18,33,33,-20,-115,-130,-90,-134,-116,-138,-136,33,-19,-114,-91,-124,33,33,-89,-135,33,33,33,33,-112,33,-27,33,-112,33,33,-26,-38,33,-21,-137,-133,-90,33,-91,]),'INTERFACE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,32,46,47,82,87,88,89,90,91,92,93,95,96,97,109,152,156,172,187,229,236,241,242,244,249,254,258,284,290,293,294,307,308,324,334,336,340,341,342,343,345,],[34,34,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,-96,-1,-16,-109,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,-107,-94,-103,-105,-18,-20,-115,-130,-90,-134,-116,-138,-136,-19,-114,-91,-124,-89,-135,-27,-26,-38,-21,-137,-133,-90,-91,]),'IDENTIFIER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,20,21,22,23,24,26,31,32,33,34,37,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,75,78,81,82,84,85,87,88,89,90,91,92,93,95,96,97,99,101,103,104,105,106,109,140,141,147,150,152,153,155,156,157,159,160,162,168,169,172,173,176,177,181,187,189,196,197,200,203,205,206,216,217,219,220,221,223,226,229,232,236,237,240,241,242,244,246,247,248,249,253,254,255,257,258,261,263,269,273,275,279,280,284,287,290,291,293,294,297,300,301,303,304,306,307,308,309,312,313,315,316,317,318,321,324,328,329,331,333,334,336,339,340,341,342,343,344,345,],[19,19,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,73,77,79,77,98,100,102,107,-96,77,110,77,77,77,116,-1,-16,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,138,77,77,77,149,77,-109,-111,-112,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,158,161,77,77,77,77,-107,179,77,77,191,-94,-110,149,-103,77,77,179,201,207,208,-105,218,179,77,179,-18,77,77,234,191,77,77,77,251,252,218,-140,-141,77,77,-20,179,-115,77,201,-130,-90,-134,276,77,179,-116,179,-138,-139,77,-136,179,179,77,77,77,179,77,-19,191,-114,179,-91,-124,77,77,77,77,77,-142,-89,-135,77,77,77,77,77,77,-112,77,-27,77,-112,77,77,-26,-38,77,-21,-137,-133,-90,77,-91,]),'LBRACKET':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,22,23,32,33,36,37,38,39,40,41,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,74,75,76,77,80,81,82,84,85,87,88,89,90,91,92,93,94,95,96,97,98,103,104,105,106,108,109,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,146,147,151,152,153,154,156,157,159,160,163,164,165,167,172,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,195,196,197,198,199,203,205,206,222,223,224,225,226,228,229,231,232,234,236,237,241,242,244,245,247,248,249,253,254,257,258,259,260,261,262,263,265,266,269,273,275,277,278,279,280,281,283,284,285,286,288,290,291,293,294,296,297,298,300,301,303,304,305,307,308,309,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,328,329,331,332,333,334,336,339,340,341,342,343,344,345,],[20,20,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,70,-17,-82,20,20,20,-96,20,-81,20,-79,-80,-83,-84,20,20,-1,-16,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-85,-86,20,20,70,-82,70,20,-109,-111,-112,-95,-97,-98,-99,-100,-101,-102,70,-104,-106,-108,-82,20,20,20,20,70,-107,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-76,70,181,20,70,70,20,-75,-94,-110,-143,-103,20,20,181,70,70,70,70,-105,181,20,-77,-49,227,181,-46,-47,-48,-50,70,-18,-78,20,70,70,20,20,70,238,20,20,20,-73,20,238,70,20,238,-20,-45,181,-82,-115,20,-130,-90,-134,70,20,181,-116,181,-138,20,-136,70,-51,181,238,181,70,-51,20,20,20,70,238,181,20,238,70,-19,309,238,238,-114,181,-91,-124,70,20,70,20,20,20,20,238,-89,-135,20,-44,20,20,238,20,20,20,-112,-85,-86,20,70,70,-27,70,20,-112,20,70,20,-26,-38,20,-21,-137,-133,-90,20,-91,]),'PROMPT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,20,22,23,32,33,37,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,74,75,81,82,84,85,87,88,89,90,91,92,93,95,96,97,103,104,105,106,109,141,147,152,153,156,157,159,172,177,187,189,196,197,203,205,206,223,226,229,236,237,241,242,244,247,249,254,257,258,269,273,275,280,284,290,293,294,297,300,301,303,304,307,308,309,312,313,315,316,317,318,321,324,328,329,331,333,334,336,339,340,341,342,343,344,345,],[35,35,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,35,35,35,-96,35,35,35,35,-1,-16,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-109,-111,-112,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,35,35,35,35,-107,35,35,-94,-110,-103,35,35,-105,35,-18,35,35,35,35,35,35,35,35,-20,-115,35,-130,-90,-134,35,-116,-138,35,-136,35,35,35,35,-19,-114,-91,-124,35,35,35,35,35,-89,-135,35,35,35,35,35,35,-112,35,-27,35,-112,35,35,-26,-38,35,-21,-137,-133,-90,35,-91,]),'NOT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,20,22,23,32,33,37,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,74,75,81,82,84,85,87,88,89,90,91,92,93,95,96,97,103,104,105,106,109,141,147,152,153,156,157,159,172,177,187,189,196,197,203,205,206,223,226,229,236,237,241,242,244,247,249,254,257,258,269,273,275,280,284,290,293,294,297,300,301,303,304,307,308,309,312,313,315,316,317,318,321,324,328,329,331,333,334,336,339,340,341,342,343,344,345,],[37,37,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,37,37,37,-96,37,37,37,37,-1,-16,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-109,-111,-112,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,37,37,37,37,-107,37,37,-94,-110,-103,37,37,-105,37,-18,37,37,37,37,37,37,37,37,-20,-115,37,-130,-90,-134,37,-116,-138,37,-136,37,37,37,37,-19,-114,-91,-124,37,37,37,37,37,-89,-135,37,37,37,37,37,37,-112,37,-27,37,-112,37,37,-26,-38,37,-21,-137,-133,-90,37,-91,]),'LPAREN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,19,20,22,23,27,28,29,30,32,33,35,37,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,74,75,77,79,81,82,84,85,87,88,89,90,91,92,93,95,96,97,98,103,104,105,106,109,141,147,152,153,156,157,159,161,172,175,177,187,189,196,197,203,205,206,223,226,229,234,236,237,241,242,244,247,249,254,257,258,269,273,275,280,284,290,292,293,294,297,300,301,303,304,307,308,309,312,313,315,316,317,318,321,324,328,329,331,333,334,336,339,340,341,342,343,344,345,],[22,22,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,75,22,22,22,103,104,105,106,-96,22,111,22,22,22,-1,-16,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,75,150,22,-109,-111,-112,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,75,22,22,22,22,-107,22,22,-94,-110,-103,22,197,200,-105,223,22,-18,22,197,22,22,22,22,22,22,-20,75,-115,22,-130,-90,-134,22,-116,-138,22,-136,22,22,22,22,-19,-114,315,-91,-124,22,22,22,22,22,-89,-135,22,22,22,22,22,22,-112,22,-27,22,-112,22,22,-26,-38,22,-21,-137,-133,-90,22,-91,]),'NUMBER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,20,22,23,32,33,37,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,74,75,81,82,84,85,87,88,89,90,91,92,93,95,96,97,103,104,105,106,109,141,147,152,153,156,157,159,172,177,187,189,196,197,203,205,206,223,226,229,236,237,241,242,244,247,249,254,257,258,269,273,275,280,284,290,293,294,297,300,301,303,304,307,308,309,312,313,315,316,317,318,321,324,328,329,331,333,334,336,339,340,341,342,343,344,345,],[38,38,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,38,38,38,-96,38,38,38,38,-1,-16,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-109,-111,-112,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,38,38,38,38,-107,38,38,-94,-110,-103,38,38,-105,38,-18,38,38,38,38,38,38,38,38,-20,-115,38,-130,-90,-134,38,-116,-138,38,-136,38,38,38,38,-19,-114,-91,-124,38,38,38,38,38,-89,-135,38,38,38,38,38,38,-112,38,-27,38,-112,38,38,-26,-38,38,-21,-137,-133,-90,38,-91,]),'FLOAT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,20,22,23,32,33,37,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,74,75,81,82,84,85,87,88,89,90,91,92,93,95,96,97,103,104,105,106,109,141,147,152,153,156,157,159,172,177,187,189,196,197,203,205,206,223,226,229,236,237,241,242,244,247,249,254,257,258,269,273,275,280,284,290,293,294,297,300,301,303,304,307,308,309,312,313,315,316,317,318,321,324,328,329,331,333,334,336,339,340,341,342,343,344,345,],[39,39,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,39,39,39,-96,39,39,39,39,-1,-16,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-109,-111,-112,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,39,39,39,39,-107,39,39,-94,-110,-103,39,39,-105,39,-18,39,39,39,39,39,39,39,39,-20,-115,39,-130,-90,-134,39,-116,-138,39,-136,39,39,39,39,-19,-114,-91,-124,39,39,39,39,39,-89,-135,39,39,39,39,39,39,-112,39,-27,39,-112,39,39,-26,-38,39,-21,-137,-133,-90,39,-91,]),'STRING':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,20,22,23,32,33,37,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,74,75,81,82,84,85,87,88,89,90,91,92,93,95,96,97,103,104,105,106,109,111,141,147,152,153,156,157,159,172,177,187,189,196,197,203,205,206,223,226,229,236,237,241,242,244,247,249,254,257,258,269,273,275,280,284,290,293,294,297,300,301,303,304,307,308,309,312,313,315,316,317,318,321,324,328,329,331,333,334,336,339,340,341,342,343,344,345,],[36,36,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,36,36,36,-96,36,36,36,36,-1,-16,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-109,-111,-112,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,36,36,36,36,-107,174,36,36,-94,-110,-103,36,36,-105,36,-18,36,36,36,36,36,36,36,36,-20,-115,36,-130,-90,-134,36,-116,-138,36,-136,36,36,36,36,-19,-114,-91,-124,36,36,36,36,36,-89,-135,36,36,36,36,36,36,-112,36,-27,36,-112,36,36,-26,-38,36,-21,-137,-133,-90,36,-91,]),'TRUE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,20,22,23,32,33,37,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,74,75,81,82,84,85,87,88,89,90,91,92,93,95,96,97,103,104,105,106,109,141,147,152,153,156,157,159,172,177,187,189,196,197,203,205,206,223,226,229,236,237,241,242,244,247,249,254,257,258,269,273,275,280,284,290,293,294,297,300,301,303,304,307,308,309,312,313,315,316,317,318,321,324,328,329,331,333,334,336,339,340,341,342,343,344,345,],[40,40,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,40,40,40,-96,40,40,40,40,-1,-16,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-109,-111,-112,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,40,40,40,40,-107,40,40,-94,-110,-103,40,40,-105,40,-18,40,40,40,40,40,40,40,40,-20,-115,40,-130,-90,-134,40,-116,-138,40,-136,40,40,40,40,-19,-114,-91,-124,40,40,40,40,40,-89,-135,40,40,40,40,40,40,-112,40,-27,40,-112,40,40,-26,-38,40,-21,-137,-133,-90,40,-91,]),'FALSE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,20,22,23,32,33,37,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,74,75,81,82,84,85,87,88,89,90,91,92,93,95,96,97,103,104,105,106,109,141,147,152,153,156,157,159,172,177,187,189,196,197,203,205,206,223,226,229,236,237,241,242,244,247,249,254,257,258,269,273,275,280,284,290,293,294,297,300,301,303,304,307,308,309,312,313,315,316,317,318,321,324,328,329,331,333,334,336,339,340,341,342,343,344,345,],[41,41,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,41,41,41,-96,41,41,41,41,-1,-16,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-109,-111,-112,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,41,41,41,41,-107,41,41,-94,-110,-103,41,41,-105,41,-18,41,41,41,41,41,41,41,41,-20,-115,41,-130,-90,-134,41,-116,-138,41,-136,41,41,41,41,-19,-114,-91,-124,41,41,41,41,41,-89,-135,41,41,41,41,41,41,-112,41,-27,41,-112,41,41,-26,-38,41,-21,-137,-133,-90,41,-91,]),'PLUSPLUS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,22,23,32,33,36,37,38,39,40,41,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,74,75,76,77,80,81,82,84,85,87,88,89,90,91,92,93,94,95,96,97,98,103,104,105,106,108,109,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,146,147,151,152,153,154,156,157,159,163,164,165,167,172,177,178,186,187,188,189,190,195,196,197,198,203,205,206,222,223,225,226,229,231,234,236,237,241,242,244,245,247,249,254,257,258,259,265,269,273,275,277,280,283,284,290,293,294,296,297,298,300,301,303,304,307,308,309,312,313,315,316,317,318,319,320,321,322,323,324,325,328,329,331,332,333,334,336,339,340,341,342,343,344,345,],[42,42,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,71,-17,-82,42,42,42,-96,42,-81,42,-79,-80,-83,-84,42,42,-1,-16,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-85,-86,42,42,71,-82,71,42,-109,-111,-112,-95,-97,-98,-99,-100,-101,-102,71,-104,-106,-108,-82,42,42,42,42,71,-107,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-76,71,42,71,71,42,-75,-94,-110,-143,-103,42,42,71,71,71,71,-105,42,-77,71,-18,-78,42,71,71,42,42,71,42,42,42,-73,42,71,42,-20,-45,-82,-115,42,-130,-90,-134,71,42,-116,-138,42,-136,71,71,42,42,300,71,42,71,-19,-114,-91,-124,71,42,319,42,42,42,42,-89,-135,42,42,42,42,42,42,-112,-85,-86,42,71,71,-27,71,42,-112,42,71,42,-26,-38,42,-21,-137,-133,-90,42,-91,]),'MINUSMINUS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,22,23,32,33,36,37,38,39,40,41,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,74,75,76,77,80,81,82,84,85,87,88,89,90,91,92,93,94,95,96,97,98,103,104,105,106,108,109,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,146,147,151,152,153,154,156,157,159,163,164,165,167,172,177,178,186,187,188,189,190,195,196,197,198,203,205,206,222,223,225,226,229,231,234,236,237,241,242,244,245,247,249,254,257,258,259,265,269,273,275,277,280,283,284,290,293,294,296,297,298,300,301,303,304,307,308,309,312,313,315,316,317,318,319,320,321,322,323,324,325,328,329,331,332,333,334,336,339,340,341,342,343,344,345,],[43,43,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,72,-17,-82,43,43,43,-96,43,-81,43,-79,-80,-83,-84,43,43,-1,-16,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-85,-86,43,43,72,-82,72,43,-109,-111,-112,-95,-97,-98,-99,-100,-101,-102,72,-104,-106,-108,-82,43,43,43,43,72,-107,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-76,72,43,72,72,43,-75,-94,-110,-143,-103,43,43,72,72,72,72,-105,43,-77,72,-18,-78,43,72,72,43,43,72,43,43,43,-73,43,72,43,-20,-45,-82,-115,43,-130,-90,-134,72,43,-116,-138,43,-136,72,72,43,43,301,72,43,72,-19,-114,-91,-124,72,43,320,43,43,43,43,-89,-135,43,43,43,43,43,43,-112,-85,-86,43,72,72,-27,72,43,-112,43,72,43,-26,-38,43,-21,-137,-133,-90,43,-91,]),'CONSOLE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,23,32,46,47,81,82,84,85,87,88,89,90,91,92,93,95,96,97,109,152,153,156,172,187,203,205,229,236,241,242,244,249,254,258,269,284,290,293,294,297,303,307,308,312,313,316,317,318,321,324,328,329,331,333,334,336,339,340,341,342,343,344,345,],[44,44,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,44,-96,-1,-16,44,-109,-111,-112,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,-107,-94,-110,-103,-105,-18,44,44,-20,-115,-130,-90,-134,-116,-138,-136,44,-19,-114,-91,-124,44,44,-89,-135,44,44,44,44,-112,44,-27,44,-112,44,44,-26,-38,44,-21,-137,-133,-90,44,-91,]),'VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,23,32,46,47,81,82,84,85,87,88,89,90,91,92,93,95,96,97,109,152,153,156,171,172,187,203,205,209,210,211,212,213,214,215,229,236,241,242,244,249,250,254,258,269,284,290,293,294,297,303,307,308,312,313,316,317,318,321,324,328,329,331,333,334,336,339,340,341,342,343,344,345,],[45,45,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,45,-96,-1,-16,45,-109,-111,-112,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,-107,-94,-110,-103,45,-105,-18,45,45,45,-118,-119,-120,-121,-122,-123,-20,-115,-130,-90,-134,-116,-117,-138,-136,45,-19,-114,-91,-124,45,45,-89,-135,45,45,45,45,-112,45,-27,45,-112,45,45,-26,-38,45,-21,-137,-133,-90,45,-91,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,32,46,47,82,87,88,89,90,91,92,93,95,96,97,109,152,156,172,187,229,236,241,242,244,249,254,258,284,290,293,294,307,308,324,334,336,340,341,342,343,345,],[0,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,-96,-1,-16,-109,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,-107,-94,-103,-105,-18,-20,-115,-130,-90,-134,-116,-138,-136,-19,-114,-91,-124,-89,-135,-27,-26,-38,-21,-137,-133,-90,-91,]),'SEMICOLON':([16,19,33,36,38,39,40,41,71,72,77,94,98,106,108,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,142,151,154,166,167,170,178,179,182,183,184,185,186,188,198,222,225,231,245,259,265,266,277,281,282,283,310,325,335,337,],[47,-82,109,-81,-79,-80,-83,-84,-85,-86,-82,156,-82,-113,172,-74,-87,-88,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-76,187,-75,-143,206,-30,-31,-77,-49,-46,-47,-48,-50,229,-78,236,-73,258,-45,275,284,290,-51,-28,306,307,308,-44,-29,340,341,]),'PLUS':([16,19,36,38,39,40,41,71,72,76,77,80,94,98,108,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,142,146,151,154,163,164,165,167,178,186,188,190,195,198,222,225,231,234,245,259,265,277,283,296,298,319,320,322,323,325,332,],[48,-82,-81,-79,-80,-83,-84,-85,-86,48,-82,48,48,-82,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-76,48,48,48,-75,-143,48,48,48,48,-77,48,-78,48,48,48,-73,48,-45,-82,48,48,48,48,48,48,48,-85,-86,48,48,48,48,]),'MINUS':([16,19,36,38,39,40,41,71,72,76,77,80,94,98,108,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,142,146,151,154,163,164,165,167,178,186,188,190,195,198,222,225,231,234,245,259,265,277,283,296,298,319,320,322,323,325,332,],[49,-82,-81,-79,-80,-83,-84,-85,-86,49,-82,49,49,-82,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-76,49,49,49,-75,-143,49,49,49,49,-77,49,-78,49,49,49,-73,49,-45,-82,49,49,49,49,49,49,49,-85,-86,49,49,49,49,]),'TIMES':([16,19,36,38,39,40,41,71,72,76,77,80,94,98,108,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,142,146,151,154,163,164,165,167,178,186,188,190,195,198,222,225,231,234,245,259,265,277,283,296,298,319,320,322,323,325,332,],[50,-82,-81,-79,-80,-83,-84,-85,-86,50,-82,50,50,-82,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-76,50,50,50,-75,-143,50,50,50,50,-77,50,-78,50,50,50,-73,50,-45,-82,50,50,50,50,50,50,50,-85,-86,50,50,50,50,]),'DIV':([16,19,36,38,39,40,41,71,72,76,77,80,94,98,108,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,142,146,151,154,163,164,165,167,178,186,188,190,195,198,222,225,231,234,245,259,265,277,283,296,298,319,320,322,323,325,332,],[51,-82,-81,-79,-80,-83,-84,-85,-86,51,-82,51,51,-82,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-76,51,51,51,-75,-143,51,51,51,51,-77,51,-78,51,51,51,-73,51,-45,-82,51,51,51,51,51,51,51,-85,-86,51,51,51,51,]),'MOD':([16,19,36,38,39,40,41,71,72,76,77,80,94,98,108,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,142,146,151,154,163,164,165,167,178,186,188,190,195,198,222,225,231,234,245,259,265,277,283,296,298,319,320,322,323,325,332,],[52,-82,-81,-79,-80,-83,-84,-85,-86,52,-82,52,52,-82,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-76,52,52,52,-75,-143,52,52,52,52,-77,52,-78,52,52,52,-73,52,-45,-82,52,52,52,52,52,52,52,-85,-86,52,52,52,52,]),'PLUS_ASSIGN':([16,19,36,38,39,40,41,71,72,76,77,80,94,98,108,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,142,146,151,154,163,164,165,167,178,186,188,190,195,198,222,225,231,234,245,259,265,277,283,296,298,319,320,322,323,325,332,],[53,-82,-81,-79,-80,-83,-84,-85,-86,53,-82,53,53,-82,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-76,53,53,53,-75,-143,53,53,53,53,-77,53,-78,53,53,53,-73,53,-45,-82,53,53,53,53,53,53,53,-85,-86,53,53,53,53,]),'MINUS_ASSIGN':([16,19,36,38,39,40,41,71,72,76,77,80,94,98,108,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,142,146,151,154,163,164,165,167,178,186,188,190,195,198,222,225,231,234,245,259,265,277,283,296,298,319,320,322,323,325,332,],[54,-82,-81,-79,-80,-83,-84,-85,-86,54,-82,54,54,-82,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-76,54,54,54,-75,-143,54,54,54,54,-77,54,-78,54,54,54,-73,54,-45,-82,54,54,54,54,54,54,54,-85,-86,54,54,54,54,]),'MULT_ASSIGN':([16,19,36,38,39,40,41,71,72,76,77,80,94,98,108,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,142,146,151,154,163,164,165,167,178,186,188,190,195,198,222,225,231,234,245,259,265,277,283,296,298,319,320,322,323,325,332,],[55,-82,-81,-79,-80,-83,-84,-85,-86,55,-82,55,55,-82,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-76,55,55,55,-75,-143,55,55,55,55,-77,55,-78,55,55,55,-73,55,-45,-82,55,55,55,55,55,55,55,-85,-86,55,55,55,55,]),'DIV_ASSIGN':([16,19,36,38,39,40,41,71,72,76,77,80,94,98,108,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,142,146,151,154,163,164,165,167,178,186,188,190,195,198,222,225,231,234,245,259,265,277,283,296,298,319,320,322,323,325,332,],[56,-82,-81,-79,-80,-83,-84,-85,-86,56,-82,56,56,-82,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-76,56,56,56,-75,-143,56,56,56,56,-77,56,-78,56,56,56,-73,56,-45,-82,56,56,56,56,56,56,56,-85,-86,56,56,56,56,]),'MOD_ASSIGN':([16,19,36,38,39,40,41,71,72,76,77,80,94,98,108,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,142,146,151,154,163,164,165,167,178,186,188,190,195,198,222,225,231,234,245,259,265,277,283,296,298,319,320,322,323,325,332,],[57,-82,-81,-79,-80,-83,-84,-85,-86,57,-82,57,57,-82,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-76,57,57,57,-75,-143,57,57,57,57,-77,57,-78,57,57,57,-73,57,-45,-82,57,57,57,57,57,57,57,-85,-86,57,57,57,57,]),'POT':([16,19,36,38,39,40,41,71,72,76,77,80,94,98,108,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,142,146,151,154,163,164,165,167,178,186,188,190,195,198,222,225,231,234,245,259,265,277,283,296,298,319,320,322,323,325,332,],[58,-82,-81,-79,-80,-83,-84,-85,-86,58,-82,58,58,-82,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-76,58,58,58,-75,-143,58,58,58,58,-77,58,-78,58,58,58,-73,58,-45,-82,58,58,58,58,58,58,58,-85,-86,58,58,58,58,]),'AND':([16,19,36,38,39,40,41,71,72,76,77,80,94,98,108,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,142,146,151,154,163,164,165,167,178,186,188,190,195,198,222,225,231,234,245,259,265,277,283,296,298,319,320,322,323,325,332,],[59,-82,-81,-79,-80,-83,-84,-85,-86,59,-82,59,59,-82,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-76,59,59,59,-75,-143,59,59,59,59,-77,59,-78,59,59,59,-73,59,-45,-82,59,59,59,59,59,59,59,-85,-86,59,59,59,59,]),'OR':([16,19,36,38,39,40,41,71,72,76,77,80,94,98,108,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,142,146,151,154,163,164,165,167,178,186,188,190,195,198,222,225,231,234,245,259,265,277,283,296,298,319,320,322,323,325,332,],[60,-82,-81,-79,-80,-83,-84,-85,-86,60,-82,60,60,-82,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-76,60,60,60,-75,-143,60,60,60,60,-77,60,-78,60,60,60,-73,60,-45,-82,60,60,60,60,60,60,60,-85,-86,60,60,60,60,]),'EQ':([16,19,36,38,39,40,41,71,72,76,77,80,94,98,108,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,142,146,151,154,163,164,165,167,178,186,188,190,195,198,222,225,231,234,245,259,265,277,283,296,298,319,320,322,323,325,332,],[61,-82,-81,-79,-80,-83,-84,-85,-86,61,-82,61,61,-82,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-76,61,61,61,-75,-143,61,61,61,61,-77,61,-78,61,61,61,-73,61,-45,-82,61,61,61,61,61,61,61,-85,-86,61,61,61,61,]),'NEQ':([16,19,36,38,39,40,41,71,72,76,77,80,94,98,108,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,142,146,151,154,163,164,165,167,178,186,188,190,195,198,222,225,231,234,245,259,265,277,283,296,298,319,320,322,323,325,332,],[62,-82,-81,-79,-80,-83,-84,-85,-86,62,-82,62,62,-82,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-76,62,62,62,-75,-143,62,62,62,62,-77,62,-78,62,62,62,-73,62,-45,-82,62,62,62,62,62,62,62,-85,-86,62,62,62,62,]),'STRICT_EQ':([16,19,36,38,39,40,41,71,72,76,77,80,94,98,108,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,142,146,151,154,163,164,165,167,178,186,188,190,195,198,222,225,231,234,245,259,265,277,283,296,298,319,320,322,323,325,332,],[63,-82,-81,-79,-80,-83,-84,-85,-86,63,-82,63,63,-82,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-76,63,63,63,-75,-143,63,63,63,63,-77,63,-78,63,63,63,-73,63,-45,-82,63,63,63,63,63,63,63,-85,-86,63,63,63,63,]),'STRICT_NEQ':([16,19,36,38,39,40,41,71,72,76,77,80,94,98,108,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,142,146,151,154,163,164,165,167,178,186,188,190,195,198,222,225,231,234,245,259,265,277,283,296,298,319,320,322,323,325,332,],[64,-82,-81,-79,-80,-83,-84,-85,-86,64,-82,64,64,-82,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-76,64,64,64,-75,-143,64,64,64,64,-77,64,-78,64,64,64,-73,64,-45,-82,64,64,64,64,64,64,64,-85,-86,64,64,64,64,]),'LT':([16,19,36,38,39,40,41,71,72,76,77,80,94,98,108,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,142,146,151,154,163,164,165,167,178,186,188,190,195,198,222,225,231,234,245,259,265,277,283,296,298,319,320,322,323,325,332,],[65,-82,-81,-79,-80,-83,-84,-85,-86,65,-82,65,65,-82,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-76,65,65,65,-75,-143,65,65,65,65,-77,65,-78,65,65,65,-73,65,-45,-82,65,65,65,65,65,65,65,-85,-86,65,65,65,65,]),'GT':([16,19,36,38,39,40,41,71,72,76,77,80,94,98,108,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,142,146,151,154,163,164,165,167,178,186,188,190,195,198,222,225,231,234,245,259,265,277,283,296,298,319,320,322,323,325,332,],[66,-82,-81,-79,-80,-83,-84,-85,-86,66,-82,66,66,-82,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-76,66,66,66,-75,-143,66,66,66,66,-77,66,-78,66,66,66,-73,66,-45,-82,66,66,66,66,66,66,66,-85,-86,66,66,66,66,]),'LE':([16,19,36,38,39,40,41,71,72,76,77,80,94,98,108,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,142,146,151,154,163,164,165,167,178,186,188,190,195,198,222,225,231,234,245,259,265,277,283,296,298,319,320,322,323,325,332,],[67,-82,-81,-79,-80,-83,-84,-85,-86,67,-82,67,67,-82,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-76,67,67,67,-75,-143,67,67,67,67,-77,67,-78,67,67,67,-73,67,-45,-82,67,67,67,67,67,67,67,-85,-86,67,67,67,67,]),'GE':([16,19,36,38,39,40,41,71,72,76,77,80,94,98,108,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,142,146,151,154,163,164,165,167,178,186,188,190,195,198,222,225,231,234,245,259,265,277,283,296,298,319,320,322,323,325,332,],[68,-82,-81,-79,-80,-83,-84,-85,-86,68,-82,68,68,-82,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-76,68,68,68,-75,-143,68,68,68,68,-77,68,-78,68,68,68,-73,68,-45,-82,68,68,68,68,68,68,68,-85,-86,68,68,68,68,]),'DOT':([16,19,36,38,39,40,41,44,71,72,76,77,80,94,98,108,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,142,146,151,154,163,164,165,167,178,186,188,190,195,198,222,225,231,234,245,259,265,277,283,296,298,319,320,322,323,325,332,],[69,-82,-81,-79,-80,-83,-84,115,-85,-86,69,-82,69,69,-82,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-76,69,69,69,-75,-143,69,69,69,69,-77,69,-78,69,69,69,-73,69,-45,-82,69,69,69,69,69,69,69,-85,-86,69,69,69,69,]),'EQUAL':([19,73,100,116,158,179,180,182,183,184,185,199,208,224,251,252,260,266,278,305,310,],[74,141,159,177,196,-49,226,-46,-47,-48,-50,237,247,257,141,280,285,-51,304,226,-44,]),'RBRACE':([23,32,36,38,39,40,41,71,72,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,109,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,148,151,152,153,154,155,156,171,172,173,178,188,194,195,201,202,209,210,211,212,213,214,215,219,220,221,222,229,231,236,242,243,244,249,250,255,258,268,270,271,272,284,290,293,294,295,297,306,307,308,312,313,316,317,318,324,327,328,329,330,331,333,334,336,338,340,341,342,343,345,],[82,-96,-81,-79,-80,-83,-84,-85,-86,-82,-113,152,-109,154,-111,-112,-144,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,-107,-74,-87,-88,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-76,-146,-75,-94,-110,-143,-113,-103,-113,-105,-113,-77,-78,-145,-147,-131,241,249,-118,-119,-120,-121,-122,-123,254,-140,-141,-73,-20,-45,-115,-90,-113,-134,-116,-117,-139,-136,-132,294,-126,-127,-19,-114,-91,-124,-125,-113,-142,-89,-135,-113,-113,-113,-129,-112,-27,336,-42,-43,337,-113,-128,-26,-38,342,-21,-137,-133,-90,-91,]),'ELSE':([32,82,87,88,89,90,91,92,93,95,96,97,109,152,156,172,229,236,242,244,249,258,284,290,293,294,307,308,324,334,336,340,341,342,343,345,],[-96,-109,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,-107,-94,-103,-105,-20,-115,269,-134,-116,-136,-19,-114,-91,-124,-89,-135,-27,-26,-38,-21,-137,-133,344,-91,]),'CASE':([32,82,84,87,88,89,90,91,92,93,95,96,97,109,152,153,156,172,229,236,242,243,244,249,258,270,271,272,284,290,293,294,295,297,307,308,316,317,318,324,333,334,336,340,341,342,343,345,],[-96,-109,-111,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,-107,-94,-110,-103,-105,-20,-115,-90,273,-134,-116,-136,273,-126,-127,-19,-114,-91,-124,-125,-113,-89,-135,-113,-129,-112,-27,-128,-26,-38,-21,-137,-133,-90,-91,]),'DEFAULT':([32,82,84,87,88,89,90,91,92,93,95,96,97,109,152,153,156,172,229,236,242,243,244,249,258,270,271,272,284,290,293,294,295,297,307,308,316,317,318,324,333,334,336,340,341,342,343,345,],[-96,-109,-111,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,-107,-94,-110,-103,-105,-20,-115,-90,274,-134,-116,-136,274,-126,-127,-19,-114,-91,-124,-125,-113,-89,-135,-113,-129,-112,-27,-128,-26,-38,-21,-137,-133,-90,-91,]),'COMMA':([36,38,39,40,41,71,72,76,77,86,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,151,154,178,179,182,183,184,185,188,195,201,222,228,231,262,266,310,],[-81,-79,-80,-83,-84,-85,-86,147,-82,155,-74,-87,-88,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-76,189,-75,-143,-77,-49,-46,-47,-48,-50,-78,-147,240,-73,261,-45,287,-51,-44,]),'RPAREN':([36,38,39,40,41,71,72,75,77,80,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,143,144,145,146,150,151,154,163,164,165,174,178,179,182,183,184,185,188,192,193,197,200,222,223,230,231,234,235,239,256,262,266,275,276,287,298,299,302,310,311,319,320,322,323,332,],[-81,-79,-80,-83,-84,-85,-86,-113,-82,151,-74,-87,-88,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-76,188,-22,-23,-24,-113,-75,-143,203,204,205,222,-77,-49,-46,-47,-48,-50,-78,233,-41,-113,-113,-73,-113,-25,-45,-82,264,267,282,-39,-51,-113,303,-113,-32,321,-37,-44,-40,-33,-34,-35,-36,339,]),'RBRACKET':([36,38,39,40,41,71,72,77,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,151,154,178,179,182,183,184,185,188,190,222,227,230,231,238,266,286,309,310,326,],[-81,-79,-80,-83,-84,-85,-86,-82,-74,-87,-88,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-76,178,-22,-23,-24,-75,-143,-77,-49,-46,-47,-48,-50,-78,231,-73,260,-25,-45,266,-51,310,-113,-44,335,]),'COLON':([36,38,39,40,41,71,72,73,77,98,100,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,149,151,154,158,178,188,191,208,218,222,231,233,234,251,252,267,274,296,],[-81,-79,-80,-83,-84,-85,-86,140,-82,157,160,-74,-87,-88,176,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-76,157,-75,-143,160,-77,-78,232,248,253,-73,-45,263,232,279,160,291,297,316,]),'LOG':([115,],[175,]),'NUMBER_TYPE':([140,160,176,181,232,248,253,261,263,279,291,],[182,182,182,182,182,182,182,182,182,182,182,]),'STRING_TYPE':([140,160,176,181,232,248,253,261,263,279,291,],[183,183,183,183,183,183,183,183,183,183,183,]),'BOOLEAN_TYPE':([140,160,176,181,232,248,253,261,263,279,291,],[184,184,184,184,184,184,184,184,184,184,184,]),'VOID':([140,160,176,181,232,248,253,261,263,279,291,],[185,185,185,185,185,185,185,185,185,185,185,]),'OF':([207,],[246,]),'ARROW':([264,],[289,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'element':([0,1,],[2,46,]),'letAssignment':([0,1,23,81,171,203,205,209,269,297,303,312,313,316,317,321,328,331,333,339,344,],[3,3,87,87,213,87,87,213,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'declaracion':([0,1,23,81,203,205,269,297,303,312,313,316,317,321,328,331,333,339,344,],[4,4,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'function':([0,1,23,81,171,203,205,209,269,297,303,312,313,316,317,321,328,331,333,339,344,],[5,5,90,90,212,90,90,212,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'arrow_function':([0,1,23,81,203,205,269,297,303,312,313,316,317,321,328,331,333,339,344,],[6,6,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'async_function':([0,1,23,81,203,205,269,297,303,312,313,316,317,321,328,331,333,339,344,],[7,7,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'constAssignment':([0,1,23,81,171,203,205,209,269,297,303,312,313,316,317,321,328,331,333,339,344,],[8,8,88,88,215,88,88,215,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'enum_definition':([0,1,],[9,9,]),'controlEstructure':([0,1,23,81,203,205,269,297,303,312,313,316,317,321,328,331,333,339,344,],[10,10,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'forEstructure':([0,1,23,81,203,205,269,297,303,312,313,316,317,321,328,331,333,339,344,],[11,11,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'class_definition':([0,1,23,81,203,205,269,297,303,312,313,316,317,321,328,331,333,339,344,],[12,12,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'statement':([0,1,23,81,203,205,269,297,303,312,313,316,317,321,328,331,333,339,344,],[13,13,84,153,242,244,293,84,324,84,84,84,153,334,153,84,153,343,345,]),'interface':([0,1,],[14,14,]),'assignment':([0,1,],[15,15,]),'expression':([0,1,20,22,23,33,37,42,43,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,74,75,81,103,104,105,106,141,147,157,159,177,189,196,197,203,205,206,223,226,237,247,257,269,273,275,280,297,300,301,303,304,309,312,313,315,316,317,321,328,331,333,339,344,],[16,16,76,80,94,108,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,142,146,94,163,164,165,167,186,190,195,198,225,146,198,80,94,94,245,146,259,265,277,283,94,296,298,198,94,322,323,94,325,146,94,94,332,94,94,94,94,94,94,94,94,]),'consolelog':([0,1,23,81,203,205,269,297,303,312,313,316,317,321,328,331,333,339,344,],[17,17,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'varAssignment':([0,1,23,81,171,203,205,209,269,297,303,312,313,316,317,321,328,331,333,339,344,],[32,32,32,32,214,32,32,214,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'instruction_list':([23,297,312,313,316,331,],[81,317,328,328,333,328,]),'object_properties':([23,78,155,],[83,83,194,]),'empty':([23,75,78,106,150,155,171,173,197,200,223,243,275,287,297,309,312,313,316,331,],[85,145,148,170,193,148,211,221,193,193,145,272,302,193,318,145,329,329,318,329,]),'object_property':([23,78,155,],[86,86,86,]),'lista_expresiones_opt':([75,223,309,],[143,256,326,]),'lista_expresiones':([75,189,223,309,],[144,230,144,144,]),'for_init':([106,],[166,]),'type':([140,160,176,181,232,248,253,261,263,279,291,],[180,199,224,228,262,278,281,286,288,305,314,]),'parameters':([150,197,200,287,],[192,235,239,311,]),'enum_members':([162,240,],[202,268,]),'class_body':([171,],[209,]),'class_element':([171,209,],[210,250,]),'interface_body':([173,],[219,]),'interface_property':([173,219,],[220,255,]),'case_block':([243,],[270,]),'case':([243,270,],[271,295,]),'for_update':([275,],[299,]),'body_function':([312,313,331,],[327,330,338,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program element','program',2,'p_program','parser.py',17),
  ('program -> element','program',1,'p_program','parser.py',18),
  ('element -> letAssignment','element',1,'p_element','parser.py',22),
  ('element -> declaracion','element',1,'p_element','parser.py',23),
  ('element -> function','element',1,'p_element','parser.py',24),
  ('element -> arrow_function','element',1,'p_element','parser.py',25),
  ('element -> async_function','element',1,'p_element','parser.py',26),
  ('element -> constAssignment','element',1,'p_element','parser.py',27),
  ('element -> enum_definition','element',1,'p_element','parser.py',28),
  ('element -> controlEstructure','element',1,'p_element','parser.py',29),
  ('element -> forEstructure','element',1,'p_element','parser.py',30),
  ('element -> class_definition','element',1,'p_element','parser.py',31),
  ('element -> statement','element',1,'p_element','parser.py',32),
  ('element -> interface','element',1,'p_element','parser.py',33),
  ('element -> assignment','element',1,'p_element','parser.py',34),
  ('element -> expression SEMICOLON','element',2,'p_element','parser.py',35),
  ('element -> consolelog','element',1,'p_element','parser.py',36),
  ('assignment -> IDENTIFIER EQUAL expression SEMICOLON','assignment',4,'p_assignment','parser.py',41),
  ('letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON','letAssignment',7,'p_letAssignment','parser.py',63),
  ('letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON','letAssignment',5,'p_letAssignment_no_type','parser.py',75),
  ('declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON','declaracion',11,'p_declaracion','parser.py',83),
  ('lista_expresiones_opt -> lista_expresiones','lista_expresiones_opt',1,'p_lista_expresiones_opt','parser.py',87),
  ('lista_expresiones_opt -> empty','lista_expresiones_opt',1,'p_lista_expresiones_opt','parser.py',88),
  ('lista_expresiones -> expression','lista_expresiones',1,'p_lista_expresiones','parser.py',92),
  ('lista_expresiones -> expression COMMA lista_expresiones','lista_expresiones',3,'p_lista_expresiones','parser.py',93),
  ('forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement','forEstructure',9,'p_forEstructure','parser.py',98),
  ('forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement','forEstructure',8,'p_for_of_structure','parser.py',102),
  ('for_init -> LET IDENTIFIER EQUAL expression','for_init',4,'p_for_init','parser.py',106),
  ('for_init -> LET IDENTIFIER COLON type EQUAL expression','for_init',6,'p_for_init','parser.py',107),
  ('for_init -> expression','for_init',1,'p_for_init','parser.py',108),
  ('for_init -> empty','for_init',1,'p_for_init','parser.py',109),
  ('for_update -> expression','for_update',1,'p_for_update','parser.py',130),
  ('for_update -> expression PLUSPLUS','for_update',2,'p_for_update','parser.py',131),
  ('for_update -> expression MINUSMINUS','for_update',2,'p_for_update','parser.py',132),
  ('for_update -> PLUSPLUS expression','for_update',2,'p_for_update','parser.py',133),
  ('for_update -> MINUSMINUS expression','for_update',2,'p_for_update','parser.py',134),
  ('for_update -> empty','for_update',1,'p_for_update','parser.py',135),
  ('function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE','function',10,'p_function','parser.py',140),
  ('parameters -> IDENTIFIER COLON type','parameters',3,'p_parameters','parser.py',151),
  ('parameters -> IDENTIFIER COLON type COMMA parameters','parameters',5,'p_parameters','parser.py',152),
  ('parameters -> empty','parameters',1,'p_parameters','parser.py',153),
  ('body_function -> instruction_list','body_function',1,'p_body_function','parser.py',166),
  ('body_function -> empty','body_function',1,'p_body_function','parser.py',167),
  ('type -> LBRACKET type COMMA type RBRACKET','type',5,'p_type_tuple','parser.py',172),
  ('expression -> LBRACKET expression COMMA expression RBRACKET','expression',5,'p_expression_tuple','parser.py',176),
  ('type -> NUMBER_TYPE','type',1,'p_type','parser.py',181),
  ('type -> STRING_TYPE','type',1,'p_type','parser.py',182),
  ('type -> BOOLEAN_TYPE','type',1,'p_type','parser.py',183),
  ('type -> IDENTIFIER','type',1,'p_type','parser.py',184),
  ('type -> VOID','type',1,'p_type','parser.py',185),
  ('type -> type LBRACKET RBRACKET','type',3,'p_type','parser.py',186),
  ('expression -> expression PLUS expression','expression',3,'p_expression_plus','parser.py',228),
  ('expression -> expression MINUS expression','expression',3,'p_expression_minus','parser.py',252),
  ('expression -> expression TIMES expression','expression',3,'p_expression_times','parser.py',265),
  ('expression -> expression DIV expression','expression',3,'p_expression_div','parser.py',278),
  ('expression -> expression MOD expression','expression',3,'p_expression_mod','parser.py',292),
  ('expression -> expression PLUS_ASSIGN expression','expression',3,'p_expression_plus_assign','parser.py',305),
  ('expression -> expression MINUS_ASSIGN expression','expression',3,'p_expression_minus_assign','parser.py',309),
  ('expression -> expression MULT_ASSIGN expression','expression',3,'p_expression_mult_assign','parser.py',313),
  ('expression -> expression DIV_ASSIGN expression','expression',3,'p_expression_div_assign','parser.py',317),
  ('expression -> expression MOD_ASSIGN expression','expression',3,'p_expression_mod_assign','parser.py',321),
  ('expression -> expression POT expression','expression',3,'p_expression_pot','parser.py',325),
  ('expression -> expression AND expression','expression',3,'p_expression_and','parser.py',329),
  ('expression -> expression OR expression','expression',3,'p_expression_or','parser.py',333),
  ('expression -> expression EQ expression','expression',3,'p_expression_eq','parser.py',337),
  ('expression -> expression NEQ expression','expression',3,'p_expression_neq','parser.py',341),
  ('expression -> expression STRICT_EQ expression','expression',3,'p_expression_strict_eq','parser.py',345),
  ('expression -> expression STRICT_NEQ expression','expression',3,'p_expression_strict_neq','parser.py',349),
  ('expression -> expression LT expression','expression',3,'p_expression_lt','parser.py',353),
  ('expression -> expression GT expression','expression',3,'p_expression_gt','parser.py',357),
  ('expression -> expression LE expression','expression',3,'p_expression_le','parser.py',361),
  ('expression -> expression GE expression','expression',3,'p_expression_ge','parser.py',365),
  ('expression -> PROMPT LPAREN STRING RPAREN','expression',4,'p_expression_prompt','parser.py',369),
  ('expression -> NOT expression','expression',2,'p_expression_not','parser.py',374),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','parser.py',378),
  ('expression -> expression DOT IDENTIFIER','expression',3,'p_expression_dot_identifier','parser.py',383),
  ('expression -> expression LBRACKET expression RBRACKET','expression',4,'p_expression_bracket','parser.py',387),
  ('expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN','expression',4,'p_expression_call','parser.py',391),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',403),
  ('expression -> FLOAT','expression',1,'p_expression_float','parser.py',408),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',413),
  ('expression -> IDENTIFIER','expression',1,'p_expression_identifier','parser.py',418),
  ('expression -> TRUE','expression',1,'p_expression_true','parser.py',430),
  ('expression -> FALSE','expression',1,'p_expression_false','parser.py',435),
  ('expression -> expression PLUSPLUS','expression',2,'p_expression_increment','parser.py',441),
  ('expression -> expression MINUSMINUS','expression',2,'p_expression_increment','parser.py',442),
  ('expression -> PLUSPLUS expression','expression',2,'p_expression_increment','parser.py',443),
  ('expression -> MINUSMINUS expression','expression',2,'p_expression_increment','parser.py',444),
  ('consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON','consolelog',7,'p_consolelog','parser.py',448),
  ('controlEstructure -> IF LPAREN expression RPAREN statement','controlEstructure',5,'p_controlEstructure','parser.py',453),
  ('controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement','controlEstructure',7,'p_controlEstructure','parser.py',454),
  ('controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement','controlEstructure',11,'p_controlEstructure','parser.py',455),
  ('controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement','controlEstructure',13,'p_controlEstructure','parser.py',456),
  ('statement -> LBRACE instruction_list RBRACE','statement',3,'p_statement','parser.py',461),
  ('statement -> letAssignment','statement',1,'p_statement','parser.py',462),
  ('statement -> varAssignment','statement',1,'p_statement','parser.py',463),
  ('statement -> constAssignment','statement',1,'p_statement','parser.py',464),
  ('statement -> declaracion','statement',1,'p_statement','parser.py',465),
  ('statement -> function','statement',1,'p_statement','parser.py',466),
  ('statement -> arrow_function','statement',1,'p_statement','parser.py',467),
  ('statement -> async_function','statement',1,'p_statement','parser.py',468),
  ('statement -> consolelog','statement',1,'p_statement','parser.py',469),
  ('statement -> expression SEMICOLON','statement',2,'p_statement','parser.py',470),
  ('statement -> controlEstructure','statement',1,'p_statement','parser.py',471),
  ('statement -> RETURN expression SEMICOLON','statement',3,'p_statement','parser.py',472),
  ('statement -> forEstructure','statement',1,'p_statement','parser.py',473),
  ('statement -> RETURN SEMICOLON','statement',2,'p_statement','parser.py',474),
  ('statement -> class_definition','statement',1,'p_statement','parser.py',475),
  ('statement -> LBRACE RBRACE','statement',2,'p_statement_block','parser.py',481),
  ('instruction_list -> instruction_list statement','instruction_list',2,'p_instruction_list','parser.py',486),
  ('instruction_list -> statement','instruction_list',1,'p_instruction_list','parser.py',487),
  ('instruction_list -> empty','instruction_list',1,'p_instruction_list','parser.py',488),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',493),
  ('constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON','constAssignment',7,'p_constAssignment','parser.py',513),
  ('constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON','constAssignment',5,'p_constAssignment_no_type','parser.py',517),
  ('class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE','class_definition',5,'p_class_definition','parser.py',523),
  ('class_body -> class_body class_element','class_body',2,'p_class_body','parser.py',527),
  ('class_body -> class_element','class_body',1,'p_class_body','parser.py',528),
  ('class_body -> empty','class_body',1,'p_class_body','parser.py',529),
  ('class_element -> function','class_element',1,'p_class_element','parser.py',533),
  ('class_element -> letAssignment','class_element',1,'p_class_element','parser.py',534),
  ('class_element -> varAssignment','class_element',1,'p_class_element','parser.py',535),
  ('class_element -> constAssignment','class_element',1,'p_class_element','parser.py',536),
  ('controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE','controlEstructure',7,'p_controlEstructure_switch','parser.py',542),
  ('case_block -> case_block case','case_block',2,'p_case_block','parser.py',546),
  ('case_block -> case','case_block',1,'p_case_block','parser.py',547),
  ('case_block -> empty','case_block',1,'p_case_block','parser.py',548),
  ('case -> CASE expression COLON instruction_list','case',4,'p_case','parser.py',552),
  ('case -> DEFAULT COLON instruction_list','case',3,'p_case','parser.py',553),
  ('enum_definition -> ENUM IDENTIFIER LBRACE enum_members RBRACE','enum_definition',5,'p_enum_definition','parser.py',559),
  ('enum_members -> IDENTIFIER','enum_members',1,'p_enum_members','parser.py',563),
  ('enum_members -> IDENTIFIER COMMA enum_members','enum_members',3,'p_enum_members','parser.py',564),
  ('async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE','async_function',11,'p_async_function','parser.py',570),
  ('controlEstructure -> WHILE LPAREN expression RPAREN statement','controlEstructure',5,'p_controlEstructure_while','parser.py',583),
  ('varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON','varAssignment',7,'p_varAssignment','parser.py',590),
  ('varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON','varAssignment',5,'p_varAssignment_no_type','parser.py',594),
  ('arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON','arrow_function',11,'p_arrow_function','parser.py',599),
  ('interface -> INTERFACE IDENTIFIER LBRACE interface_body RBRACE','interface',5,'p_interface','parser.py',606),
  ('interface_body -> interface_body interface_property','interface_body',2,'p_interface_body','parser.py',610),
  ('interface_body -> interface_property','interface_body',1,'p_interface_body','parser.py',611),
  ('interface_body -> empty','interface_body',1,'p_interface_body','parser.py',612),
  ('interface_property -> IDENTIFIER COLON type SEMICOLON','interface_property',4,'p_interface_property','parser.py',616),
  ('expression -> LBRACE object_properties RBRACE','expression',3,'p_expression_variables','parser.py',621),
  ('object_properties -> object_property','object_properties',1,'p_object_properties','parser.py',625),
  ('object_properties -> object_property COMMA object_properties','object_properties',3,'p_object_properties','parser.py',626),
  ('object_properties -> empty','object_properties',1,'p_object_properties','parser.py',627),
  ('object_property -> IDENTIFIER COLON expression','object_property',3,'p_object_property','parser.py',631),
]
