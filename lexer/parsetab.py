
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAND ANY ARROW AS ASYNC AWAIT BIGINT_TYPE BOOLEAN_TYPE BREAK CASE CATCH CLASS COLON COMMA CONSOLE CONST CONTINUE DEFAULT DIV DIV_ASSIGN DOT ELSE ENUM EQ EQUAL EXPORT FALSE FINALLY FLOAT FOR FUNCTION GE GT IDENTIFIER IF IMPORT INTERFACE LBRACE LBRACKET LE LET LOG LPAREN LT MINUS MINUSMINUS MINUS_ASSIGN MOD MOD_ASSIGN MULT_ASSIGN NEQ NEW NOT NULL_TYPE NUMBER NUMBER_TYPE OF OR PLUS PLUSPLUS PLUS_ASSIGN POT PRIVATE PROMPT PROTECTED PUBLIC RBRACE RBRACKET RETURN RPAREN SEMICOLON STATIC STRICT_EQ STRICT_NEQ STRING STRING_TYPE SUPER SWITCH SYMBOL_TYPE THIS TIMES TRUE TRY TYPE UNDEFINED_TYPE VAR VOID WHILEprogram : program element\n               | elementelement : letAssignment\n               | declaracion\n               | function\n               | arrow_function\n               | async_function\n               | constAssignment\n               | enum_definition\n               | controlEstructure\n               | forEstructure\n               | class_definition\n               | statement\n               | interface\n               | assignment\n               | expression SEMICOLON\n               | consolelogassignment : IDENTIFIER EQUAL expression SEMICOLONletAssignment : LET IDENTIFIER COLON type EQUAL expression SEMICOLONletAssignment : LET IDENTIFIER EQUAL expression SEMICOLONdeclaracion : LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLONlista_expresiones_opt : lista_expresiones\n                            | emptylista_expresiones : expression\n                        | expression COMMA lista_expresionesforEstructure : FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statementforEstructure : FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statementfor_init : LET IDENTIFIER EQUAL expression\n                | LET IDENTIFIER COLON type EQUAL expression\n                | expression\n                | emptyfor_update : expression\n                  | expression PLUSPLUS\n                  | expression MINUSMINUS\n                  | PLUSPLUS expression\n                  | MINUSMINUS expression\n                  | emptyfunction : FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACEparameters : IDENTIFIER COLON type\n                | IDENTIFIER COLON type COMMA parameters\n                | emptybody_function : instruction_list\n                    | emptytype : LBRACKET type COMMA type RBRACKETexpression : LBRACKET expression COMMA expression RBRACKETtype : NUMBER_TYPE\n            | STRING_TYPE\n            | BOOLEAN_TYPE\n            | IDENTIFIER\n            | VOID\n            | type LBRACKET RBRACKETexpression : expression PLUS expression\n                | expression MINUS expression\n                | expression TIMES expression\n                | expression DIV expression\n                | expression MOD expression\n                | expression PLUS_ASSIGN expression\n                | expression MINUS_ASSIGN expression\n                | expression MULT_ASSIGN expression\n                | expression DIV_ASSIGN expression\n                | expression MOD_ASSIGN expression\n                | expression POT expression\n                | expression AND expression\n                | expression OR expression\n                | expression EQ expression\n                | expression NEQ expression\n                | expression STRICT_EQ expression\n                | expression STRICT_NEQ expression\n                | expression LT expression\n                | expression GT expression\n                | expression LE expression\n                | expression GE expression\n                | PROMPT LPAREN STRING RPAREN\n                | NOT expression\n                | LPAREN expression RPAREN\n                | expression DOT IDENTIFIER\n                | expression LBRACKET expression RBRACKET\n                | IDENTIFIER LPAREN lista_expresiones_opt RPAREN\n                | NUMBER\n                | FLOAT\n                | STRING\n                | IDENTIFIER\n                | TRUE\n                | FALSEexpression : expression PLUSPLUS\n                    | expression MINUSMINUS\n                    | PLUSPLUS expression\n                    | MINUSMINUS expressionconsolelog : CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLONcontrolEstructure : IF LPAREN expression RPAREN statement \n                        | IF LPAREN expression RPAREN statement ELSE statement \n                        | IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement \n                        | IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statementstatement : LBRACE instruction_list RBRACE\n                 | letAssignment\n                 | varAssignment\n                 | constAssignment\n                 | declaracion\n                 | function\n                 | arrow_function\n                 | async_function\n                 | consolelog\n                 | expression SEMICOLON\n                 | controlEstructure\n                 | RETURN expression SEMICOLON\n                 | forEstructure\n                 | RETURN SEMICOLON\n                 | class_definitioninstruction_list : instruction_list statement\n                        | statement\n                        | emptyempty :constAssignment : CONST IDENTIFIER COLON type EQUAL expression SEMICOLONconstAssignment : CONST IDENTIFIER EQUAL expression SEMICOLONclass_definition : CLASS IDENTIFIER LBRACE class_body RBRACEclass_body : class_body class_element\n                  | class_element\n                  | emptyclass_element : function\n                     | letAssignment\n                     | varAssignment\n                     | constAssignmentcontrolEstructure : SWITCH LPAREN expression RPAREN LBRACE case_block RBRACEcase_block : case_block case\n                  | case\n                  | emptycase : CASE expression COLON instruction_list\n            | DEFAULT COLON instruction_listenum_definition : ENUM IDENTIFIER LBRACE enum_members RBRACEenum_members : IDENTIFIER\n                    | IDENTIFIER COMMA enum_membersasync_function : ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACEcontrolEstructure : WHILE LPAREN expression RPAREN statementvarAssignment : VAR IDENTIFIER COLON type EQUAL expression SEMICOLONvarAssignment : VAR IDENTIFIER EQUAL expression SEMICOLONarrow_function : CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLONinterface : INTERFACE IDENTIFIER LBRACE interface_body RBRACEinterface_body : interface_body interface_property\n                      | interface_property\n                      | emptyinterface_property : IDENTIFIER COLON type SEMICOLONexpression : LBRACE object_properties RBRACEobject_properties : object_property\n                         | object_property COMMA object_properties\n                         | emptyobject_property : IDENTIFIER COLON expression'
    
_lr_action_items = {'LET':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,23,32,46,47,81,83,84,86,87,88,89,90,91,92,94,95,96,105,108,151,152,155,170,171,186,202,204,208,209,210,211,212,213,214,228,235,240,241,243,248,249,253,257,268,283,289,292,293,296,302,306,307,311,312,315,316,317,320,323,327,328,330,332,333,335,338,339,340,341,342,343,344,],[18,18,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,18,-96,-1,-16,18,-110,-111,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,168,-107,-94,-109,-103,215,-105,-18,18,18,215,-117,-118,-119,-120,-121,-122,-20,-114,-129,-90,-133,-115,-116,-137,-135,18,-19,-113,-91,-123,18,18,-89,-134,18,18,18,18,-111,18,-27,18,-111,18,18,-26,-38,18,-21,-136,-132,-90,18,-91,]),'FUNCTION':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,23,25,32,46,47,81,83,84,86,87,88,89,90,91,92,94,95,96,108,151,152,155,170,171,186,202,204,208,209,210,211,212,213,214,228,235,240,241,243,248,249,253,257,268,283,289,292,293,296,302,306,307,311,312,315,316,317,320,323,327,328,330,332,333,335,338,339,340,341,342,343,344,],[21,21,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,21,100,-96,-1,-16,21,-110,-111,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,-107,-94,-109,-103,21,-105,-18,21,21,21,-117,-118,-119,-120,-121,-122,-20,-114,-129,-90,-133,-115,-116,-137,-135,21,-19,-113,-91,-123,21,21,-89,-134,21,21,21,21,-111,21,-27,21,-111,21,21,-26,-38,21,-21,-136,-132,-90,21,-91,]),'CONST':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,23,32,46,47,81,83,84,86,87,88,89,90,91,92,94,95,96,105,108,151,152,155,170,171,186,202,204,208,209,210,211,212,213,214,228,235,240,241,243,248,249,253,257,268,283,289,292,293,296,302,306,307,311,312,315,316,317,320,323,327,328,330,332,333,335,338,339,340,341,342,343,344,],[24,24,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,98,-96,-1,-16,98,-110,-111,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,167,-107,-94,-109,-103,216,-105,-18,98,98,216,-117,-118,-119,-120,-121,-122,-20,-114,-129,-90,-133,-115,-116,-137,-135,98,-19,-113,-91,-123,98,98,-89,-134,98,98,98,98,-111,98,-27,98,-111,98,98,-26,-38,98,-21,-136,-132,-90,98,-91,]),'ASYNC':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,23,32,46,47,81,83,84,86,87,88,89,90,91,92,94,95,96,108,151,152,155,171,186,202,204,228,235,240,241,243,248,253,257,268,283,289,292,293,296,302,306,307,311,312,315,316,317,320,323,327,328,330,332,333,335,338,339,340,341,342,343,344,],[25,25,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,25,-96,-1,-16,25,-110,-111,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,-107,-94,-109,-103,-105,-18,25,25,-20,-114,-129,-90,-133,-115,-137,-135,25,-19,-113,-91,-123,25,25,-89,-134,25,25,25,25,-111,25,-27,25,-111,25,25,-26,-38,25,-21,-136,-132,-90,25,-91,]),'ENUM':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,32,46,47,86,87,88,89,90,91,92,94,95,96,108,151,155,171,186,228,235,240,241,243,248,253,257,283,289,292,293,306,307,323,333,335,339,340,341,342,344,],[26,26,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,-96,-1,-16,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,-107,-94,-103,-105,-18,-20,-114,-129,-90,-133,-115,-137,-135,-19,-113,-91,-123,-89,-134,-27,-26,-38,-21,-136,-132,-90,-91,]),'IF':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,23,32,46,47,81,83,84,86,87,88,89,90,91,92,94,95,96,108,151,152,155,171,186,202,204,228,235,240,241,243,248,253,257,268,283,289,292,293,296,302,306,307,311,312,315,316,317,320,323,327,328,330,332,333,335,338,339,340,341,342,343,344,],[27,27,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,27,-96,-1,-16,27,-110,-111,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,-107,-94,-109,-103,-105,-18,27,27,-20,-114,-129,-90,-133,-115,-137,-135,291,-19,-113,-91,-123,27,27,-89,-134,27,27,27,27,-111,27,-27,27,-111,27,27,-26,-38,27,-21,-136,-132,-90,291,-91,]),'SWITCH':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,23,32,46,47,81,83,84,86,87,88,89,90,91,92,94,95,96,108,151,152,155,171,186,202,204,228,235,240,241,243,248,253,257,268,283,289,292,293,296,302,306,307,311,312,315,316,317,320,323,327,328,330,332,333,335,338,339,340,341,342,343,344,],[28,28,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,28,-96,-1,-16,28,-110,-111,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,-107,-94,-109,-103,-105,-18,28,28,-20,-114,-129,-90,-133,-115,-137,-135,28,-19,-113,-91,-123,28,28,-89,-134,28,28,28,28,-111,28,-27,28,-111,28,28,-26,-38,28,-21,-136,-132,-90,28,-91,]),'WHILE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,23,32,46,47,81,83,84,86,87,88,89,90,91,92,94,95,96,108,151,152,155,171,186,202,204,228,235,240,241,243,248,253,257,268,283,289,292,293,296,302,306,307,311,312,315,316,317,320,323,327,328,330,332,333,335,338,339,340,341,342,343,344,],[29,29,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,29,-96,-1,-16,29,-110,-111,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,-107,-94,-109,-103,-105,-18,29,29,-20,-114,-129,-90,-133,-115,-137,-135,29,-19,-113,-91,-123,29,29,-89,-134,29,29,29,29,-111,29,-27,29,-111,29,29,-26,-38,29,-21,-136,-132,-90,29,-91,]),'FOR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,23,32,46,47,81,83,84,86,87,88,89,90,91,92,94,95,96,108,151,152,155,171,186,202,204,228,235,240,241,243,248,253,257,268,283,289,292,293,296,302,306,307,311,312,315,316,317,320,323,327,328,330,332,333,335,338,339,340,341,342,343,344,],[30,30,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,30,-96,-1,-16,30,-110,-111,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,-107,-94,-109,-103,-105,-18,30,30,-20,-114,-129,-90,-133,-115,-137,-135,30,-19,-113,-91,-123,30,30,-89,-134,30,30,30,30,-111,30,-27,30,-111,30,30,-26,-38,30,-21,-136,-132,-90,30,-91,]),'CLASS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,23,32,46,47,81,83,84,86,87,88,89,90,91,92,94,95,96,108,151,152,155,171,186,202,204,228,235,240,241,243,248,253,257,268,283,289,292,293,296,302,306,307,311,312,315,316,317,320,323,327,328,330,332,333,335,338,339,340,341,342,343,344,],[31,31,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,31,-96,-1,-16,31,-110,-111,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,-107,-94,-109,-103,-105,-18,31,31,-20,-114,-129,-90,-133,-115,-137,-135,31,-19,-113,-91,-123,31,31,-89,-134,31,31,31,31,-111,31,-27,31,-111,31,31,-26,-38,31,-21,-136,-132,-90,31,-91,]),'LBRACE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,20,22,23,32,33,37,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,74,75,81,83,84,86,87,88,89,90,91,92,94,95,96,101,102,103,104,105,106,108,109,140,146,151,152,155,156,158,171,176,178,181,182,183,184,186,188,195,196,202,203,204,205,222,225,228,235,236,240,241,243,246,248,253,256,257,265,268,272,274,279,283,287,288,289,292,293,296,299,300,302,303,306,307,308,309,311,312,313,314,315,316,317,320,323,327,328,330,332,333,335,338,339,340,341,342,343,344,],[23,23,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,78,78,23,-96,78,78,78,78,-1,-16,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,23,-110,-111,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,161,78,78,78,78,170,-107,172,78,78,-94,-109,-103,78,78,-105,78,-49,-46,-47,-48,-50,-18,78,78,78,23,242,23,78,78,78,-20,-114,78,-129,-90,-133,78,-115,-137,78,-135,-51,23,78,78,78,-19,311,312,-113,-91,-123,23,78,78,23,78,-89,-134,78,-44,23,23,330,78,23,23,-111,23,-27,23,-111,23,23,-26,-38,23,-21,-136,-132,-90,23,-91,]),'RETURN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,23,32,46,47,81,83,84,86,87,88,89,90,91,92,94,95,96,108,151,152,155,171,186,202,204,228,235,240,241,243,248,253,257,268,283,289,292,293,296,302,306,307,311,312,315,316,317,320,323,327,328,330,332,333,335,338,339,340,341,342,343,344,],[33,33,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,33,-96,-1,-16,33,-110,-111,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,-107,-94,-109,-103,-105,-18,33,33,-20,-114,-129,-90,-133,-115,-137,-135,33,-19,-113,-91,-123,33,33,-89,-134,33,33,33,33,-111,33,-27,33,-111,33,33,-26,-38,33,-21,-136,-132,-90,33,-91,]),'INTERFACE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,32,46,47,86,87,88,89,90,91,92,94,95,96,108,151,155,171,186,228,235,240,241,243,248,253,257,283,289,292,293,306,307,323,333,335,339,340,341,342,344,],[34,34,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,-96,-1,-16,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,-107,-94,-103,-105,-18,-20,-114,-129,-90,-133,-115,-137,-135,-19,-113,-91,-123,-89,-134,-27,-26,-38,-21,-136,-132,-90,-91,]),'IDENTIFIER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,20,21,22,23,24,26,31,32,33,34,37,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,75,78,81,83,84,86,87,88,89,90,91,92,94,95,96,98,100,102,103,104,105,108,139,140,146,149,151,152,154,155,156,158,159,161,167,168,171,172,175,176,180,186,188,195,196,199,202,204,205,215,216,218,219,220,222,225,228,231,235,236,239,240,241,243,245,246,247,248,252,253,254,256,257,260,262,268,272,274,278,279,283,286,289,290,292,293,296,299,300,302,303,305,306,307,308,311,312,314,315,316,317,320,323,327,328,330,332,333,335,338,339,340,341,342,343,344,],[19,19,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,73,77,79,77,97,99,101,106,-96,77,109,77,77,77,115,-1,-16,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,137,77,77,77,148,77,-110,-111,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,157,160,77,77,77,77,-107,178,77,77,190,-94,-109,148,-103,77,77,178,200,206,207,-105,217,178,77,178,-18,77,77,233,190,77,77,77,250,251,217,-139,-140,77,77,-20,178,-114,77,200,-129,-90,-133,275,77,178,-115,178,-137,-138,77,-135,178,178,77,77,77,178,77,-19,190,-113,178,-91,-123,77,77,77,77,77,-141,-89,-134,77,77,77,77,77,77,-111,77,-27,77,-111,77,77,-26,-38,77,-21,-136,-132,-90,77,-91,]),'LBRACKET':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,22,23,32,33,36,37,38,39,40,41,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,74,75,76,77,80,81,83,84,86,87,88,89,90,91,92,93,94,95,96,97,102,103,104,105,107,108,111,112,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,145,146,150,151,152,153,155,156,158,159,162,163,164,166,171,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,194,195,196,197,198,202,204,205,221,222,223,224,225,227,228,230,231,233,235,236,240,241,243,244,246,247,248,252,253,256,257,258,259,260,261,262,264,265,268,272,274,276,277,278,279,280,282,283,284,285,287,289,290,292,293,295,296,297,299,300,302,303,304,306,307,308,309,311,312,313,314,315,316,317,318,319,320,321,322,323,324,327,328,330,331,332,333,335,338,339,340,341,342,343,344,],[20,20,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,70,-17,-82,20,20,20,-96,20,-81,20,-79,-80,-83,-84,20,20,-1,-16,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-85,-86,20,20,70,-82,70,20,-110,-111,-95,-97,-98,-99,-100,-101,-102,70,-104,-106,-108,-82,20,20,20,20,70,-107,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-76,70,180,20,70,70,20,-75,-94,-109,-142,-103,20,20,180,70,70,70,70,-105,180,20,-77,-49,226,180,-46,-47,-48,-50,70,-18,-78,20,70,70,20,20,70,237,20,20,20,-73,20,237,70,20,237,-20,-45,180,-82,-114,20,-129,-90,-133,70,20,180,-115,180,-137,20,-135,70,-51,180,237,180,70,-51,20,20,20,70,237,180,20,237,70,-19,308,237,237,-113,180,-91,-123,70,20,70,20,20,20,20,237,-89,-134,20,-44,20,20,237,20,20,20,-111,-85,-86,20,70,70,-27,70,20,-111,20,70,20,-26,-38,20,-21,-136,-132,-90,20,-91,]),'PROMPT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,20,22,23,32,33,37,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,74,75,81,83,84,86,87,88,89,90,91,92,94,95,96,102,103,104,105,108,140,146,151,152,155,156,158,171,176,186,188,195,196,202,204,205,222,225,228,235,236,240,241,243,246,248,253,256,257,268,272,274,279,283,289,292,293,296,299,300,302,303,306,307,308,311,312,314,315,316,317,320,323,327,328,330,332,333,335,338,339,340,341,342,343,344,],[35,35,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,35,35,35,-96,35,35,35,35,-1,-16,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-110,-111,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,35,35,35,35,-107,35,35,-94,-109,-103,35,35,-105,35,-18,35,35,35,35,35,35,35,35,-20,-114,35,-129,-90,-133,35,-115,-137,35,-135,35,35,35,35,-19,-113,-91,-123,35,35,35,35,35,-89,-134,35,35,35,35,35,35,-111,35,-27,35,-111,35,35,-26,-38,35,-21,-136,-132,-90,35,-91,]),'NOT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,20,22,23,32,33,37,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,74,75,81,83,84,86,87,88,89,90,91,92,94,95,96,102,103,104,105,108,140,146,151,152,155,156,158,171,176,186,188,195,196,202,204,205,222,225,228,235,236,240,241,243,246,248,253,256,257,268,272,274,279,283,289,292,293,296,299,300,302,303,306,307,308,311,312,314,315,316,317,320,323,327,328,330,332,333,335,338,339,340,341,342,343,344,],[37,37,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,37,37,37,-96,37,37,37,37,-1,-16,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-110,-111,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,37,37,37,37,-107,37,37,-94,-109,-103,37,37,-105,37,-18,37,37,37,37,37,37,37,37,-20,-114,37,-129,-90,-133,37,-115,-137,37,-135,37,37,37,37,-19,-113,-91,-123,37,37,37,37,37,-89,-134,37,37,37,37,37,37,-111,37,-27,37,-111,37,37,-26,-38,37,-21,-136,-132,-90,37,-91,]),'LPAREN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,19,20,22,23,27,28,29,30,32,33,35,37,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,74,75,77,79,81,83,84,86,87,88,89,90,91,92,94,95,96,97,102,103,104,105,108,140,146,151,152,155,156,158,160,171,174,176,186,188,195,196,202,204,205,222,225,228,233,235,236,240,241,243,246,248,253,256,257,268,272,274,279,283,289,291,292,293,296,299,300,302,303,306,307,308,311,312,314,315,316,317,320,323,327,328,330,332,333,335,338,339,340,341,342,343,344,],[22,22,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,75,22,22,22,102,103,104,105,-96,22,110,22,22,22,-1,-16,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,75,149,22,-110,-111,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,75,22,22,22,22,-107,22,22,-94,-109,-103,22,196,199,-105,222,22,-18,22,196,22,22,22,22,22,22,-20,75,-114,22,-129,-90,-133,22,-115,-137,22,-135,22,22,22,22,-19,-113,314,-91,-123,22,22,22,22,22,-89,-134,22,22,22,22,22,22,-111,22,-27,22,-111,22,22,-26,-38,22,-21,-136,-132,-90,22,-91,]),'NUMBER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,20,22,23,32,33,37,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,74,75,81,83,84,86,87,88,89,90,91,92,94,95,96,102,103,104,105,108,140,146,151,152,155,156,158,171,176,186,188,195,196,202,204,205,222,225,228,235,236,240,241,243,246,248,253,256,257,268,272,274,279,283,289,292,293,296,299,300,302,303,306,307,308,311,312,314,315,316,317,320,323,327,328,330,332,333,335,338,339,340,341,342,343,344,],[38,38,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,38,38,38,-96,38,38,38,38,-1,-16,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-110,-111,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,38,38,38,38,-107,38,38,-94,-109,-103,38,38,-105,38,-18,38,38,38,38,38,38,38,38,-20,-114,38,-129,-90,-133,38,-115,-137,38,-135,38,38,38,38,-19,-113,-91,-123,38,38,38,38,38,-89,-134,38,38,38,38,38,38,-111,38,-27,38,-111,38,38,-26,-38,38,-21,-136,-132,-90,38,-91,]),'FLOAT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,20,22,23,32,33,37,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,74,75,81,83,84,86,87,88,89,90,91,92,94,95,96,102,103,104,105,108,140,146,151,152,155,156,158,171,176,186,188,195,196,202,204,205,222,225,228,235,236,240,241,243,246,248,253,256,257,268,272,274,279,283,289,292,293,296,299,300,302,303,306,307,308,311,312,314,315,316,317,320,323,327,328,330,332,333,335,338,339,340,341,342,343,344,],[39,39,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,39,39,39,-96,39,39,39,39,-1,-16,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-110,-111,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,39,39,39,39,-107,39,39,-94,-109,-103,39,39,-105,39,-18,39,39,39,39,39,39,39,39,-20,-114,39,-129,-90,-133,39,-115,-137,39,-135,39,39,39,39,-19,-113,-91,-123,39,39,39,39,39,-89,-134,39,39,39,39,39,39,-111,39,-27,39,-111,39,39,-26,-38,39,-21,-136,-132,-90,39,-91,]),'STRING':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,20,22,23,32,33,37,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,74,75,81,83,84,86,87,88,89,90,91,92,94,95,96,102,103,104,105,108,110,140,146,151,152,155,156,158,171,176,186,188,195,196,202,204,205,222,225,228,235,236,240,241,243,246,248,253,256,257,268,272,274,279,283,289,292,293,296,299,300,302,303,306,307,308,311,312,314,315,316,317,320,323,327,328,330,332,333,335,338,339,340,341,342,343,344,],[36,36,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,36,36,36,-96,36,36,36,36,-1,-16,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-110,-111,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,36,36,36,36,-107,173,36,36,-94,-109,-103,36,36,-105,36,-18,36,36,36,36,36,36,36,36,-20,-114,36,-129,-90,-133,36,-115,-137,36,-135,36,36,36,36,-19,-113,-91,-123,36,36,36,36,36,-89,-134,36,36,36,36,36,36,-111,36,-27,36,-111,36,36,-26,-38,36,-21,-136,-132,-90,36,-91,]),'TRUE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,20,22,23,32,33,37,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,74,75,81,83,84,86,87,88,89,90,91,92,94,95,96,102,103,104,105,108,140,146,151,152,155,156,158,171,176,186,188,195,196,202,204,205,222,225,228,235,236,240,241,243,246,248,253,256,257,268,272,274,279,283,289,292,293,296,299,300,302,303,306,307,308,311,312,314,315,316,317,320,323,327,328,330,332,333,335,338,339,340,341,342,343,344,],[40,40,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,40,40,40,-96,40,40,40,40,-1,-16,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-110,-111,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,40,40,40,40,-107,40,40,-94,-109,-103,40,40,-105,40,-18,40,40,40,40,40,40,40,40,-20,-114,40,-129,-90,-133,40,-115,-137,40,-135,40,40,40,40,-19,-113,-91,-123,40,40,40,40,40,-89,-134,40,40,40,40,40,40,-111,40,-27,40,-111,40,40,-26,-38,40,-21,-136,-132,-90,40,-91,]),'FALSE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,20,22,23,32,33,37,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,74,75,81,83,84,86,87,88,89,90,91,92,94,95,96,102,103,104,105,108,140,146,151,152,155,156,158,171,176,186,188,195,196,202,204,205,222,225,228,235,236,240,241,243,246,248,253,256,257,268,272,274,279,283,289,292,293,296,299,300,302,303,306,307,308,311,312,314,315,316,317,320,323,327,328,330,332,333,335,338,339,340,341,342,343,344,],[41,41,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,41,41,41,-96,41,41,41,41,-1,-16,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-110,-111,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,41,41,41,41,-107,41,41,-94,-109,-103,41,41,-105,41,-18,41,41,41,41,41,41,41,41,-20,-114,41,-129,-90,-133,41,-115,-137,41,-135,41,41,41,41,-19,-113,-91,-123,41,41,41,41,41,-89,-134,41,41,41,41,41,41,-111,41,-27,41,-111,41,41,-26,-38,41,-21,-136,-132,-90,41,-91,]),'PLUSPLUS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,22,23,32,33,36,37,38,39,40,41,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,74,75,76,77,80,81,83,84,86,87,88,89,90,91,92,93,94,95,96,97,102,103,104,105,107,108,111,112,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,145,146,150,151,152,153,155,156,158,162,163,164,166,171,176,177,185,186,187,188,189,194,195,196,197,202,204,205,221,222,224,225,228,230,233,235,236,240,241,243,244,246,248,253,256,257,258,264,268,272,274,276,279,282,283,289,292,293,295,296,297,299,300,302,303,306,307,308,311,312,314,315,316,317,318,319,320,321,322,323,324,327,328,330,331,332,333,335,338,339,340,341,342,343,344,],[42,42,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,71,-17,-82,42,42,42,-96,42,-81,42,-79,-80,-83,-84,42,42,-1,-16,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-85,-86,42,42,71,-82,71,42,-110,-111,-95,-97,-98,-99,-100,-101,-102,71,-104,-106,-108,-82,42,42,42,42,71,-107,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-76,71,42,71,71,42,-75,-94,-109,-142,-103,42,42,71,71,71,71,-105,42,-77,71,-18,-78,42,71,71,42,42,71,42,42,42,-73,42,71,42,-20,-45,-82,-114,42,-129,-90,-133,71,42,-115,-137,42,-135,71,71,42,42,299,71,42,71,-19,-113,-91,-123,71,42,318,42,42,42,42,-89,-134,42,42,42,42,42,42,-111,-85,-86,42,71,71,-27,71,42,-111,42,71,42,-26,-38,42,-21,-136,-132,-90,42,-91,]),'MINUSMINUS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,22,23,32,33,36,37,38,39,40,41,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,74,75,76,77,80,81,83,84,86,87,88,89,90,91,92,93,94,95,96,97,102,103,104,105,107,108,111,112,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,145,146,150,151,152,153,155,156,158,162,163,164,166,171,176,177,185,186,187,188,189,194,195,196,197,202,204,205,221,222,224,225,228,230,233,235,236,240,241,243,244,246,248,253,256,257,258,264,268,272,274,276,279,282,283,289,292,293,295,296,297,299,300,302,303,306,307,308,311,312,314,315,316,317,318,319,320,321,322,323,324,327,328,330,331,332,333,335,338,339,340,341,342,343,344,],[43,43,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,72,-17,-82,43,43,43,-96,43,-81,43,-79,-80,-83,-84,43,43,-1,-16,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-85,-86,43,43,72,-82,72,43,-110,-111,-95,-97,-98,-99,-100,-101,-102,72,-104,-106,-108,-82,43,43,43,43,72,-107,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-76,72,43,72,72,43,-75,-94,-109,-142,-103,43,43,72,72,72,72,-105,43,-77,72,-18,-78,43,72,72,43,43,72,43,43,43,-73,43,72,43,-20,-45,-82,-114,43,-129,-90,-133,72,43,-115,-137,43,-135,72,72,43,43,300,72,43,72,-19,-113,-91,-123,72,43,319,43,43,43,43,-89,-134,43,43,43,43,43,43,-111,-85,-86,43,72,72,-27,72,43,-111,43,72,43,-26,-38,43,-21,-136,-132,-90,43,-91,]),'CONSOLE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,23,32,46,47,81,83,84,86,87,88,89,90,91,92,94,95,96,108,151,152,155,171,186,202,204,228,235,240,241,243,248,253,257,268,283,289,292,293,296,302,306,307,311,312,315,316,317,320,323,327,328,330,332,333,335,338,339,340,341,342,343,344,],[44,44,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,44,-96,-1,-16,44,-110,-111,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,-107,-94,-109,-103,-105,-18,44,44,-20,-114,-129,-90,-133,-115,-137,-135,44,-19,-113,-91,-123,44,44,-89,-134,44,44,44,44,-111,44,-27,44,-111,44,44,-26,-38,44,-21,-136,-132,-90,44,-91,]),'VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,23,32,46,47,81,83,84,86,87,88,89,90,91,92,94,95,96,108,151,152,155,170,171,186,202,204,208,209,210,211,212,213,214,228,235,240,241,243,248,249,253,257,268,283,289,292,293,296,302,306,307,311,312,315,316,317,320,323,327,328,330,332,333,335,338,339,340,341,342,343,344,],[45,45,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,45,-96,-1,-16,45,-110,-111,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,-107,-94,-109,-103,45,-105,-18,45,45,45,-117,-118,-119,-120,-121,-122,-20,-114,-129,-90,-133,-115,-116,-137,-135,45,-19,-113,-91,-123,45,45,-89,-134,45,45,45,45,-111,45,-27,45,-111,45,45,-26,-38,45,-21,-136,-132,-90,45,-91,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,32,46,47,86,87,88,89,90,91,92,94,95,96,108,151,155,171,186,228,235,240,241,243,248,253,257,283,289,292,293,306,307,323,333,335,339,340,341,342,344,],[0,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,-96,-1,-16,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,-107,-94,-103,-105,-18,-20,-114,-129,-90,-133,-115,-137,-135,-19,-113,-91,-123,-89,-134,-27,-26,-38,-21,-136,-132,-90,-91,]),'SEMICOLON':([16,19,33,36,38,39,40,41,71,72,77,93,97,105,107,111,112,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,141,150,153,165,166,169,177,178,181,182,183,184,185,187,197,221,224,230,244,258,264,265,276,280,281,282,309,324,334,336,],[47,-82,108,-81,-79,-80,-83,-84,-85,-86,-82,155,-82,-112,171,-74,-87,-88,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-76,186,-75,-142,205,-30,-31,-77,-49,-46,-47,-48,-50,228,-78,235,-73,257,-45,274,283,289,-51,-28,305,306,307,-44,-29,339,340,]),'PLUS':([16,19,36,38,39,40,41,71,72,76,77,80,93,97,107,111,112,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,145,150,153,162,163,164,166,177,185,187,189,194,197,221,224,230,233,244,258,264,276,282,295,297,318,319,321,322,324,331,],[48,-82,-81,-79,-80,-83,-84,-85,-86,48,-82,48,48,-82,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-76,48,48,48,-75,-142,48,48,48,48,-77,48,-78,48,48,48,-73,48,-45,-82,48,48,48,48,48,48,48,-85,-86,48,48,48,48,]),'MINUS':([16,19,36,38,39,40,41,71,72,76,77,80,93,97,107,111,112,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,145,150,153,162,163,164,166,177,185,187,189,194,197,221,224,230,233,244,258,264,276,282,295,297,318,319,321,322,324,331,],[49,-82,-81,-79,-80,-83,-84,-85,-86,49,-82,49,49,-82,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-76,49,49,49,-75,-142,49,49,49,49,-77,49,-78,49,49,49,-73,49,-45,-82,49,49,49,49,49,49,49,-85,-86,49,49,49,49,]),'TIMES':([16,19,36,38,39,40,41,71,72,76,77,80,93,97,107,111,112,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,145,150,153,162,163,164,166,177,185,187,189,194,197,221,224,230,233,244,258,264,276,282,295,297,318,319,321,322,324,331,],[50,-82,-81,-79,-80,-83,-84,-85,-86,50,-82,50,50,-82,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-76,50,50,50,-75,-142,50,50,50,50,-77,50,-78,50,50,50,-73,50,-45,-82,50,50,50,50,50,50,50,-85,-86,50,50,50,50,]),'DIV':([16,19,36,38,39,40,41,71,72,76,77,80,93,97,107,111,112,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,145,150,153,162,163,164,166,177,185,187,189,194,197,221,224,230,233,244,258,264,276,282,295,297,318,319,321,322,324,331,],[51,-82,-81,-79,-80,-83,-84,-85,-86,51,-82,51,51,-82,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-76,51,51,51,-75,-142,51,51,51,51,-77,51,-78,51,51,51,-73,51,-45,-82,51,51,51,51,51,51,51,-85,-86,51,51,51,51,]),'MOD':([16,19,36,38,39,40,41,71,72,76,77,80,93,97,107,111,112,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,145,150,153,162,163,164,166,177,185,187,189,194,197,221,224,230,233,244,258,264,276,282,295,297,318,319,321,322,324,331,],[52,-82,-81,-79,-80,-83,-84,-85,-86,52,-82,52,52,-82,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-76,52,52,52,-75,-142,52,52,52,52,-77,52,-78,52,52,52,-73,52,-45,-82,52,52,52,52,52,52,52,-85,-86,52,52,52,52,]),'PLUS_ASSIGN':([16,19,36,38,39,40,41,71,72,76,77,80,93,97,107,111,112,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,145,150,153,162,163,164,166,177,185,187,189,194,197,221,224,230,233,244,258,264,276,282,295,297,318,319,321,322,324,331,],[53,-82,-81,-79,-80,-83,-84,-85,-86,53,-82,53,53,-82,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-76,53,53,53,-75,-142,53,53,53,53,-77,53,-78,53,53,53,-73,53,-45,-82,53,53,53,53,53,53,53,-85,-86,53,53,53,53,]),'MINUS_ASSIGN':([16,19,36,38,39,40,41,71,72,76,77,80,93,97,107,111,112,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,145,150,153,162,163,164,166,177,185,187,189,194,197,221,224,230,233,244,258,264,276,282,295,297,318,319,321,322,324,331,],[54,-82,-81,-79,-80,-83,-84,-85,-86,54,-82,54,54,-82,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-76,54,54,54,-75,-142,54,54,54,54,-77,54,-78,54,54,54,-73,54,-45,-82,54,54,54,54,54,54,54,-85,-86,54,54,54,54,]),'MULT_ASSIGN':([16,19,36,38,39,40,41,71,72,76,77,80,93,97,107,111,112,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,145,150,153,162,163,164,166,177,185,187,189,194,197,221,224,230,233,244,258,264,276,282,295,297,318,319,321,322,324,331,],[55,-82,-81,-79,-80,-83,-84,-85,-86,55,-82,55,55,-82,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-76,55,55,55,-75,-142,55,55,55,55,-77,55,-78,55,55,55,-73,55,-45,-82,55,55,55,55,55,55,55,-85,-86,55,55,55,55,]),'DIV_ASSIGN':([16,19,36,38,39,40,41,71,72,76,77,80,93,97,107,111,112,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,145,150,153,162,163,164,166,177,185,187,189,194,197,221,224,230,233,244,258,264,276,282,295,297,318,319,321,322,324,331,],[56,-82,-81,-79,-80,-83,-84,-85,-86,56,-82,56,56,-82,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-76,56,56,56,-75,-142,56,56,56,56,-77,56,-78,56,56,56,-73,56,-45,-82,56,56,56,56,56,56,56,-85,-86,56,56,56,56,]),'MOD_ASSIGN':([16,19,36,38,39,40,41,71,72,76,77,80,93,97,107,111,112,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,145,150,153,162,163,164,166,177,185,187,189,194,197,221,224,230,233,244,258,264,276,282,295,297,318,319,321,322,324,331,],[57,-82,-81,-79,-80,-83,-84,-85,-86,57,-82,57,57,-82,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-76,57,57,57,-75,-142,57,57,57,57,-77,57,-78,57,57,57,-73,57,-45,-82,57,57,57,57,57,57,57,-85,-86,57,57,57,57,]),'POT':([16,19,36,38,39,40,41,71,72,76,77,80,93,97,107,111,112,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,145,150,153,162,163,164,166,177,185,187,189,194,197,221,224,230,233,244,258,264,276,282,295,297,318,319,321,322,324,331,],[58,-82,-81,-79,-80,-83,-84,-85,-86,58,-82,58,58,-82,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-76,58,58,58,-75,-142,58,58,58,58,-77,58,-78,58,58,58,-73,58,-45,-82,58,58,58,58,58,58,58,-85,-86,58,58,58,58,]),'AND':([16,19,36,38,39,40,41,71,72,76,77,80,93,97,107,111,112,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,145,150,153,162,163,164,166,177,185,187,189,194,197,221,224,230,233,244,258,264,276,282,295,297,318,319,321,322,324,331,],[59,-82,-81,-79,-80,-83,-84,-85,-86,59,-82,59,59,-82,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-76,59,59,59,-75,-142,59,59,59,59,-77,59,-78,59,59,59,-73,59,-45,-82,59,59,59,59,59,59,59,-85,-86,59,59,59,59,]),'OR':([16,19,36,38,39,40,41,71,72,76,77,80,93,97,107,111,112,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,145,150,153,162,163,164,166,177,185,187,189,194,197,221,224,230,233,244,258,264,276,282,295,297,318,319,321,322,324,331,],[60,-82,-81,-79,-80,-83,-84,-85,-86,60,-82,60,60,-82,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-76,60,60,60,-75,-142,60,60,60,60,-77,60,-78,60,60,60,-73,60,-45,-82,60,60,60,60,60,60,60,-85,-86,60,60,60,60,]),'EQ':([16,19,36,38,39,40,41,71,72,76,77,80,93,97,107,111,112,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,145,150,153,162,163,164,166,177,185,187,189,194,197,221,224,230,233,244,258,264,276,282,295,297,318,319,321,322,324,331,],[61,-82,-81,-79,-80,-83,-84,-85,-86,61,-82,61,61,-82,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-76,61,61,61,-75,-142,61,61,61,61,-77,61,-78,61,61,61,-73,61,-45,-82,61,61,61,61,61,61,61,-85,-86,61,61,61,61,]),'NEQ':([16,19,36,38,39,40,41,71,72,76,77,80,93,97,107,111,112,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,145,150,153,162,163,164,166,177,185,187,189,194,197,221,224,230,233,244,258,264,276,282,295,297,318,319,321,322,324,331,],[62,-82,-81,-79,-80,-83,-84,-85,-86,62,-82,62,62,-82,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-76,62,62,62,-75,-142,62,62,62,62,-77,62,-78,62,62,62,-73,62,-45,-82,62,62,62,62,62,62,62,-85,-86,62,62,62,62,]),'STRICT_EQ':([16,19,36,38,39,40,41,71,72,76,77,80,93,97,107,111,112,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,145,150,153,162,163,164,166,177,185,187,189,194,197,221,224,230,233,244,258,264,276,282,295,297,318,319,321,322,324,331,],[63,-82,-81,-79,-80,-83,-84,-85,-86,63,-82,63,63,-82,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-76,63,63,63,-75,-142,63,63,63,63,-77,63,-78,63,63,63,-73,63,-45,-82,63,63,63,63,63,63,63,-85,-86,63,63,63,63,]),'STRICT_NEQ':([16,19,36,38,39,40,41,71,72,76,77,80,93,97,107,111,112,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,145,150,153,162,163,164,166,177,185,187,189,194,197,221,224,230,233,244,258,264,276,282,295,297,318,319,321,322,324,331,],[64,-82,-81,-79,-80,-83,-84,-85,-86,64,-82,64,64,-82,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-76,64,64,64,-75,-142,64,64,64,64,-77,64,-78,64,64,64,-73,64,-45,-82,64,64,64,64,64,64,64,-85,-86,64,64,64,64,]),'LT':([16,19,36,38,39,40,41,71,72,76,77,80,93,97,107,111,112,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,145,150,153,162,163,164,166,177,185,187,189,194,197,221,224,230,233,244,258,264,276,282,295,297,318,319,321,322,324,331,],[65,-82,-81,-79,-80,-83,-84,-85,-86,65,-82,65,65,-82,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-76,65,65,65,-75,-142,65,65,65,65,-77,65,-78,65,65,65,-73,65,-45,-82,65,65,65,65,65,65,65,-85,-86,65,65,65,65,]),'GT':([16,19,36,38,39,40,41,71,72,76,77,80,93,97,107,111,112,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,145,150,153,162,163,164,166,177,185,187,189,194,197,221,224,230,233,244,258,264,276,282,295,297,318,319,321,322,324,331,],[66,-82,-81,-79,-80,-83,-84,-85,-86,66,-82,66,66,-82,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-76,66,66,66,-75,-142,66,66,66,66,-77,66,-78,66,66,66,-73,66,-45,-82,66,66,66,66,66,66,66,-85,-86,66,66,66,66,]),'LE':([16,19,36,38,39,40,41,71,72,76,77,80,93,97,107,111,112,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,145,150,153,162,163,164,166,177,185,187,189,194,197,221,224,230,233,244,258,264,276,282,295,297,318,319,321,322,324,331,],[67,-82,-81,-79,-80,-83,-84,-85,-86,67,-82,67,67,-82,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-76,67,67,67,-75,-142,67,67,67,67,-77,67,-78,67,67,67,-73,67,-45,-82,67,67,67,67,67,67,67,-85,-86,67,67,67,67,]),'GE':([16,19,36,38,39,40,41,71,72,76,77,80,93,97,107,111,112,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,145,150,153,162,163,164,166,177,185,187,189,194,197,221,224,230,233,244,258,264,276,282,295,297,318,319,321,322,324,331,],[68,-82,-81,-79,-80,-83,-84,-85,-86,68,-82,68,68,-82,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-76,68,68,68,-75,-142,68,68,68,68,-77,68,-78,68,68,68,-73,68,-45,-82,68,68,68,68,68,68,68,-85,-86,68,68,68,68,]),'DOT':([16,19,36,38,39,40,41,44,71,72,76,77,80,93,97,107,111,112,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,145,150,153,162,163,164,166,177,185,187,189,194,197,221,224,230,233,244,258,264,276,282,295,297,318,319,321,322,324,331,],[69,-82,-81,-79,-80,-83,-84,114,-85,-86,69,-82,69,69,-82,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-76,69,69,69,-75,-142,69,69,69,69,-77,69,-78,69,69,69,-73,69,-45,-82,69,69,69,69,69,69,69,-85,-86,69,69,69,69,]),'EQUAL':([19,73,99,115,157,178,179,181,182,183,184,198,207,223,250,251,259,265,277,304,309,],[74,140,158,176,195,-49,225,-46,-47,-48,-50,236,246,256,140,279,284,-51,303,225,-44,]),'RBRACE':([23,32,36,38,39,40,41,71,72,77,78,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,108,111,112,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,147,150,151,152,153,154,155,170,171,172,177,187,193,194,200,201,208,209,210,211,212,213,214,218,219,220,221,228,230,235,241,242,243,248,249,254,257,267,269,270,271,283,289,292,293,294,296,305,306,307,311,312,315,316,317,323,326,327,328,329,330,332,333,335,337,339,340,341,342,344,],[-112,-96,-81,-79,-80,-83,-84,-85,-86,-82,-112,151,153,-110,-111,-143,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,-107,-74,-87,-88,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-76,-145,-75,-94,-109,-142,-112,-103,-112,-105,-112,-77,-78,-144,-146,-130,240,248,-117,-118,-119,-120,-121,-122,253,-139,-140,-73,-20,-45,-114,-90,-112,-133,-115,-116,-138,-135,-131,293,-125,-126,-19,-113,-91,-123,-124,-112,-141,-89,-134,-112,-112,-112,-128,-111,-27,335,-42,-43,336,-112,-127,-26,-38,341,-21,-136,-132,-90,-91,]),'ELSE':([32,86,87,88,89,90,91,92,94,95,96,108,151,155,171,228,235,241,243,248,257,283,289,292,293,306,307,323,333,335,339,340,341,342,344,],[-96,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,-107,-94,-103,-105,-20,-114,268,-133,-115,-135,-19,-113,-91,-123,-89,-134,-27,-26,-38,-21,-136,-132,343,-91,]),'CASE':([32,83,86,87,88,89,90,91,92,94,95,96,108,151,152,155,171,228,235,241,242,243,248,257,269,270,271,283,289,292,293,294,296,306,307,315,316,317,323,332,333,335,339,340,341,342,344,],[-96,-110,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,-107,-94,-109,-103,-105,-20,-114,-90,272,-133,-115,-135,272,-125,-126,-19,-113,-91,-123,-124,-112,-89,-134,-112,-128,-111,-27,-127,-26,-38,-21,-136,-132,-90,-91,]),'DEFAULT':([32,83,86,87,88,89,90,91,92,94,95,96,108,151,152,155,171,228,235,241,242,243,248,257,269,270,271,283,289,292,293,294,296,306,307,315,316,317,323,332,333,335,339,340,341,342,344,],[-96,-110,-95,-97,-98,-99,-100,-101,-102,-104,-106,-108,-107,-94,-109,-103,-105,-20,-114,-90,273,-133,-115,-135,273,-125,-126,-19,-113,-91,-123,-124,-112,-89,-134,-112,-128,-111,-27,-127,-26,-38,-21,-136,-132,-90,-91,]),'COMMA':([36,38,39,40,41,71,72,76,77,85,111,112,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,145,150,153,177,178,181,182,183,184,187,194,200,221,227,230,261,265,309,],[-81,-79,-80,-83,-84,-85,-86,146,-82,154,-74,-87,-88,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-76,188,-75,-142,-77,-49,-46,-47,-48,-50,-78,-146,239,-73,260,-45,286,-51,-44,]),'RPAREN':([36,38,39,40,41,71,72,75,77,80,111,112,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,143,144,145,149,150,153,162,163,164,173,177,178,181,182,183,184,187,191,192,196,199,221,222,229,230,233,234,238,255,261,265,274,275,286,297,298,301,309,310,318,319,321,322,331,],[-81,-79,-80,-83,-84,-85,-86,-112,-82,150,-74,-87,-88,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-76,187,-22,-23,-24,-112,-75,-142,202,203,204,221,-77,-49,-46,-47,-48,-50,-78,232,-41,-112,-112,-73,-112,-25,-45,-82,263,266,281,-39,-51,-112,302,-112,-32,320,-37,-44,-40,-33,-34,-35,-36,338,]),'RBRACKET':([36,38,39,40,41,71,72,77,111,112,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,143,144,145,150,153,177,178,181,182,183,184,187,189,221,226,229,230,237,265,285,308,309,325,],[-81,-79,-80,-83,-84,-85,-86,-82,-74,-87,-88,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-76,177,-22,-23,-24,-75,-142,-77,-49,-46,-47,-48,-50,-78,230,-73,259,-25,-45,265,-51,309,-112,-44,334,]),'COLON':([36,38,39,40,41,71,72,73,77,97,99,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,148,150,153,157,177,187,190,207,217,221,230,232,233,250,251,266,273,295,],[-81,-79,-80,-83,-84,-85,-86,139,-82,156,159,-74,-87,-88,175,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-76,156,-75,-142,159,-77,-78,231,247,252,-73,-45,262,231,278,159,290,296,315,]),'LOG':([114,],[174,]),'NUMBER_TYPE':([139,159,175,180,231,247,252,260,262,278,290,],[181,181,181,181,181,181,181,181,181,181,181,]),'STRING_TYPE':([139,159,175,180,231,247,252,260,262,278,290,],[182,182,182,182,182,182,182,182,182,182,182,]),'BOOLEAN_TYPE':([139,159,175,180,231,247,252,260,262,278,290,],[183,183,183,183,183,183,183,183,183,183,183,]),'VOID':([139,159,175,180,231,247,252,260,262,278,290,],[184,184,184,184,184,184,184,184,184,184,184,]),'OF':([206,],[245,]),'ARROW':([263,],[288,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'element':([0,1,],[2,46,]),'letAssignment':([0,1,23,81,170,202,204,208,268,296,302,311,312,315,316,320,327,330,332,338,343,],[3,3,86,86,212,86,86,212,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'declaracion':([0,1,23,81,202,204,268,296,302,311,312,315,316,320,327,330,332,338,343,],[4,4,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'function':([0,1,23,81,170,202,204,208,268,296,302,311,312,315,316,320,327,330,332,338,343,],[5,5,89,89,211,89,89,211,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'arrow_function':([0,1,23,81,202,204,268,296,302,311,312,315,316,320,327,330,332,338,343,],[6,6,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'async_function':([0,1,23,81,202,204,268,296,302,311,312,315,316,320,327,330,332,338,343,],[7,7,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'constAssignment':([0,1,23,81,170,202,204,208,268,296,302,311,312,315,316,320,327,330,332,338,343,],[8,8,87,87,214,87,87,214,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'enum_definition':([0,1,],[9,9,]),'controlEstructure':([0,1,23,81,202,204,268,296,302,311,312,315,316,320,327,330,332,338,343,],[10,10,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'forEstructure':([0,1,23,81,202,204,268,296,302,311,312,315,316,320,327,330,332,338,343,],[11,11,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'class_definition':([0,1,23,81,202,204,268,296,302,311,312,315,316,320,327,330,332,338,343,],[12,12,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'statement':([0,1,23,81,202,204,268,296,302,311,312,315,316,320,327,330,332,338,343,],[13,13,83,152,241,243,292,83,323,83,83,83,152,333,152,83,152,342,344,]),'interface':([0,1,],[14,14,]),'assignment':([0,1,],[15,15,]),'expression':([0,1,20,22,23,33,37,42,43,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,74,75,81,102,103,104,105,140,146,156,158,176,188,195,196,202,204,205,222,225,236,246,256,268,272,274,279,296,299,300,302,303,308,311,312,314,315,316,320,327,330,332,338,343,],[16,16,76,80,93,107,111,112,113,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,141,145,93,162,163,164,166,185,189,194,197,224,145,197,80,93,93,244,145,258,264,276,282,93,295,297,197,93,321,322,93,324,145,93,93,331,93,93,93,93,93,93,93,93,]),'consolelog':([0,1,23,81,202,204,268,296,302,311,312,315,316,320,327,330,332,338,343,],[17,17,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'varAssignment':([0,1,23,81,170,202,204,208,268,296,302,311,312,315,316,320,327,330,332,338,343,],[32,32,32,32,213,32,32,213,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'instruction_list':([23,296,311,312,315,330,],[81,316,327,327,332,327,]),'object_properties':([23,78,154,],[82,82,193,]),'empty':([23,75,78,105,149,154,170,172,196,199,222,242,274,286,296,308,311,312,315,330,],[84,144,147,169,192,147,210,220,192,192,144,271,301,192,317,144,328,328,317,328,]),'object_property':([23,78,154,],[85,85,85,]),'lista_expresiones_opt':([75,222,308,],[142,255,325,]),'lista_expresiones':([75,188,222,308,],[143,229,143,143,]),'for_init':([105,],[165,]),'type':([139,159,175,180,231,247,252,260,262,278,290,],[179,198,223,227,261,277,280,285,287,304,313,]),'parameters':([149,196,199,286,],[191,234,238,310,]),'enum_members':([161,239,],[201,267,]),'class_body':([170,],[208,]),'class_element':([170,208,],[209,249,]),'interface_body':([172,],[218,]),'interface_property':([172,218,],[219,254,]),'case_block':([242,],[269,]),'case':([242,269,],[270,294,]),'for_update':([274,],[298,]),'body_function':([311,312,330,],[326,329,337,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program element','program',2,'p_program','parser.py',15),
  ('program -> element','program',1,'p_program','parser.py',16),
  ('element -> letAssignment','element',1,'p_element','parser.py',20),
  ('element -> declaracion','element',1,'p_element','parser.py',21),
  ('element -> function','element',1,'p_element','parser.py',22),
  ('element -> arrow_function','element',1,'p_element','parser.py',23),
  ('element -> async_function','element',1,'p_element','parser.py',24),
  ('element -> constAssignment','element',1,'p_element','parser.py',25),
  ('element -> enum_definition','element',1,'p_element','parser.py',26),
  ('element -> controlEstructure','element',1,'p_element','parser.py',27),
  ('element -> forEstructure','element',1,'p_element','parser.py',28),
  ('element -> class_definition','element',1,'p_element','parser.py',29),
  ('element -> statement','element',1,'p_element','parser.py',30),
  ('element -> interface','element',1,'p_element','parser.py',31),
  ('element -> assignment','element',1,'p_element','parser.py',32),
  ('element -> expression SEMICOLON','element',2,'p_element','parser.py',33),
  ('element -> consolelog','element',1,'p_element','parser.py',34),
  ('assignment -> IDENTIFIER EQUAL expression SEMICOLON','assignment',4,'p_assignment','parser.py',39),
  ('letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON','letAssignment',7,'p_letAssignment','parser.py',46),
  ('letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON','letAssignment',5,'p_letAssignment_no_type','parser.py',50),
  ('declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON','declaracion',11,'p_declaracion','parser.py',55),
  ('lista_expresiones_opt -> lista_expresiones','lista_expresiones_opt',1,'p_lista_expresiones_opt','parser.py',59),
  ('lista_expresiones_opt -> empty','lista_expresiones_opt',1,'p_lista_expresiones_opt','parser.py',60),
  ('lista_expresiones -> expression','lista_expresiones',1,'p_lista_expresiones','parser.py',64),
  ('lista_expresiones -> expression COMMA lista_expresiones','lista_expresiones',3,'p_lista_expresiones','parser.py',65),
  ('forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement','forEstructure',9,'p_forEstructure','parser.py',70),
  ('forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement','forEstructure',8,'p_for_of_structure','parser.py',74),
  ('for_init -> LET IDENTIFIER EQUAL expression','for_init',4,'p_for_init','parser.py',78),
  ('for_init -> LET IDENTIFIER COLON type EQUAL expression','for_init',6,'p_for_init','parser.py',79),
  ('for_init -> expression','for_init',1,'p_for_init','parser.py',80),
  ('for_init -> empty','for_init',1,'p_for_init','parser.py',81),
  ('for_update -> expression','for_update',1,'p_for_update','parser.py',86),
  ('for_update -> expression PLUSPLUS','for_update',2,'p_for_update','parser.py',87),
  ('for_update -> expression MINUSMINUS','for_update',2,'p_for_update','parser.py',88),
  ('for_update -> PLUSPLUS expression','for_update',2,'p_for_update','parser.py',89),
  ('for_update -> MINUSMINUS expression','for_update',2,'p_for_update','parser.py',90),
  ('for_update -> empty','for_update',1,'p_for_update','parser.py',91),
  ('function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE','function',10,'p_function','parser.py',96),
  ('parameters -> IDENTIFIER COLON type','parameters',3,'p_parameters','parser.py',100),
  ('parameters -> IDENTIFIER COLON type COMMA parameters','parameters',5,'p_parameters','parser.py',101),
  ('parameters -> empty','parameters',1,'p_parameters','parser.py',102),
  ('body_function -> instruction_list','body_function',1,'p_body_function','parser.py',106),
  ('body_function -> empty','body_function',1,'p_body_function','parser.py',107),
  ('type -> LBRACKET type COMMA type RBRACKET','type',5,'p_type_tuple','parser.py',112),
  ('expression -> LBRACKET expression COMMA expression RBRACKET','expression',5,'p_expression_tuple','parser.py',116),
  ('type -> NUMBER_TYPE','type',1,'p_type','parser.py',121),
  ('type -> STRING_TYPE','type',1,'p_type','parser.py',122),
  ('type -> BOOLEAN_TYPE','type',1,'p_type','parser.py',123),
  ('type -> IDENTIFIER','type',1,'p_type','parser.py',124),
  ('type -> VOID','type',1,'p_type','parser.py',125),
  ('type -> type LBRACKET RBRACKET','type',3,'p_type','parser.py',126),
  ('expression -> expression PLUS expression','expression',3,'p_expression','parser.py',131),
  ('expression -> expression MINUS expression','expression',3,'p_expression','parser.py',132),
  ('expression -> expression TIMES expression','expression',3,'p_expression','parser.py',133),
  ('expression -> expression DIV expression','expression',3,'p_expression','parser.py',134),
  ('expression -> expression MOD expression','expression',3,'p_expression','parser.py',135),
  ('expression -> expression PLUS_ASSIGN expression','expression',3,'p_expression','parser.py',136),
  ('expression -> expression MINUS_ASSIGN expression','expression',3,'p_expression','parser.py',137),
  ('expression -> expression MULT_ASSIGN expression','expression',3,'p_expression','parser.py',138),
  ('expression -> expression DIV_ASSIGN expression','expression',3,'p_expression','parser.py',139),
  ('expression -> expression MOD_ASSIGN expression','expression',3,'p_expression','parser.py',140),
  ('expression -> expression POT expression','expression',3,'p_expression','parser.py',141),
  ('expression -> expression AND expression','expression',3,'p_expression','parser.py',142),
  ('expression -> expression OR expression','expression',3,'p_expression','parser.py',143),
  ('expression -> expression EQ expression','expression',3,'p_expression','parser.py',144),
  ('expression -> expression NEQ expression','expression',3,'p_expression','parser.py',145),
  ('expression -> expression STRICT_EQ expression','expression',3,'p_expression','parser.py',146),
  ('expression -> expression STRICT_NEQ expression','expression',3,'p_expression','parser.py',147),
  ('expression -> expression LT expression','expression',3,'p_expression','parser.py',148),
  ('expression -> expression GT expression','expression',3,'p_expression','parser.py',149),
  ('expression -> expression LE expression','expression',3,'p_expression','parser.py',150),
  ('expression -> expression GE expression','expression',3,'p_expression','parser.py',151),
  ('expression -> PROMPT LPAREN STRING RPAREN','expression',4,'p_expression','parser.py',152),
  ('expression -> NOT expression','expression',2,'p_expression','parser.py',153),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','parser.py',154),
  ('expression -> expression DOT IDENTIFIER','expression',3,'p_expression','parser.py',155),
  ('expression -> expression LBRACKET expression RBRACKET','expression',4,'p_expression','parser.py',156),
  ('expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN','expression',4,'p_expression','parser.py',157),
  ('expression -> NUMBER','expression',1,'p_expression','parser.py',158),
  ('expression -> FLOAT','expression',1,'p_expression','parser.py',159),
  ('expression -> STRING','expression',1,'p_expression','parser.py',160),
  ('expression -> IDENTIFIER','expression',1,'p_expression','parser.py',161),
  ('expression -> TRUE','expression',1,'p_expression','parser.py',162),
  ('expression -> FALSE','expression',1,'p_expression','parser.py',163),
  ('expression -> expression PLUSPLUS','expression',2,'p_expression_increment','parser.py',167),
  ('expression -> expression MINUSMINUS','expression',2,'p_expression_increment','parser.py',168),
  ('expression -> PLUSPLUS expression','expression',2,'p_expression_increment','parser.py',169),
  ('expression -> MINUSMINUS expression','expression',2,'p_expression_increment','parser.py',170),
  ('consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON','consolelog',7,'p_consolelog','parser.py',174),
  ('controlEstructure -> IF LPAREN expression RPAREN statement','controlEstructure',5,'p_controlEstructure','parser.py',179),
  ('controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement','controlEstructure',7,'p_controlEstructure','parser.py',180),
  ('controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement','controlEstructure',11,'p_controlEstructure','parser.py',181),
  ('controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement','controlEstructure',13,'p_controlEstructure','parser.py',182),
  ('statement -> LBRACE instruction_list RBRACE','statement',3,'p_statement','parser.py',187),
  ('statement -> letAssignment','statement',1,'p_statement','parser.py',188),
  ('statement -> varAssignment','statement',1,'p_statement','parser.py',189),
  ('statement -> constAssignment','statement',1,'p_statement','parser.py',190),
  ('statement -> declaracion','statement',1,'p_statement','parser.py',191),
  ('statement -> function','statement',1,'p_statement','parser.py',192),
  ('statement -> arrow_function','statement',1,'p_statement','parser.py',193),
  ('statement -> async_function','statement',1,'p_statement','parser.py',194),
  ('statement -> consolelog','statement',1,'p_statement','parser.py',195),
  ('statement -> expression SEMICOLON','statement',2,'p_statement','parser.py',196),
  ('statement -> controlEstructure','statement',1,'p_statement','parser.py',197),
  ('statement -> RETURN expression SEMICOLON','statement',3,'p_statement','parser.py',198),
  ('statement -> forEstructure','statement',1,'p_statement','parser.py',199),
  ('statement -> RETURN SEMICOLON','statement',2,'p_statement','parser.py',200),
  ('statement -> class_definition','statement',1,'p_statement','parser.py',201),
  ('instruction_list -> instruction_list statement','instruction_list',2,'p_instruction_list','parser.py',208),
  ('instruction_list -> statement','instruction_list',1,'p_instruction_list','parser.py',209),
  ('instruction_list -> empty','instruction_list',1,'p_instruction_list','parser.py',210),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',215),
  ('constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON','constAssignment',7,'p_constAssignment','parser.py',235),
  ('constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON','constAssignment',5,'p_constAssignment_no_type','parser.py',239),
  ('class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE','class_definition',5,'p_class_definition','parser.py',245),
  ('class_body -> class_body class_element','class_body',2,'p_class_body','parser.py',249),
  ('class_body -> class_element','class_body',1,'p_class_body','parser.py',250),
  ('class_body -> empty','class_body',1,'p_class_body','parser.py',251),
  ('class_element -> function','class_element',1,'p_class_element','parser.py',255),
  ('class_element -> letAssignment','class_element',1,'p_class_element','parser.py',256),
  ('class_element -> varAssignment','class_element',1,'p_class_element','parser.py',257),
  ('class_element -> constAssignment','class_element',1,'p_class_element','parser.py',258),
  ('controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE','controlEstructure',7,'p_controlEstructure_switch','parser.py',264),
  ('case_block -> case_block case','case_block',2,'p_case_block','parser.py',268),
  ('case_block -> case','case_block',1,'p_case_block','parser.py',269),
  ('case_block -> empty','case_block',1,'p_case_block','parser.py',270),
  ('case -> CASE expression COLON instruction_list','case',4,'p_case','parser.py',274),
  ('case -> DEFAULT COLON instruction_list','case',3,'p_case','parser.py',275),
  ('enum_definition -> ENUM IDENTIFIER LBRACE enum_members RBRACE','enum_definition',5,'p_enum_definition','parser.py',281),
  ('enum_members -> IDENTIFIER','enum_members',1,'p_enum_members','parser.py',285),
  ('enum_members -> IDENTIFIER COMMA enum_members','enum_members',3,'p_enum_members','parser.py',286),
  ('async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE','async_function',11,'p_async_function','parser.py',292),
  ('controlEstructure -> WHILE LPAREN expression RPAREN statement','controlEstructure',5,'p_controlEstructure_while','parser.py',305),
  ('varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON','varAssignment',7,'p_varAssignment','parser.py',312),
  ('varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON','varAssignment',5,'p_varAssignment_no_type','parser.py',316),
  ('arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON','arrow_function',11,'p_arrow_function','parser.py',321),
  ('interface -> INTERFACE IDENTIFIER LBRACE interface_body RBRACE','interface',5,'p_interface','parser.py',328),
  ('interface_body -> interface_body interface_property','interface_body',2,'p_interface_body','parser.py',332),
  ('interface_body -> interface_property','interface_body',1,'p_interface_body','parser.py',333),
  ('interface_body -> empty','interface_body',1,'p_interface_body','parser.py',334),
  ('interface_property -> IDENTIFIER COLON type SEMICOLON','interface_property',4,'p_interface_property','parser.py',338),
  ('expression -> LBRACE object_properties RBRACE','expression',3,'p_expression_variables','parser.py',343),
  ('object_properties -> object_property','object_properties',1,'p_object_properties','parser.py',347),
  ('object_properties -> object_property COMMA object_properties','object_properties',3,'p_object_properties','parser.py',348),
  ('object_properties -> empty','object_properties',1,'p_object_properties','parser.py',349),
  ('object_property -> IDENTIFIER COLON expression','object_property',3,'p_object_property','parser.py',353),
]
