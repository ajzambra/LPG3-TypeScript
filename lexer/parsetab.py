
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAND ANY ARROW AS ASYNC AWAIT BIGINT_TYPE BOOLEAN_TYPE BREAK CASE CATCH CLASS COLON COMMA CONSOLE CONST CONTINUE DEFAULT DIV DIV_ASSIGN DOT ELSE ENUM EQ EQUAL EXPORT FALSE FINALLY FLOAT FOR FUNCTION GE GT IDENTIFIER IF IMPORT INTERFACE LBRACE LBRACKET LE LET LOG LPAREN LT MINUS MINUSMINUS MINUS_ASSIGN MOD MOD_ASSIGN MULT_ASSIGN NEQ NEW NOT NULL_TYPE NUMBER NUMBER_TYPE OF OR PLUS PLUSPLUS PLUS_ASSIGN POT PRIVATE PROMPT PROTECTED PUBLIC RBRACE RBRACKET RETURN RPAREN SEMICOLON STATIC STRICT_EQ STRICT_NEQ STRING STRING_TYPE SUPER SWITCH SYMBOL_TYPE THIS TIMES TRUE TRY TYPE UNDEFINED_TYPE VAR VOID WHILEprogram : program element\n               | elementelement : letAssignment\n                | declaracion\n                | function\n                | controlEstructure\n                | forEstructure\n                | statement\n                | expression SEMICOLON\n                | consolelogletAssignment : LET IDENTIFIER COLON type EQUAL expression SEMICOLONletAssignment : LET IDENTIFIER EQUAL expression SEMICOLONdeclaracion : LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLONlista_expresiones_opt : lista_expresiones\n                            | emptylista_expresiones : expression\n                        | expression COMMA lista_expresionesforEstructure : FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statementfor_init : LET IDENTIFIER EQUAL expression\n                | LET IDENTIFIER COLON type EQUAL expression\n                | expression\n                | emptyfor_update : expression\n                  | expression PLUSPLUS\n                  | expression MINUSMINUS\n                  | PLUSPLUS expression\n                  | MINUSMINUS expression\n                  | emptyfunction : FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACEparameters : IDENTIFIER COLON type\n                | IDENTIFIER COLON type COMMA parameters\n                | emptybody_function : instruction_listtype : LBRACKET type COMMA type RBRACKETexpression : LBRACKET expression COMMA expression RBRACKETtype : NUMBER_TYPE\n            | STRING_TYPE\n            | BOOLEAN_TYPE\n            | IDENTIFIER\n            | type LBRACKET RBRACKETexpression : expression PLUS expression\n                | expression MINUS expression\n                | expression TIMES expression\n                | expression DIV expression\n                | expression MOD expression\n                | expression PLUS_ASSIGN expression\n                | expression MINUS_ASSIGN expression\n                | expression MULT_ASSIGN expression\n                | expression DIV_ASSIGN expression\n                | expression MOD_ASSIGN expression\n                | expression POT expression\n                | expression AND expression\n                | expression OR expression\n                | expression EQ expression\n                | expression NEQ expression\n                | expression STRICT_EQ expression\n                | expression STRICT_NEQ expression\n                | expression LT expression\n                | expression GT expression\n                | expression LE expression\n                | expression GE expression\n                | PROMPT LPAREN STRING RPAREN\n                | NOT expression\n                | LPAREN expression RPAREN\n                | expression DOT IDENTIFIER\n                | expression LBRACKET expression RBRACKET\n                | IDENTIFIER LPAREN lista_expresiones_opt RPAREN\n                | NUMBER\n                | FLOAT\n                | STRING\n                | IDENTIFIER\n                | TRUE\n                | FALSEexpression : expression PLUSPLUS\n                    | expression MINUSMINUS\n                    | PLUSPLUS expression\n                    | MINUSMINUS expressionconsolelog : CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLONcontrolEstructure : IF LPAREN expression RPAREN statement \n                        | IF LPAREN expression RPAREN statement ELSE statement \n                        | IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement \n                        | IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statementstatement : LBRACE instruction_list RBRACE\n                | letAssignment\n                | declaracion\n                | function\n                | consolelog\n                | expression SEMICOLON\n                | controlEstructure\n                | RETURN expression SEMICOLON\n                | forEstructure\n                | varAssignmentinstruction_list : instruction_list statement\n                        | statement\n                        | emptyempty :controlEstructure : WHILE LPAREN expression RPAREN statementvarAssignment : VAR IDENTIFIER COLON type EQUAL expression SEMICOLONvarAssignment : VAR IDENTIFIER EQUAL expression SEMICOLONfunction : CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON'
    
_lr_action_items = {'LET':([0,1,2,3,4,5,6,7,8,10,16,22,34,35,66,67,68,69,70,71,72,74,75,79,119,120,121,129,149,150,160,166,167,174,181,188,195,202,203,207,208,212,218,221,223,225,226,227,228,229,230,],[11,11,-2,-3,-4,-5,-6,-7,-8,-10,11,-92,-1,-9,11,-94,-95,-84,-85,-86,-87,-89,-91,127,-83,-93,-88,-90,11,11,-12,-79,-97,-99,11,-11,-80,-78,-98,11,11,11,11,-18,-29,11,-13,-100,-79,11,-80,]),'FUNCTION':([0,1,2,3,4,5,6,7,8,10,16,22,34,35,66,67,68,69,70,71,72,74,75,119,120,121,129,149,150,160,166,167,174,181,188,195,202,203,207,208,212,218,221,223,225,226,227,228,229,230,],[14,14,-2,-3,-4,-5,-6,-7,-8,-10,14,-92,-1,-9,14,-94,-95,-84,-85,-86,-87,-89,-91,-83,-93,-88,-90,14,14,-12,-79,-97,-99,14,-11,-80,-78,-98,14,14,14,14,-18,-29,14,-13,-100,-79,14,-80,]),'CONST':([0,1,2,3,4,5,6,7,8,10,16,22,34,35,66,67,68,69,70,71,72,74,75,119,120,121,129,149,150,160,166,167,174,181,188,195,202,203,207,208,212,218,221,223,225,226,227,228,229,230,],[17,17,-2,-3,-4,-5,-6,-7,-8,-10,17,-92,-1,-9,17,-94,-95,-84,-85,-86,-87,-89,-91,-83,-93,-88,-90,17,17,-12,-79,-97,-99,17,-11,-80,-78,-98,17,17,17,17,-18,-29,17,-13,-100,-79,17,-80,]),'IF':([0,1,2,3,4,5,6,7,8,10,16,22,34,35,66,67,68,69,70,71,72,74,75,119,120,121,129,149,150,160,166,167,174,181,188,195,202,203,207,208,212,218,221,223,225,226,227,228,229,230,],[18,18,-2,-3,-4,-5,-6,-7,-8,-10,18,-92,-1,-9,18,-94,-95,-84,-85,-86,-87,-89,-91,-83,-93,-88,-90,18,18,-12,-79,-97,-99,194,-11,-80,-78,-98,18,18,18,18,-18,-29,18,-13,-100,-79,194,-80,]),'WHILE':([0,1,2,3,4,5,6,7,8,10,16,22,34,35,66,67,68,69,70,71,72,74,75,119,120,121,129,149,150,160,166,167,174,181,188,195,202,203,207,208,212,218,221,223,225,226,227,228,229,230,],[19,19,-2,-3,-4,-5,-6,-7,-8,-10,19,-92,-1,-9,19,-94,-95,-84,-85,-86,-87,-89,-91,-83,-93,-88,-90,19,19,-12,-79,-97,-99,19,-11,-80,-78,-98,19,19,19,19,-18,-29,19,-13,-100,-79,19,-80,]),'FOR':([0,1,2,3,4,5,6,7,8,10,16,22,34,35,66,67,68,69,70,71,72,74,75,119,120,121,129,149,150,160,166,167,174,181,188,195,202,203,207,208,212,218,221,223,225,226,227,228,229,230,],[20,20,-2,-3,-4,-5,-6,-7,-8,-10,20,-92,-1,-9,20,-94,-95,-84,-85,-86,-87,-89,-91,-83,-93,-88,-90,20,20,-12,-79,-97,-99,20,-11,-80,-78,-98,20,20,20,20,-18,-29,20,-13,-100,-79,20,-80,]),'LBRACE':([0,1,2,3,4,5,6,7,8,10,16,22,34,35,66,67,68,69,70,71,72,74,75,119,120,121,129,135,138,139,140,149,150,160,166,167,174,181,187,188,192,193,195,202,203,205,207,208,212,218,221,223,225,226,227,228,229,230,],[16,16,-2,-3,-4,-5,-6,-7,-8,-10,16,-92,-1,-9,16,-94,-95,-84,-85,-86,-87,-89,-91,-83,-93,-88,-90,-39,-36,-37,-38,16,16,-12,-79,-97,-99,16,-40,-11,207,208,-80,-78,-98,-34,16,16,16,16,-18,-29,16,-13,-100,-79,16,-80,]),'RETURN':([0,1,2,3,4,5,6,7,8,10,16,22,34,35,66,67,68,69,70,71,72,74,75,119,120,121,129,149,150,160,166,167,174,181,188,195,202,203,207,208,212,218,221,223,225,226,227,228,229,230,],[21,21,-2,-3,-4,-5,-6,-7,-8,-10,21,-92,-1,-9,21,-94,-95,-84,-85,-86,-87,-89,-91,-83,-93,-88,-90,21,21,-12,-79,-97,-99,21,-11,-80,-78,-98,21,21,21,21,-18,-29,21,-13,-100,-79,21,-80,]),'LBRACKET':([0,1,2,3,4,5,6,7,8,9,10,12,13,15,16,21,22,24,25,26,27,28,29,30,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,62,63,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,118,119,120,121,123,124,126,129,132,133,134,135,136,137,138,139,140,141,142,143,144,149,150,151,153,154,155,156,157,159,160,162,163,166,167,168,169,170,172,174,175,176,177,178,179,181,182,183,184,186,187,188,189,190,192,195,196,198,199,201,202,203,204,205,207,208,209,210,211,212,213,214,215,218,220,221,223,225,226,227,228,229,230,],[13,13,-2,-3,-4,-5,-6,-7,-8,58,-10,-71,13,13,13,13,-92,-70,13,-68,-69,-72,-73,13,13,-1,-9,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-74,-75,13,58,58,13,-94,-95,-84,-85,-86,-87,58,-89,-91,13,13,13,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-65,58,137,13,58,13,-64,-83,-93,-88,58,58,58,-90,137,13,-66,-39,158,137,-36,-37,-38,58,-67,13,58,13,13,13,-62,13,173,58,13,173,-12,-35,137,-79,-97,58,13,137,13,-99,58,-40,137,173,137,13,13,58,173,58,-40,-11,204,173,173,-80,58,13,13,13,-78,-98,13,-34,13,13,13,-74,-75,13,58,58,58,13,58,-18,-29,13,-13,-100,-79,13,-80,]),'PROMPT':([0,1,2,3,4,5,6,7,8,10,13,15,16,21,22,25,30,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,62,66,67,68,69,70,71,72,74,75,77,78,79,111,116,119,120,121,129,133,143,149,150,151,154,157,160,166,167,169,172,174,181,182,188,195,198,199,201,202,203,204,207,208,209,212,218,221,223,225,226,227,228,229,230,],[23,23,-2,-3,-4,-5,-6,-7,-8,-10,23,23,23,23,-92,23,23,23,-1,-9,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-94,-95,-84,-85,-86,-87,-89,-91,23,23,23,23,23,-83,-93,-88,-90,23,23,23,23,23,23,23,-12,-79,-97,23,23,-99,23,23,-11,-80,23,23,23,-78,-98,23,23,23,23,23,23,-18,-29,23,-13,-100,-79,23,-80,]),'NOT':([0,1,2,3,4,5,6,7,8,10,13,15,16,21,22,25,30,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,62,66,67,68,69,70,71,72,74,75,77,78,79,111,116,119,120,121,129,133,143,149,150,151,154,157,160,166,167,169,172,174,181,182,188,195,198,199,201,202,203,204,207,208,209,212,218,221,223,225,226,227,228,229,230,],[25,25,-2,-3,-4,-5,-6,-7,-8,-10,25,25,25,25,-92,25,25,25,-1,-9,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-94,-95,-84,-85,-86,-87,-89,-91,25,25,25,25,25,-83,-93,-88,-90,25,25,25,25,25,25,25,-12,-79,-97,25,25,-99,25,25,-11,-80,25,25,25,-78,-98,25,25,25,25,25,25,-18,-29,25,-13,-100,-79,25,-80,]),'LPAREN':([0,1,2,3,4,5,6,7,8,10,12,13,15,16,18,19,20,21,22,23,25,30,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,62,64,66,67,68,69,70,71,72,74,75,77,78,79,111,116,119,120,121,122,129,131,133,143,149,150,151,154,157,160,166,167,169,172,174,181,182,188,194,195,198,199,201,202,203,204,207,208,209,212,218,221,223,225,226,227,228,229,230,],[15,15,-2,-3,-4,-5,-6,-7,-8,-10,62,15,15,15,77,78,79,15,-92,81,15,15,15,-1,-9,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,117,15,-94,-95,-84,-85,-86,-87,-89,-91,15,15,15,15,15,-83,-93,-88,148,-90,154,15,15,15,15,15,15,15,-12,-79,-97,15,15,-99,15,15,-11,209,-80,15,15,15,-78,-98,15,15,15,15,15,15,-18,-29,15,-13,-100,-79,15,-80,]),'IDENTIFIER':([0,1,2,3,4,5,6,7,8,10,11,13,14,15,16,17,21,22,25,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,62,66,67,68,69,70,71,72,74,75,77,78,79,110,111,116,117,119,120,121,127,129,132,133,137,143,148,149,150,151,154,157,160,163,166,167,169,170,172,174,177,179,181,182,188,191,195,198,199,201,202,203,204,207,208,209,212,218,221,223,225,226,227,228,229,230,],[12,12,-2,-3,-4,-5,-6,-7,-8,-10,61,12,64,12,12,76,12,-92,12,12,12,86,-1,-9,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,108,12,12,12,-94,-95,-84,-85,-86,-87,-89,-91,12,12,12,135,12,12,145,-83,-93,-88,152,-90,135,12,135,12,145,12,12,12,12,12,-12,135,-79,-97,12,135,12,-99,135,135,12,12,-11,145,-80,12,12,12,-78,-98,12,12,12,12,12,12,-18,-29,12,-13,-100,-79,12,-80,]),'NUMBER':([0,1,2,3,4,5,6,7,8,10,13,15,16,21,22,25,30,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,62,66,67,68,69,70,71,72,74,75,77,78,79,111,116,119,120,121,129,133,143,149,150,151,154,157,160,166,167,169,172,174,181,182,188,195,198,199,201,202,203,204,207,208,209,212,218,221,223,225,226,227,228,229,230,],[26,26,-2,-3,-4,-5,-6,-7,-8,-10,26,26,26,26,-92,26,26,26,-1,-9,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-94,-95,-84,-85,-86,-87,-89,-91,26,26,26,26,26,-83,-93,-88,-90,26,26,26,26,26,26,26,-12,-79,-97,26,26,-99,26,26,-11,-80,26,26,26,-78,-98,26,26,26,26,26,26,-18,-29,26,-13,-100,-79,26,-80,]),'FLOAT':([0,1,2,3,4,5,6,7,8,10,13,15,16,21,22,25,30,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,62,66,67,68,69,70,71,72,74,75,77,78,79,111,116,119,120,121,129,133,143,149,150,151,154,157,160,166,167,169,172,174,181,182,188,195,198,199,201,202,203,204,207,208,209,212,218,221,223,225,226,227,228,229,230,],[27,27,-2,-3,-4,-5,-6,-7,-8,-10,27,27,27,27,-92,27,27,27,-1,-9,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-94,-95,-84,-85,-86,-87,-89,-91,27,27,27,27,27,-83,-93,-88,-90,27,27,27,27,27,27,27,-12,-79,-97,27,27,-99,27,27,-11,-80,27,27,27,-78,-98,27,27,27,27,27,27,-18,-29,27,-13,-100,-79,27,-80,]),'STRING':([0,1,2,3,4,5,6,7,8,10,13,15,16,21,22,25,30,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,62,66,67,68,69,70,71,72,74,75,77,78,79,81,111,116,119,120,121,129,133,143,149,150,151,154,157,160,166,167,169,172,174,181,182,188,195,198,199,201,202,203,204,207,208,209,212,218,221,223,225,226,227,228,229,230,],[24,24,-2,-3,-4,-5,-6,-7,-8,-10,24,24,24,24,-92,24,24,24,-1,-9,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-94,-95,-84,-85,-86,-87,-89,-91,24,24,24,130,24,24,-83,-93,-88,-90,24,24,24,24,24,24,24,-12,-79,-97,24,24,-99,24,24,-11,-80,24,24,24,-78,-98,24,24,24,24,24,24,-18,-29,24,-13,-100,-79,24,-80,]),'TRUE':([0,1,2,3,4,5,6,7,8,10,13,15,16,21,22,25,30,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,62,66,67,68,69,70,71,72,74,75,77,78,79,111,116,119,120,121,129,133,143,149,150,151,154,157,160,166,167,169,172,174,181,182,188,195,198,199,201,202,203,204,207,208,209,212,218,221,223,225,226,227,228,229,230,],[28,28,-2,-3,-4,-5,-6,-7,-8,-10,28,28,28,28,-92,28,28,28,-1,-9,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-94,-95,-84,-85,-86,-87,-89,-91,28,28,28,28,28,-83,-93,-88,-90,28,28,28,28,28,28,28,-12,-79,-97,28,28,-99,28,28,-11,-80,28,28,28,-78,-98,28,28,28,28,28,28,-18,-29,28,-13,-100,-79,28,-80,]),'FALSE':([0,1,2,3,4,5,6,7,8,10,13,15,16,21,22,25,30,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,62,66,67,68,69,70,71,72,74,75,77,78,79,111,116,119,120,121,129,133,143,149,150,151,154,157,160,166,167,169,172,174,181,182,188,195,198,199,201,202,203,204,207,208,209,212,218,221,223,225,226,227,228,229,230,],[29,29,-2,-3,-4,-5,-6,-7,-8,-10,29,29,29,29,-92,29,29,29,-1,-9,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-94,-95,-84,-85,-86,-87,-89,-91,29,29,29,29,29,-83,-93,-88,-90,29,29,29,29,29,29,29,-12,-79,-97,29,29,-99,29,29,-11,-80,29,29,29,-78,-98,29,29,29,29,29,29,-18,-29,29,-13,-100,-79,29,-80,]),'PLUSPLUS':([0,1,2,3,4,5,6,7,8,9,10,12,13,15,16,21,22,24,25,26,27,28,29,30,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,62,63,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,115,116,118,119,120,121,123,124,126,129,133,134,141,142,143,144,149,150,151,153,154,156,157,160,162,166,167,168,169,172,174,175,181,182,183,186,188,195,196,198,199,201,202,203,204,207,208,209,210,211,212,213,214,215,218,220,221,223,225,226,227,228,229,230,],[30,30,-2,-3,-4,-5,-6,-7,-8,59,-10,-71,30,30,30,30,-92,-70,30,-68,-69,-72,-73,30,30,-1,-9,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-74,-75,30,59,59,30,-94,-95,-84,-85,-86,-87,59,-89,-91,30,30,30,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-65,59,30,59,30,-64,-83,-93,-88,59,59,59,-90,30,-66,59,-67,30,59,30,30,30,-62,30,59,30,-12,-35,-79,-97,59,30,30,-99,59,30,198,59,59,-11,-80,210,30,30,30,-78,-98,30,30,30,30,-74,-75,30,59,59,59,30,59,-18,-29,30,-13,-100,-79,30,-80,]),'MINUSMINUS':([0,1,2,3,4,5,6,7,8,9,10,12,13,15,16,21,22,24,25,26,27,28,29,30,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,62,63,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,115,116,118,119,120,121,123,124,126,129,133,134,141,142,143,144,149,150,151,153,154,156,157,160,162,166,167,168,169,172,174,175,181,182,183,186,188,195,196,198,199,201,202,203,204,207,208,209,210,211,212,213,214,215,218,220,221,223,225,226,227,228,229,230,],[31,31,-2,-3,-4,-5,-6,-7,-8,60,-10,-71,31,31,31,31,-92,-70,31,-68,-69,-72,-73,31,31,-1,-9,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-74,-75,31,60,60,31,-94,-95,-84,-85,-86,-87,60,-89,-91,31,31,31,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-65,60,31,60,31,-64,-83,-93,-88,60,60,60,-90,31,-66,60,-67,31,60,31,31,31,-62,31,60,31,-12,-35,-79,-97,60,31,31,-99,60,31,199,60,60,-11,-80,211,31,31,31,-78,-98,31,31,31,31,-74,-75,31,60,60,60,31,60,-18,-29,31,-13,-100,-79,31,-80,]),'CONSOLE':([0,1,2,3,4,5,6,7,8,10,16,22,34,35,66,67,68,69,70,71,72,74,75,119,120,121,129,149,150,160,166,167,174,181,188,195,202,203,207,208,212,218,221,223,225,226,227,228,229,230,],[32,32,-2,-3,-4,-5,-6,-7,-8,-10,32,-92,-1,-9,32,-94,-95,-84,-85,-86,-87,-89,-91,-83,-93,-88,-90,32,32,-12,-79,-97,-99,32,-11,-80,-78,-98,32,32,32,32,-18,-29,32,-13,-100,-79,32,-80,]),'VAR':([0,1,2,3,4,5,6,7,8,10,16,22,34,35,66,67,68,69,70,71,72,74,75,119,120,121,129,149,150,160,166,167,174,181,188,195,202,203,207,208,212,218,221,223,225,226,227,228,229,230,],[33,33,-2,-3,-4,-5,-6,-7,-8,-10,33,-92,-1,-9,33,-94,-95,-84,-85,-86,-87,-89,-91,-83,-93,-88,-90,33,33,-12,-79,-97,-99,33,-11,-80,-78,-98,33,33,33,33,-18,-29,33,-13,-100,-79,33,-80,]),'$end':([1,2,3,4,5,6,7,8,10,22,34,35,69,70,71,72,74,75,119,121,129,160,166,167,174,188,195,202,203,221,223,226,227,228,230,],[0,-2,-3,-4,-5,-6,-7,-8,-10,-92,-1,-9,-84,-85,-86,-87,-89,-91,-83,-88,-90,-12,-79,-97,-99,-11,-80,-78,-98,-18,-29,-13,-100,-79,-80,]),'SEMICOLON':([9,12,24,26,27,28,29,59,60,73,79,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,118,125,126,128,134,141,142,153,156,162,168,175,183,185,186,215,222,224,],[35,-71,-70,-68,-69,-72,-73,-74,-75,121,-96,129,-63,-76,-77,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-65,-64,151,-21,-22,-66,160,-67,-62,174,-35,182,188,-19,202,203,-20,226,227,]),'PLUS':([9,12,24,26,27,28,29,59,60,63,65,73,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,115,118,123,124,126,134,141,142,144,153,156,162,168,175,183,186,196,210,211,213,214,215,220,],[36,-71,-70,-68,-69,-72,-73,-74,-75,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-65,36,36,-64,36,36,36,-66,36,-67,36,-62,36,-35,36,36,36,36,36,-74,-75,36,36,36,36,]),'MINUS':([9,12,24,26,27,28,29,59,60,63,65,73,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,115,118,123,124,126,134,141,142,144,153,156,162,168,175,183,186,196,210,211,213,214,215,220,],[37,-71,-70,-68,-69,-72,-73,-74,-75,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-65,37,37,-64,37,37,37,-66,37,-67,37,-62,37,-35,37,37,37,37,37,-74,-75,37,37,37,37,]),'TIMES':([9,12,24,26,27,28,29,59,60,63,65,73,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,115,118,123,124,126,134,141,142,144,153,156,162,168,175,183,186,196,210,211,213,214,215,220,],[38,-71,-70,-68,-69,-72,-73,-74,-75,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-65,38,38,-64,38,38,38,-66,38,-67,38,-62,38,-35,38,38,38,38,38,-74,-75,38,38,38,38,]),'DIV':([9,12,24,26,27,28,29,59,60,63,65,73,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,115,118,123,124,126,134,141,142,144,153,156,162,168,175,183,186,196,210,211,213,214,215,220,],[39,-71,-70,-68,-69,-72,-73,-74,-75,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-65,39,39,-64,39,39,39,-66,39,-67,39,-62,39,-35,39,39,39,39,39,-74,-75,39,39,39,39,]),'MOD':([9,12,24,26,27,28,29,59,60,63,65,73,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,115,118,123,124,126,134,141,142,144,153,156,162,168,175,183,186,196,210,211,213,214,215,220,],[40,-71,-70,-68,-69,-72,-73,-74,-75,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-65,40,40,-64,40,40,40,-66,40,-67,40,-62,40,-35,40,40,40,40,40,-74,-75,40,40,40,40,]),'PLUS_ASSIGN':([9,12,24,26,27,28,29,59,60,63,65,73,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,115,118,123,124,126,134,141,142,144,153,156,162,168,175,183,186,196,210,211,213,214,215,220,],[41,-71,-70,-68,-69,-72,-73,-74,-75,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-65,41,41,-64,41,41,41,-66,41,-67,41,-62,41,-35,41,41,41,41,41,-74,-75,41,41,41,41,]),'MINUS_ASSIGN':([9,12,24,26,27,28,29,59,60,63,65,73,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,115,118,123,124,126,134,141,142,144,153,156,162,168,175,183,186,196,210,211,213,214,215,220,],[42,-71,-70,-68,-69,-72,-73,-74,-75,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-65,42,42,-64,42,42,42,-66,42,-67,42,-62,42,-35,42,42,42,42,42,-74,-75,42,42,42,42,]),'MULT_ASSIGN':([9,12,24,26,27,28,29,59,60,63,65,73,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,115,118,123,124,126,134,141,142,144,153,156,162,168,175,183,186,196,210,211,213,214,215,220,],[43,-71,-70,-68,-69,-72,-73,-74,-75,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-65,43,43,-64,43,43,43,-66,43,-67,43,-62,43,-35,43,43,43,43,43,-74,-75,43,43,43,43,]),'DIV_ASSIGN':([9,12,24,26,27,28,29,59,60,63,65,73,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,115,118,123,124,126,134,141,142,144,153,156,162,168,175,183,186,196,210,211,213,214,215,220,],[44,-71,-70,-68,-69,-72,-73,-74,-75,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-65,44,44,-64,44,44,44,-66,44,-67,44,-62,44,-35,44,44,44,44,44,-74,-75,44,44,44,44,]),'MOD_ASSIGN':([9,12,24,26,27,28,29,59,60,63,65,73,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,115,118,123,124,126,134,141,142,144,153,156,162,168,175,183,186,196,210,211,213,214,215,220,],[45,-71,-70,-68,-69,-72,-73,-74,-75,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-65,45,45,-64,45,45,45,-66,45,-67,45,-62,45,-35,45,45,45,45,45,-74,-75,45,45,45,45,]),'POT':([9,12,24,26,27,28,29,59,60,63,65,73,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,115,118,123,124,126,134,141,142,144,153,156,162,168,175,183,186,196,210,211,213,214,215,220,],[46,-71,-70,-68,-69,-72,-73,-74,-75,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-65,46,46,-64,46,46,46,-66,46,-67,46,-62,46,-35,46,46,46,46,46,-74,-75,46,46,46,46,]),'AND':([9,12,24,26,27,28,29,59,60,63,65,73,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,115,118,123,124,126,134,141,142,144,153,156,162,168,175,183,186,196,210,211,213,214,215,220,],[47,-71,-70,-68,-69,-72,-73,-74,-75,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-65,47,47,-64,47,47,47,-66,47,-67,47,-62,47,-35,47,47,47,47,47,-74,-75,47,47,47,47,]),'OR':([9,12,24,26,27,28,29,59,60,63,65,73,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,115,118,123,124,126,134,141,142,144,153,156,162,168,175,183,186,196,210,211,213,214,215,220,],[48,-71,-70,-68,-69,-72,-73,-74,-75,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-65,48,48,-64,48,48,48,-66,48,-67,48,-62,48,-35,48,48,48,48,48,-74,-75,48,48,48,48,]),'EQ':([9,12,24,26,27,28,29,59,60,63,65,73,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,115,118,123,124,126,134,141,142,144,153,156,162,168,175,183,186,196,210,211,213,214,215,220,],[49,-71,-70,-68,-69,-72,-73,-74,-75,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-65,49,49,-64,49,49,49,-66,49,-67,49,-62,49,-35,49,49,49,49,49,-74,-75,49,49,49,49,]),'NEQ':([9,12,24,26,27,28,29,59,60,63,65,73,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,115,118,123,124,126,134,141,142,144,153,156,162,168,175,183,186,196,210,211,213,214,215,220,],[50,-71,-70,-68,-69,-72,-73,-74,-75,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-65,50,50,-64,50,50,50,-66,50,-67,50,-62,50,-35,50,50,50,50,50,-74,-75,50,50,50,50,]),'STRICT_EQ':([9,12,24,26,27,28,29,59,60,63,65,73,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,115,118,123,124,126,134,141,142,144,153,156,162,168,175,183,186,196,210,211,213,214,215,220,],[51,-71,-70,-68,-69,-72,-73,-74,-75,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-65,51,51,-64,51,51,51,-66,51,-67,51,-62,51,-35,51,51,51,51,51,-74,-75,51,51,51,51,]),'STRICT_NEQ':([9,12,24,26,27,28,29,59,60,63,65,73,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,115,118,123,124,126,134,141,142,144,153,156,162,168,175,183,186,196,210,211,213,214,215,220,],[52,-71,-70,-68,-69,-72,-73,-74,-75,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-65,52,52,-64,52,52,52,-66,52,-67,52,-62,52,-35,52,52,52,52,52,-74,-75,52,52,52,52,]),'LT':([9,12,24,26,27,28,29,59,60,63,65,73,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,115,118,123,124,126,134,141,142,144,153,156,162,168,175,183,186,196,210,211,213,214,215,220,],[53,-71,-70,-68,-69,-72,-73,-74,-75,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-65,53,53,-64,53,53,53,-66,53,-67,53,-62,53,-35,53,53,53,53,53,-74,-75,53,53,53,53,]),'GT':([9,12,24,26,27,28,29,59,60,63,65,73,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,115,118,123,124,126,134,141,142,144,153,156,162,168,175,183,186,196,210,211,213,214,215,220,],[54,-71,-70,-68,-69,-72,-73,-74,-75,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-65,54,54,-64,54,54,54,-66,54,-67,54,-62,54,-35,54,54,54,54,54,-74,-75,54,54,54,54,]),'LE':([9,12,24,26,27,28,29,59,60,63,65,73,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,115,118,123,124,126,134,141,142,144,153,156,162,168,175,183,186,196,210,211,213,214,215,220,],[55,-71,-70,-68,-69,-72,-73,-74,-75,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-65,55,55,-64,55,55,55,-66,55,-67,55,-62,55,-35,55,55,55,55,55,-74,-75,55,55,55,55,]),'GE':([9,12,24,26,27,28,29,59,60,63,65,73,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,115,118,123,124,126,134,141,142,144,153,156,162,168,175,183,186,196,210,211,213,214,215,220,],[56,-71,-70,-68,-69,-72,-73,-74,-75,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-65,56,56,-64,56,56,56,-66,56,-67,56,-62,56,-35,56,56,56,56,56,-74,-75,56,56,56,56,]),'DOT':([9,12,24,26,27,28,29,32,59,60,63,65,73,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,115,118,123,124,126,134,141,142,144,153,156,162,168,175,183,186,196,210,211,213,214,215,220,],[57,-71,-70,-68,-69,-72,-73,85,-74,-75,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-65,57,57,-64,57,57,57,-66,57,-67,57,-62,57,-35,57,57,57,57,57,-74,-75,57,57,57,57,]),'COMMA':([12,24,26,27,28,29,59,60,63,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,118,134,135,138,139,140,142,153,159,162,178,187,205,],[-71,-70,-68,-69,-72,-73,-74,-75,116,-63,-76,-77,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-65,143,-64,-66,-39,-36,-37,-38,-67,-62,177,-35,191,-40,-34,]),'RPAREN':([12,24,26,27,28,29,59,60,62,65,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,112,113,114,115,117,118,123,124,130,134,135,138,139,140,142,146,147,148,153,154,161,162,165,171,178,182,187,191,196,197,200,205,206,210,211,213,214,220,],[-71,-70,-68,-69,-72,-73,-74,-75,-96,118,-63,-76,-77,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-65,142,-14,-15,-16,-96,-64,149,150,153,-66,-39,-36,-37,-38,-67,164,-32,-96,-62,-96,-17,-35,180,185,-30,-96,-40,-96,-23,212,-28,-34,-31,-24,-25,-26,-27,225,]),'RBRACKET':([12,24,26,27,28,29,59,60,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,115,118,134,135,138,139,140,142,144,153,158,161,162,173,187,190,204,205,216,],[-71,-70,-68,-69,-72,-73,-74,-75,-63,-76,-77,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-65,134,-14,-15,-16,-64,-66,-39,-36,-37,-38,-67,162,-62,176,-17,-35,187,-40,205,-96,-34,222,]),'RBRACE':([16,22,66,67,68,69,70,71,72,74,75,119,120,121,129,160,166,167,174,188,195,202,203,207,208,217,218,219,221,223,226,227,228,230,],[-96,-92,119,-94,-95,-84,-85,-86,-87,-89,-91,-83,-93,-88,-90,-12,-79,-97,-99,-11,-80,-78,-98,-96,-96,223,-33,224,-18,-29,-13,-100,-79,-80,]),'ELSE':([22,69,70,71,72,74,75,119,121,129,160,166,167,174,188,195,202,203,221,223,226,227,228,230,],[-92,-84,-85,-86,-87,-89,-91,-83,-88,-90,-12,181,-97,-99,-11,-80,-78,-98,-18,-29,-13,-100,229,-80,]),'COLON':([61,86,145,152,164,],[110,132,163,170,179,]),'EQUAL':([61,76,86,135,136,138,139,140,152,155,176,184,187,205,],[111,122,133,-39,157,-36,-37,-38,169,172,189,201,-40,-34,]),'LOG':([85,],[131,]),'NUMBER_TYPE':([110,132,137,163,170,177,179,],[138,138,138,138,138,138,138,]),'STRING_TYPE':([110,132,137,163,170,177,179,],[139,139,139,139,139,139,139,]),'BOOLEAN_TYPE':([110,132,137,163,170,177,179,],[140,140,140,140,140,140,140,]),'ARROW':([180,],[193,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'element':([0,1,],[2,34,]),'letAssignment':([0,1,16,66,149,150,181,207,208,212,218,225,229,],[3,3,69,69,69,69,69,69,69,69,69,69,69,]),'declaracion':([0,1,16,66,149,150,181,207,208,212,218,225,229,],[4,4,70,70,70,70,70,70,70,70,70,70,70,]),'function':([0,1,16,66,149,150,181,207,208,212,218,225,229,],[5,5,71,71,71,71,71,71,71,71,71,71,71,]),'controlEstructure':([0,1,16,66,149,150,181,207,208,212,218,225,229,],[6,6,74,74,74,74,74,74,74,74,74,74,74,]),'forEstructure':([0,1,16,66,149,150,181,207,208,212,218,225,229,],[7,7,75,75,75,75,75,75,75,75,75,75,75,]),'statement':([0,1,16,66,149,150,181,207,208,212,218,225,229,],[8,8,67,120,166,167,195,67,67,221,120,228,230,]),'expression':([0,1,13,15,16,21,25,30,31,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,62,66,77,78,79,111,116,133,143,149,150,151,154,157,169,172,181,182,198,199,201,204,207,208,209,212,218,225,229,],[9,9,63,65,73,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,115,73,123,124,126,141,144,156,115,73,73,168,115,175,183,186,73,196,213,214,215,115,73,73,220,73,73,73,73,]),'consolelog':([0,1,16,66,149,150,181,207,208,212,218,225,229,],[10,10,72,72,72,72,72,72,72,72,72,72,72,]),'varAssignment':([0,1,16,66,149,150,181,207,208,212,218,225,229,],[22,22,22,22,22,22,22,22,22,22,22,22,22,]),'instruction_list':([16,207,208,],[66,218,218,]),'empty':([16,62,79,117,148,154,182,191,204,207,208,],[68,114,128,147,147,114,200,147,114,68,68,]),'lista_expresiones_opt':([62,154,204,],[112,171,216,]),'lista_expresiones':([62,143,154,204,],[113,161,113,113,]),'for_init':([79,],[125,]),'type':([110,132,137,163,170,177,179,],[136,155,159,178,184,190,192,]),'parameters':([117,148,191,],[146,165,206,]),'for_update':([182,],[197,]),'body_function':([207,208,],[217,219,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program element','program',2,'p_program','parser.py',15),
  ('program -> element','program',1,'p_program','parser.py',16),
  ('element -> letAssignment','element',1,'p_element','parser.py',20),
  ('element -> declaracion','element',1,'p_element','parser.py',21),
  ('element -> function','element',1,'p_element','parser.py',22),
  ('element -> controlEstructure','element',1,'p_element','parser.py',23),
  ('element -> forEstructure','element',1,'p_element','parser.py',24),
  ('element -> statement','element',1,'p_element','parser.py',25),
  ('element -> expression SEMICOLON','element',2,'p_element','parser.py',26),
  ('element -> consolelog','element',1,'p_element','parser.py',27),
  ('letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON','letAssignment',7,'p_letAssignment','parser.py',32),
  ('letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON','letAssignment',5,'p_letAssignment_no_type','parser.py',36),
  ('declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON','declaracion',11,'p_declaracion','parser.py',41),
  ('lista_expresiones_opt -> lista_expresiones','lista_expresiones_opt',1,'p_lista_expresiones_opt','parser.py',45),
  ('lista_expresiones_opt -> empty','lista_expresiones_opt',1,'p_lista_expresiones_opt','parser.py',46),
  ('lista_expresiones -> expression','lista_expresiones',1,'p_lista_expresiones','parser.py',50),
  ('lista_expresiones -> expression COMMA lista_expresiones','lista_expresiones',3,'p_lista_expresiones','parser.py',51),
  ('forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement','forEstructure',9,'p_forEstructure','parser.py',56),
  ('for_init -> LET IDENTIFIER EQUAL expression','for_init',4,'p_for_init','parser.py',60),
  ('for_init -> LET IDENTIFIER COLON type EQUAL expression','for_init',6,'p_for_init','parser.py',61),
  ('for_init -> expression','for_init',1,'p_for_init','parser.py',62),
  ('for_init -> empty','for_init',1,'p_for_init','parser.py',63),
  ('for_update -> expression','for_update',1,'p_for_update','parser.py',68),
  ('for_update -> expression PLUSPLUS','for_update',2,'p_for_update','parser.py',69),
  ('for_update -> expression MINUSMINUS','for_update',2,'p_for_update','parser.py',70),
  ('for_update -> PLUSPLUS expression','for_update',2,'p_for_update','parser.py',71),
  ('for_update -> MINUSMINUS expression','for_update',2,'p_for_update','parser.py',72),
  ('for_update -> empty','for_update',1,'p_for_update','parser.py',73),
  ('function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE','function',10,'p_function','parser.py',78),
  ('parameters -> IDENTIFIER COLON type','parameters',3,'p_parameters','parser.py',82),
  ('parameters -> IDENTIFIER COLON type COMMA parameters','parameters',5,'p_parameters','parser.py',83),
  ('parameters -> empty','parameters',1,'p_parameters','parser.py',84),
  ('body_function -> instruction_list','body_function',1,'p_body_function','parser.py',88),
  ('type -> LBRACKET type COMMA type RBRACKET','type',5,'p_type_tuple','parser.py',93),
  ('expression -> LBRACKET expression COMMA expression RBRACKET','expression',5,'p_expression_tuple','parser.py',97),
  ('type -> NUMBER_TYPE','type',1,'p_type','parser.py',102),
  ('type -> STRING_TYPE','type',1,'p_type','parser.py',103),
  ('type -> BOOLEAN_TYPE','type',1,'p_type','parser.py',104),
  ('type -> IDENTIFIER','type',1,'p_type','parser.py',105),
  ('type -> type LBRACKET RBRACKET','type',3,'p_type','parser.py',106),
  ('expression -> expression PLUS expression','expression',3,'p_expression','parser.py',111),
  ('expression -> expression MINUS expression','expression',3,'p_expression','parser.py',112),
  ('expression -> expression TIMES expression','expression',3,'p_expression','parser.py',113),
  ('expression -> expression DIV expression','expression',3,'p_expression','parser.py',114),
  ('expression -> expression MOD expression','expression',3,'p_expression','parser.py',115),
  ('expression -> expression PLUS_ASSIGN expression','expression',3,'p_expression','parser.py',116),
  ('expression -> expression MINUS_ASSIGN expression','expression',3,'p_expression','parser.py',117),
  ('expression -> expression MULT_ASSIGN expression','expression',3,'p_expression','parser.py',118),
  ('expression -> expression DIV_ASSIGN expression','expression',3,'p_expression','parser.py',119),
  ('expression -> expression MOD_ASSIGN expression','expression',3,'p_expression','parser.py',120),
  ('expression -> expression POT expression','expression',3,'p_expression','parser.py',121),
  ('expression -> expression AND expression','expression',3,'p_expression','parser.py',122),
  ('expression -> expression OR expression','expression',3,'p_expression','parser.py',123),
  ('expression -> expression EQ expression','expression',3,'p_expression','parser.py',124),
  ('expression -> expression NEQ expression','expression',3,'p_expression','parser.py',125),
  ('expression -> expression STRICT_EQ expression','expression',3,'p_expression','parser.py',126),
  ('expression -> expression STRICT_NEQ expression','expression',3,'p_expression','parser.py',127),
  ('expression -> expression LT expression','expression',3,'p_expression','parser.py',128),
  ('expression -> expression GT expression','expression',3,'p_expression','parser.py',129),
  ('expression -> expression LE expression','expression',3,'p_expression','parser.py',130),
  ('expression -> expression GE expression','expression',3,'p_expression','parser.py',131),
  ('expression -> PROMPT LPAREN STRING RPAREN','expression',4,'p_expression','parser.py',132),
  ('expression -> NOT expression','expression',2,'p_expression','parser.py',133),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','parser.py',134),
  ('expression -> expression DOT IDENTIFIER','expression',3,'p_expression','parser.py',135),
  ('expression -> expression LBRACKET expression RBRACKET','expression',4,'p_expression','parser.py',136),
  ('expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN','expression',4,'p_expression','parser.py',137),
  ('expression -> NUMBER','expression',1,'p_expression','parser.py',138),
  ('expression -> FLOAT','expression',1,'p_expression','parser.py',139),
  ('expression -> STRING','expression',1,'p_expression','parser.py',140),
  ('expression -> IDENTIFIER','expression',1,'p_expression','parser.py',141),
  ('expression -> TRUE','expression',1,'p_expression','parser.py',142),
  ('expression -> FALSE','expression',1,'p_expression','parser.py',143),
  ('expression -> expression PLUSPLUS','expression',2,'p_expression_increment','parser.py',147),
  ('expression -> expression MINUSMINUS','expression',2,'p_expression_increment','parser.py',148),
  ('expression -> PLUSPLUS expression','expression',2,'p_expression_increment','parser.py',149),
  ('expression -> MINUSMINUS expression','expression',2,'p_expression_increment','parser.py',150),
  ('consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON','consolelog',7,'p_consolelog','parser.py',154),
  ('controlEstructure -> IF LPAREN expression RPAREN statement','controlEstructure',5,'p_controlEstructure','parser.py',159),
  ('controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement','controlEstructure',7,'p_controlEstructure','parser.py',160),
  ('controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement','controlEstructure',11,'p_controlEstructure','parser.py',161),
  ('controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement','controlEstructure',13,'p_controlEstructure','parser.py',162),
  ('statement -> LBRACE instruction_list RBRACE','statement',3,'p_statement','parser.py',167),
  ('statement -> letAssignment','statement',1,'p_statement','parser.py',168),
  ('statement -> declaracion','statement',1,'p_statement','parser.py',169),
  ('statement -> function','statement',1,'p_statement','parser.py',170),
  ('statement -> consolelog','statement',1,'p_statement','parser.py',171),
  ('statement -> expression SEMICOLON','statement',2,'p_statement','parser.py',172),
  ('statement -> controlEstructure','statement',1,'p_statement','parser.py',173),
  ('statement -> RETURN expression SEMICOLON','statement',3,'p_statement','parser.py',174),
  ('statement -> forEstructure','statement',1,'p_statement','parser.py',175),
  ('statement -> varAssignment','statement',1,'p_statement','parser.py',176),
  ('instruction_list -> instruction_list statement','instruction_list',2,'p_instruction_list','parser.py',180),
  ('instruction_list -> statement','instruction_list',1,'p_instruction_list','parser.py',181),
  ('instruction_list -> empty','instruction_list',1,'p_instruction_list','parser.py',182),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',187),
  ('controlEstructure -> WHILE LPAREN expression RPAREN statement','controlEstructure',5,'p_controlEstructure_while','parser.py',205),
  ('varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON','varAssignment',7,'p_varAssignment','parser.py',212),
  ('varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON','varAssignment',5,'p_varAssignment_no_type','parser.py',216),
  ('function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON','function',11,'p_arrow_function','parser.py',221),
]
