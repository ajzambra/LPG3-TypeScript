
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAND ANY ARROW AS ASYNC AWAIT BIGINT_TYPE BOOLEAN_TYPE BREAK CASE CATCH CLASS COLON COMMA CONSOLE CONST CONTINUE DEFAULT DIV DIV_ASSIGN DOT ELSE ENUM EQ EQUAL EXPORT FALSE FINALLY FLOAT FOR FUNCTION GE GT IDENTIFIER IF IMPORT INTERFACE LBRACE LBRACKET LE LET LOG LPAREN LT MINUS MINUSMINUS MINUS_ASSIGN MOD MOD_ASSIGN MULT_ASSIGN NEQ NEW NOT NULL_TYPE NUMBER NUMBER_TYPE OF OR PLUS PLUSPLUS PLUS_ASSIGN POT PRIVATE PROMPT PROTECTED PUBLIC RBRACE RBRACKET RETURN RPAREN SEMICOLON STATIC STRICT_EQ STRICT_NEQ STRING STRING_TYPE SUPER SWITCH SYMBOL_TYPE THIS TIMES TRUE TRY TYPE UNDEFINED_TYPE VAR VOID WHILEprogram : program element\n               | elementelement : letAssignment\n               | declaracion\n               | function\n               | arrow_function\n               | async_function\n               | constAssignment\n               | enum_definition\n               | controlEstructure\n               | forEstructure\n               | class_definition\n               | statement\n               | expression SEMICOLON\n               | consolelogletAssignment : LET IDENTIFIER COLON type EQUAL expression SEMICOLONletAssignment : LET IDENTIFIER EQUAL expression SEMICOLONdeclaracion : LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLONlista_expresiones_opt : lista_expresiones\n                            | emptylista_expresiones : expression\n                        | expression COMMA lista_expresionesforEstructure : FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statementfor_init : LET IDENTIFIER EQUAL expression\n                | LET IDENTIFIER COLON type EQUAL expression\n                | expression\n                | emptyfor_update : expression\n                  | expression PLUSPLUS\n                  | expression MINUSMINUS\n                  | PLUSPLUS expression\n                  | MINUSMINUS expression\n                  | emptyfunction : FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACEparameters : IDENTIFIER COLON type\n                | IDENTIFIER COLON type COMMA parameters\n                | emptybody_function : instruction_listtype : LBRACKET type COMMA type RBRACKETexpression : LBRACKET expression COMMA expression RBRACKETtype : NUMBER_TYPE\n            | STRING_TYPE\n            | BOOLEAN_TYPE\n            | IDENTIFIER\n            | type LBRACKET RBRACKETexpression : expression PLUS expression\n                | expression MINUS expression\n                | expression TIMES expression\n                | expression DIV expression\n                | expression MOD expression\n                | expression PLUS_ASSIGN expression\n                | expression MINUS_ASSIGN expression\n                | expression MULT_ASSIGN expression\n                | expression DIV_ASSIGN expression\n                | expression MOD_ASSIGN expression\n                | expression POT expression\n                | expression AND expression\n                | expression OR expression\n                | expression EQ expression\n                | expression NEQ expression\n                | expression STRICT_EQ expression\n                | expression STRICT_NEQ expression\n                | expression LT expression\n                | expression GT expression\n                | expression LE expression\n                | expression GE expression\n                | PROMPT LPAREN STRING RPAREN\n                | NOT expression\n                | LPAREN expression RPAREN\n                | expression DOT IDENTIFIER\n                | expression LBRACKET expression RBRACKET\n                | IDENTIFIER LPAREN lista_expresiones_opt RPAREN\n                | NUMBER\n                | FLOAT\n                | STRING\n                | IDENTIFIER\n                | TRUE\n                | FALSEexpression : expression PLUSPLUS\n                    | expression MINUSMINUS\n                    | PLUSPLUS expression\n                    | MINUSMINUS expressionconsolelog : CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLONcontrolEstructure : IF LPAREN expression RPAREN statement \n                        | IF LPAREN expression RPAREN statement ELSE statement \n                        | IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement \n                        | IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statementstatement : LBRACE instruction_list RBRACE\n                 | letAssignment\n                 | varAssignment\n                 | constAssignment\n                 | declaracion\n                 | function\n                 | arrow_function\n                 | async_function\n                 | consolelog\n                 | expression SEMICOLON\n                 | controlEstructure\n                 | RETURN expression SEMICOLON\n                 | forEstructure\n                 | class_definitioninstruction_list : instruction_list statement\n                        | statement\n                        | emptyempty :constAssignment : CONST IDENTIFIER COLON type EQUAL expression SEMICOLONconstAssignment : CONST IDENTIFIER EQUAL expression SEMICOLONclass_definition : CLASS IDENTIFIER LBRACE class_body RBRACEclass_body : class_body class_element\n                  | class_element\n                  | emptyclass_element : function\n                     | letAssignment\n                     | varAssignment\n                     | constAssignmentcontrolEstructure : SWITCH LPAREN expression RPAREN LBRACE case_block RBRACEcase_block : case_block case\n                  | case\n                  | emptycase : CASE expression COLON instruction_list\n            | DEFAULT COLON instruction_listenum_definition : ENUM IDENTIFIER LBRACE enum_members RBRACEenum_members : IDENTIFIER\n                    | IDENTIFIER COMMA enum_membersasync_function : ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACEcontrolEstructure : WHILE LPAREN expression RPAREN statementvarAssignment : VAR IDENTIFIER COLON type EQUAL expression SEMICOLONvarAssignment : VAR IDENTIFIER EQUAL expression SEMICOLONarrow_function : CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON'
    
_lr_action_items = {'LET':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,21,30,43,44,75,76,77,78,79,80,81,82,83,84,86,87,88,96,137,138,139,152,153,179,181,184,185,186,187,188,189,190,200,207,212,213,215,219,220,225,236,249,255,258,259,262,270,271,275,276,279,280,283,289,291,293,294,296,299,300,301,302,303,304,305,],[16,16,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,16,-90,-1,-14,16,-103,-104,-89,-91,-92,-93,-94,-95,-96,-98,-100,-101,150,-88,-102,-97,191,-99,16,16,191,-110,-111,-112,-113,-114,-115,-17,-107,-122,-84,-126,-108,-109,-128,16,-16,-106,-85,-116,16,-83,-127,16,16,16,16,16,16,16,16,-23,-34,16,-18,-129,-125,-84,16,-85,]),'FUNCTION':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,21,23,30,43,44,75,76,77,78,79,80,81,82,83,84,86,87,88,137,138,139,152,153,179,181,184,185,186,187,188,189,190,200,207,212,213,215,219,220,225,236,249,255,258,259,262,270,271,275,276,279,280,283,289,291,293,294,296,299,300,301,302,303,304,305,],[19,19,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,19,91,-90,-1,-14,19,-103,-104,-89,-91,-92,-93,-94,-95,-96,-98,-100,-101,-88,-102,-97,19,-99,19,19,19,-110,-111,-112,-113,-114,-115,-17,-107,-122,-84,-126,-108,-109,-128,19,-16,-106,-85,-116,19,-83,-127,19,19,19,19,19,19,19,19,-23,-34,19,-18,-129,-125,-84,19,-85,]),'CONST':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,21,30,43,44,75,76,77,78,79,80,81,82,83,84,86,87,88,137,138,139,152,153,179,181,184,185,186,187,188,189,190,200,207,212,213,215,219,220,225,236,249,255,258,259,262,270,271,275,276,279,280,283,289,291,293,294,296,299,300,301,302,303,304,305,],[22,22,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,89,-90,-1,-14,89,-103,-104,-89,-91,-92,-93,-94,-95,-96,-98,-100,-101,-88,-102,-97,192,-99,89,89,192,-110,-111,-112,-113,-114,-115,-17,-107,-122,-84,-126,-108,-109,-128,89,-16,-106,-85,-116,89,-83,-127,89,89,89,89,89,89,89,89,-23,-34,89,-18,-129,-125,-84,89,-85,]),'ASYNC':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,21,30,43,44,75,76,77,78,79,80,81,82,83,84,86,87,88,137,138,139,153,179,181,200,207,212,213,215,219,225,236,249,255,258,259,262,270,271,275,276,279,280,283,289,291,293,294,296,299,300,301,302,303,304,305,],[23,23,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,23,-90,-1,-14,23,-103,-104,-89,-91,-92,-93,-94,-95,-96,-98,-100,-101,-88,-102,-97,-99,23,23,-17,-107,-122,-84,-126,-108,-128,23,-16,-106,-85,-116,23,-83,-127,23,23,23,23,23,23,23,23,-23,-34,23,-18,-129,-125,-84,23,-85,]),'ENUM':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,30,43,44,78,79,80,81,82,83,84,86,87,88,137,139,153,200,207,212,213,215,219,225,249,255,258,259,270,271,294,296,300,301,302,303,305,],[24,24,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,-90,-1,-14,-89,-91,-92,-93,-94,-95,-96,-98,-100,-101,-88,-97,-99,-17,-107,-122,-84,-126,-108,-128,-16,-106,-85,-116,-83,-127,-23,-34,-18,-129,-125,-84,-85,]),'IF':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,21,30,43,44,75,76,77,78,79,80,81,82,83,84,86,87,88,137,138,139,153,179,181,200,207,212,213,215,219,225,236,249,255,258,259,262,270,271,275,276,279,280,283,289,291,293,294,296,299,300,301,302,303,304,305,],[25,25,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,25,-90,-1,-14,25,-103,-104,-89,-91,-92,-93,-94,-95,-96,-98,-100,-101,-88,-102,-97,-99,25,25,-17,-107,-122,-84,-126,-108,-128,257,-16,-106,-85,-116,25,-83,-127,25,25,25,25,25,25,25,25,-23,-34,25,-18,-129,-125,-84,257,-85,]),'SWITCH':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,21,30,43,44,75,76,77,78,79,80,81,82,83,84,86,87,88,137,138,139,153,179,181,200,207,212,213,215,219,225,236,249,255,258,259,262,270,271,275,276,279,280,283,289,291,293,294,296,299,300,301,302,303,304,305,],[26,26,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,26,-90,-1,-14,26,-103,-104,-89,-91,-92,-93,-94,-95,-96,-98,-100,-101,-88,-102,-97,-99,26,26,-17,-107,-122,-84,-126,-108,-128,26,-16,-106,-85,-116,26,-83,-127,26,26,26,26,26,26,26,26,-23,-34,26,-18,-129,-125,-84,26,-85,]),'WHILE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,21,30,43,44,75,76,77,78,79,80,81,82,83,84,86,87,88,137,138,139,153,179,181,200,207,212,213,215,219,225,236,249,255,258,259,262,270,271,275,276,279,280,283,289,291,293,294,296,299,300,301,302,303,304,305,],[27,27,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,27,-90,-1,-14,27,-103,-104,-89,-91,-92,-93,-94,-95,-96,-98,-100,-101,-88,-102,-97,-99,27,27,-17,-107,-122,-84,-126,-108,-128,27,-16,-106,-85,-116,27,-83,-127,27,27,27,27,27,27,27,27,-23,-34,27,-18,-129,-125,-84,27,-85,]),'FOR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,21,30,43,44,75,76,77,78,79,80,81,82,83,84,86,87,88,137,138,139,153,179,181,200,207,212,213,215,219,225,236,249,255,258,259,262,270,271,275,276,279,280,283,289,291,293,294,296,299,300,301,302,303,304,305,],[28,28,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,28,-90,-1,-14,28,-103,-104,-89,-91,-92,-93,-94,-95,-96,-98,-100,-101,-88,-102,-97,-99,28,28,-17,-107,-122,-84,-126,-108,-128,28,-16,-106,-85,-116,28,-83,-127,28,28,28,28,28,28,28,28,-23,-34,28,-18,-129,-125,-84,28,-85,]),'CLASS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,21,30,43,44,75,76,77,78,79,80,81,82,83,84,86,87,88,137,138,139,153,179,181,200,207,212,213,215,219,225,236,249,255,258,259,262,270,271,275,276,279,280,283,289,291,293,294,296,299,300,301,302,303,304,305,],[29,29,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,29,-90,-1,-14,29,-103,-104,-89,-91,-92,-93,-94,-95,-96,-98,-100,-101,-88,-102,-97,-99,29,29,-17,-107,-122,-84,-126,-108,-128,29,-16,-106,-85,-116,29,-83,-127,29,29,29,29,29,29,29,29,-23,-34,29,-18,-129,-125,-84,29,-85,]),'LBRACE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,21,30,43,44,75,76,77,78,79,80,81,82,83,84,86,87,88,92,97,137,138,139,153,159,162,163,164,179,180,181,200,207,212,213,215,219,225,233,236,249,253,254,255,258,259,262,270,271,273,275,276,277,279,280,283,289,291,293,294,296,299,300,301,302,303,304,305,],[21,21,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,21,-90,-1,-14,21,-103,-104,-89,-91,-92,-93,-94,-95,-96,-98,-100,-101,144,152,-88,-102,-97,-99,-44,-41,-42,-43,21,214,21,-17,-107,-122,-84,-126,-108,-128,-45,21,-16,275,276,-106,-85,-116,21,-83,-127,-39,21,21,291,21,21,21,21,21,21,-23,-34,21,-18,-129,-125,-84,21,-85,]),'RETURN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,21,30,43,44,75,76,77,78,79,80,81,82,83,84,86,87,88,137,138,139,153,179,181,200,207,212,213,215,219,225,236,249,255,258,259,262,270,271,275,276,279,280,283,289,291,293,294,296,299,300,301,302,303,304,305,],[31,31,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,31,-90,-1,-14,31,-103,-104,-89,-91,-92,-93,-94,-95,-96,-98,-100,-101,-88,-102,-97,-99,31,31,-17,-107,-122,-84,-126,-108,-128,31,-16,-106,-85,-116,31,-83,-127,31,31,31,31,31,31,31,31,-23,-34,31,-18,-129,-125,-84,31,-85,]),'LBRACKET':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,20,21,30,31,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,94,95,96,98,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,134,136,137,138,139,141,142,145,146,147,149,153,156,157,158,159,160,161,162,163,164,165,166,167,168,172,173,174,175,179,181,182,193,194,195,196,197,199,200,202,203,205,207,208,212,213,215,216,217,218,219,224,225,226,227,228,229,230,232,233,236,240,242,243,244,245,246,248,249,250,251,253,255,256,258,259,261,262,263,265,266,268,269,270,271,272,273,275,276,277,278,279,280,281,282,283,284,285,286,289,291,292,293,294,296,299,300,301,302,303,304,305,],[18,18,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,67,-15,-76,18,18,18,-90,18,-75,18,-73,-74,-77,-78,18,18,-1,-14,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-79,-80,18,67,67,18,-103,-104,-89,-91,-92,-93,-94,-95,-96,67,-98,-100,-101,18,18,18,18,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-70,67,161,18,67,18,-69,-88,-102,-97,18,161,67,67,67,67,-99,161,18,-71,-44,198,161,-41,-42,-43,67,-72,18,67,18,18,67,209,18,18,18,-67,18,209,67,18,209,-17,-40,161,-76,-107,18,-122,-84,-126,67,18,161,-108,18,-128,67,-45,161,209,161,67,-45,18,18,18,67,209,161,18,67,-16,272,209,209,-106,161,-85,-116,67,18,67,18,18,18,209,-83,-127,18,-39,18,18,209,18,18,18,-79,-80,18,67,67,67,18,18,67,18,-23,-34,18,-18,-129,-125,-84,18,-85,]),'PROMPT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,18,20,21,30,31,34,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,71,75,76,77,78,79,80,81,82,83,84,86,87,88,93,94,95,96,129,134,137,138,139,141,153,157,167,172,173,179,181,182,194,197,200,207,208,212,213,215,217,219,224,225,236,240,242,246,249,255,258,259,262,265,266,268,270,271,272,275,276,278,279,280,283,289,291,293,294,296,299,300,301,302,303,304,305,],[32,32,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,32,32,32,-90,32,32,32,32,-1,-14,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-103,-104,-89,-91,-92,-93,-94,-95,-96,-98,-100,-101,32,32,32,32,32,32,-88,-102,-97,32,-99,32,32,32,32,32,32,32,32,32,-17,-107,32,-122,-84,-126,32,-108,32,-128,32,32,32,32,-16,-106,-85,-116,32,32,32,32,-83,-127,32,32,32,32,32,32,32,32,32,32,-23,-34,32,-18,-129,-125,-84,32,-85,]),'NOT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,18,20,21,30,31,34,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,71,75,76,77,78,79,80,81,82,83,84,86,87,88,93,94,95,96,129,134,137,138,139,141,153,157,167,172,173,179,181,182,194,197,200,207,208,212,213,215,217,219,224,225,236,240,242,246,249,255,258,259,262,265,266,268,270,271,272,275,276,278,279,280,283,289,291,293,294,296,299,300,301,302,303,304,305,],[34,34,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,34,34,34,-90,34,34,34,34,-1,-14,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-103,-104,-89,-91,-92,-93,-94,-95,-96,-98,-100,-101,34,34,34,34,34,34,-88,-102,-97,34,-99,34,34,34,34,34,34,34,34,34,-17,-107,34,-122,-84,-126,34,-108,34,-128,34,34,34,34,-16,-106,-85,-116,34,34,34,34,-83,-127,34,34,34,34,34,34,34,34,34,34,-23,-34,34,-18,-129,-125,-84,34,-85,]),'LPAREN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,17,18,20,21,25,26,27,28,30,31,32,34,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,71,73,75,76,77,78,79,80,81,82,83,84,86,87,88,93,94,95,96,129,134,137,138,139,141,143,153,155,157,167,172,173,179,181,182,194,197,200,205,207,208,212,213,215,217,219,224,225,236,240,242,246,249,255,257,258,259,262,265,266,268,270,271,272,275,276,278,279,280,283,289,291,293,294,296,299,300,301,302,303,304,305,],[20,20,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,71,20,20,20,93,94,95,96,-90,20,99,20,20,20,-1,-14,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,135,20,-103,-104,-89,-91,-92,-93,-94,-95,-96,-98,-100,-101,20,20,20,20,20,20,-88,-102,-97,173,176,-99,194,20,20,173,20,20,20,20,20,20,-17,71,-107,20,-122,-84,-126,20,-108,20,-128,20,20,20,20,-16,-106,278,-85,-116,20,20,20,20,-83,-127,20,20,20,20,20,20,20,20,20,20,-23,-34,20,-18,-129,-125,-84,20,-85,]),'IDENTIFIER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,20,21,22,24,29,30,31,34,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,75,76,77,78,79,80,81,82,83,84,86,87,88,89,91,93,94,95,96,128,129,134,135,137,138,139,141,142,144,150,153,156,157,161,167,172,173,176,179,181,182,191,192,194,197,200,203,207,208,211,212,213,215,217,218,219,224,225,228,230,236,240,242,245,246,249,252,255,256,258,259,262,265,266,268,270,271,272,275,276,278,279,280,283,289,291,293,294,296,299,300,301,302,303,304,305,],[17,17,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,70,17,73,17,17,90,92,97,-90,17,17,17,17,104,-1,-14,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,126,17,17,17,-103,-104,-89,-91,-92,-93,-94,-95,-96,-98,-100,-101,140,143,17,17,17,17,159,17,17,169,-88,-102,-97,17,159,177,183,-99,159,17,159,17,17,205,169,17,17,17,221,222,17,17,-17,159,-107,17,177,-122,-84,-126,17,159,-108,17,-128,159,159,17,17,17,159,17,-16,169,-106,159,-85,-116,17,17,17,17,-83,-127,17,17,17,17,17,17,17,17,17,17,-23,-34,17,-18,-129,-125,-84,17,-85,]),'NUMBER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,18,20,21,30,31,34,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,71,75,76,77,78,79,80,81,82,83,84,86,87,88,93,94,95,96,129,134,137,138,139,141,153,157,167,172,173,179,181,182,194,197,200,207,208,212,213,215,217,219,224,225,236,240,242,246,249,255,258,259,262,265,266,268,270,271,272,275,276,278,279,280,283,289,291,293,294,296,299,300,301,302,303,304,305,],[35,35,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,35,35,35,-90,35,35,35,35,-1,-14,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-103,-104,-89,-91,-92,-93,-94,-95,-96,-98,-100,-101,35,35,35,35,35,35,-88,-102,-97,35,-99,35,35,35,35,35,35,35,35,35,-17,-107,35,-122,-84,-126,35,-108,35,-128,35,35,35,35,-16,-106,-85,-116,35,35,35,35,-83,-127,35,35,35,35,35,35,35,35,35,35,-23,-34,35,-18,-129,-125,-84,35,-85,]),'FLOAT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,18,20,21,30,31,34,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,71,75,76,77,78,79,80,81,82,83,84,86,87,88,93,94,95,96,129,134,137,138,139,141,153,157,167,172,173,179,181,182,194,197,200,207,208,212,213,215,217,219,224,225,236,240,242,246,249,255,258,259,262,265,266,268,270,271,272,275,276,278,279,280,283,289,291,293,294,296,299,300,301,302,303,304,305,],[36,36,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,36,36,36,-90,36,36,36,36,-1,-14,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-103,-104,-89,-91,-92,-93,-94,-95,-96,-98,-100,-101,36,36,36,36,36,36,-88,-102,-97,36,-99,36,36,36,36,36,36,36,36,36,-17,-107,36,-122,-84,-126,36,-108,36,-128,36,36,36,36,-16,-106,-85,-116,36,36,36,36,-83,-127,36,36,36,36,36,36,36,36,36,36,-23,-34,36,-18,-129,-125,-84,36,-85,]),'STRING':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,18,20,21,30,31,34,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,71,75,76,77,78,79,80,81,82,83,84,86,87,88,93,94,95,96,99,129,134,137,138,139,141,153,157,167,172,173,179,181,182,194,197,200,207,208,212,213,215,217,219,224,225,236,240,242,246,249,255,258,259,262,265,266,268,270,271,272,275,276,278,279,280,283,289,291,293,294,296,299,300,301,302,303,304,305,],[33,33,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,33,33,33,-90,33,33,33,33,-1,-14,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-103,-104,-89,-91,-92,-93,-94,-95,-96,-98,-100,-101,33,33,33,33,154,33,33,-88,-102,-97,33,-99,33,33,33,33,33,33,33,33,33,-17,-107,33,-122,-84,-126,33,-108,33,-128,33,33,33,33,-16,-106,-85,-116,33,33,33,33,-83,-127,33,33,33,33,33,33,33,33,33,33,-23,-34,33,-18,-129,-125,-84,33,-85,]),'TRUE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,18,20,21,30,31,34,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,71,75,76,77,78,79,80,81,82,83,84,86,87,88,93,94,95,96,129,134,137,138,139,141,153,157,167,172,173,179,181,182,194,197,200,207,208,212,213,215,217,219,224,225,236,240,242,246,249,255,258,259,262,265,266,268,270,271,272,275,276,278,279,280,283,289,291,293,294,296,299,300,301,302,303,304,305,],[37,37,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,37,37,37,-90,37,37,37,37,-1,-14,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-103,-104,-89,-91,-92,-93,-94,-95,-96,-98,-100,-101,37,37,37,37,37,37,-88,-102,-97,37,-99,37,37,37,37,37,37,37,37,37,-17,-107,37,-122,-84,-126,37,-108,37,-128,37,37,37,37,-16,-106,-85,-116,37,37,37,37,-83,-127,37,37,37,37,37,37,37,37,37,37,-23,-34,37,-18,-129,-125,-84,37,-85,]),'FALSE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,18,20,21,30,31,34,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,71,75,76,77,78,79,80,81,82,83,84,86,87,88,93,94,95,96,129,134,137,138,139,141,153,157,167,172,173,179,181,182,194,197,200,207,208,212,213,215,217,219,224,225,236,240,242,246,249,255,258,259,262,265,266,268,270,271,272,275,276,278,279,280,283,289,291,293,294,296,299,300,301,302,303,304,305,],[38,38,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,38,38,38,-90,38,38,38,38,-1,-14,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-103,-104,-89,-91,-92,-93,-94,-95,-96,-98,-100,-101,38,38,38,38,38,38,-88,-102,-97,38,-99,38,38,38,38,38,38,38,38,38,-17,-107,38,-122,-84,-126,38,-108,38,-128,38,38,38,38,-16,-106,-85,-116,38,38,38,38,-83,-127,38,38,38,38,38,38,38,38,38,38,-23,-34,38,-18,-129,-125,-84,38,-85,]),'PLUSPLUS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,20,21,30,31,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,94,95,96,98,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,133,134,136,137,138,139,141,145,146,147,149,153,157,158,165,166,167,168,172,173,174,179,181,182,193,194,196,197,200,202,205,207,208,212,213,215,216,217,219,224,225,226,232,236,240,242,243,246,248,249,255,258,259,261,262,263,265,266,268,270,271,272,275,276,278,279,280,281,282,283,284,285,286,289,291,292,293,294,296,299,300,301,302,303,304,305,],[39,39,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,68,-15,-76,39,39,39,-90,39,-75,39,-73,-74,-77,-78,39,39,-1,-14,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-79,-80,39,68,68,39,-103,-104,-89,-91,-92,-93,-94,-95,-96,68,-98,-100,-101,39,39,39,39,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-70,68,39,68,39,-69,-88,-102,-97,39,68,68,68,68,-99,39,-71,68,-72,39,68,39,39,68,39,39,39,-67,39,68,39,-17,-40,-76,-107,39,-122,-84,-126,68,39,-108,39,-128,68,68,39,39,265,68,39,68,-16,-106,-85,-116,68,39,281,39,39,39,-83,-127,39,39,39,39,39,39,-79,-80,39,68,68,68,39,39,68,39,-23,-34,39,-18,-129,-125,-84,39,-85,]),'MINUSMINUS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,20,21,30,31,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,94,95,96,98,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,133,134,136,137,138,139,141,145,146,147,149,153,157,158,165,166,167,168,172,173,174,179,181,182,193,194,196,197,200,202,205,207,208,212,213,215,216,217,219,224,225,226,232,236,240,242,243,246,248,249,255,258,259,261,262,263,265,266,268,270,271,272,275,276,278,279,280,281,282,283,284,285,286,289,291,292,293,294,296,299,300,301,302,303,304,305,],[40,40,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,69,-15,-76,40,40,40,-90,40,-75,40,-73,-74,-77,-78,40,40,-1,-14,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-79,-80,40,69,69,40,-103,-104,-89,-91,-92,-93,-94,-95,-96,69,-98,-100,-101,40,40,40,40,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-70,69,40,69,40,-69,-88,-102,-97,40,69,69,69,69,-99,40,-71,69,-72,40,69,40,40,69,40,40,40,-67,40,69,40,-17,-40,-76,-107,40,-122,-84,-126,69,40,-108,40,-128,69,69,40,40,266,69,40,69,-16,-106,-85,-116,69,40,282,40,40,40,-83,-127,40,40,40,40,40,40,-79,-80,40,69,69,69,40,40,69,40,-23,-34,40,-18,-129,-125,-84,40,-85,]),'CONSOLE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,21,30,43,44,75,76,77,78,79,80,81,82,83,84,86,87,88,137,138,139,153,179,181,200,207,212,213,215,219,225,236,249,255,258,259,262,270,271,275,276,279,280,283,289,291,293,294,296,299,300,301,302,303,304,305,],[41,41,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,41,-90,-1,-14,41,-103,-104,-89,-91,-92,-93,-94,-95,-96,-98,-100,-101,-88,-102,-97,-99,41,41,-17,-107,-122,-84,-126,-108,-128,41,-16,-106,-85,-116,41,-83,-127,41,41,41,41,41,41,41,41,-23,-34,41,-18,-129,-125,-84,41,-85,]),'VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,21,30,43,44,75,76,77,78,79,80,81,82,83,84,86,87,88,137,138,139,152,153,179,181,184,185,186,187,188,189,190,200,207,212,213,215,219,220,225,236,249,255,258,259,262,270,271,275,276,279,280,283,289,291,293,294,296,299,300,301,302,303,304,305,],[42,42,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,42,-90,-1,-14,42,-103,-104,-89,-91,-92,-93,-94,-95,-96,-98,-100,-101,-88,-102,-97,42,-99,42,42,42,-110,-111,-112,-113,-114,-115,-17,-107,-122,-84,-126,-108,-109,-128,42,-16,-106,-85,-116,42,-83,-127,42,42,42,42,42,42,42,42,-23,-34,42,-18,-129,-125,-84,42,-85,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,15,30,43,44,78,79,80,81,82,83,84,86,87,88,137,139,153,200,207,212,213,215,219,225,249,255,258,259,270,271,294,296,300,301,302,303,305,],[0,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,-90,-1,-14,-89,-91,-92,-93,-94,-95,-96,-98,-100,-101,-88,-97,-99,-17,-107,-122,-84,-126,-108,-128,-16,-106,-85,-116,-83,-127,-23,-34,-18,-129,-125,-84,-85,]),'SEMICOLON':([14,17,33,35,36,37,38,68,69,85,96,98,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,136,148,149,151,158,165,166,174,193,196,202,216,226,232,243,247,248,286,295,297,],[44,-76,-75,-73,-74,-77,-78,-79,-80,139,-105,153,-68,-81,-82,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-70,-69,182,-26,-27,-71,200,-72,207,-67,225,-40,242,249,255,-24,270,271,-25,300,301,]),'PLUS':([14,17,33,35,36,37,38,68,69,72,74,85,98,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,133,136,145,146,147,149,158,165,166,168,174,193,196,202,205,216,226,232,243,248,261,263,281,282,284,285,286,292,],[45,-76,-75,-73,-74,-77,-78,-79,-80,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-70,45,45,-69,45,45,45,45,-71,45,-72,45,45,-67,45,-40,-76,45,45,45,45,45,45,45,-79,-80,45,45,45,45,]),'MINUS':([14,17,33,35,36,37,38,68,69,72,74,85,98,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,133,136,145,146,147,149,158,165,166,168,174,193,196,202,205,216,226,232,243,248,261,263,281,282,284,285,286,292,],[46,-76,-75,-73,-74,-77,-78,-79,-80,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-70,46,46,-69,46,46,46,46,-71,46,-72,46,46,-67,46,-40,-76,46,46,46,46,46,46,46,-79,-80,46,46,46,46,]),'TIMES':([14,17,33,35,36,37,38,68,69,72,74,85,98,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,133,136,145,146,147,149,158,165,166,168,174,193,196,202,205,216,226,232,243,248,261,263,281,282,284,285,286,292,],[47,-76,-75,-73,-74,-77,-78,-79,-80,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-70,47,47,-69,47,47,47,47,-71,47,-72,47,47,-67,47,-40,-76,47,47,47,47,47,47,47,-79,-80,47,47,47,47,]),'DIV':([14,17,33,35,36,37,38,68,69,72,74,85,98,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,133,136,145,146,147,149,158,165,166,168,174,193,196,202,205,216,226,232,243,248,261,263,281,282,284,285,286,292,],[48,-76,-75,-73,-74,-77,-78,-79,-80,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-70,48,48,-69,48,48,48,48,-71,48,-72,48,48,-67,48,-40,-76,48,48,48,48,48,48,48,-79,-80,48,48,48,48,]),'MOD':([14,17,33,35,36,37,38,68,69,72,74,85,98,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,133,136,145,146,147,149,158,165,166,168,174,193,196,202,205,216,226,232,243,248,261,263,281,282,284,285,286,292,],[49,-76,-75,-73,-74,-77,-78,-79,-80,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-70,49,49,-69,49,49,49,49,-71,49,-72,49,49,-67,49,-40,-76,49,49,49,49,49,49,49,-79,-80,49,49,49,49,]),'PLUS_ASSIGN':([14,17,33,35,36,37,38,68,69,72,74,85,98,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,133,136,145,146,147,149,158,165,166,168,174,193,196,202,205,216,226,232,243,248,261,263,281,282,284,285,286,292,],[50,-76,-75,-73,-74,-77,-78,-79,-80,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-70,50,50,-69,50,50,50,50,-71,50,-72,50,50,-67,50,-40,-76,50,50,50,50,50,50,50,-79,-80,50,50,50,50,]),'MINUS_ASSIGN':([14,17,33,35,36,37,38,68,69,72,74,85,98,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,133,136,145,146,147,149,158,165,166,168,174,193,196,202,205,216,226,232,243,248,261,263,281,282,284,285,286,292,],[51,-76,-75,-73,-74,-77,-78,-79,-80,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-70,51,51,-69,51,51,51,51,-71,51,-72,51,51,-67,51,-40,-76,51,51,51,51,51,51,51,-79,-80,51,51,51,51,]),'MULT_ASSIGN':([14,17,33,35,36,37,38,68,69,72,74,85,98,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,133,136,145,146,147,149,158,165,166,168,174,193,196,202,205,216,226,232,243,248,261,263,281,282,284,285,286,292,],[52,-76,-75,-73,-74,-77,-78,-79,-80,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-70,52,52,-69,52,52,52,52,-71,52,-72,52,52,-67,52,-40,-76,52,52,52,52,52,52,52,-79,-80,52,52,52,52,]),'DIV_ASSIGN':([14,17,33,35,36,37,38,68,69,72,74,85,98,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,133,136,145,146,147,149,158,165,166,168,174,193,196,202,205,216,226,232,243,248,261,263,281,282,284,285,286,292,],[53,-76,-75,-73,-74,-77,-78,-79,-80,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-70,53,53,-69,53,53,53,53,-71,53,-72,53,53,-67,53,-40,-76,53,53,53,53,53,53,53,-79,-80,53,53,53,53,]),'MOD_ASSIGN':([14,17,33,35,36,37,38,68,69,72,74,85,98,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,133,136,145,146,147,149,158,165,166,168,174,193,196,202,205,216,226,232,243,248,261,263,281,282,284,285,286,292,],[54,-76,-75,-73,-74,-77,-78,-79,-80,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-70,54,54,-69,54,54,54,54,-71,54,-72,54,54,-67,54,-40,-76,54,54,54,54,54,54,54,-79,-80,54,54,54,54,]),'POT':([14,17,33,35,36,37,38,68,69,72,74,85,98,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,133,136,145,146,147,149,158,165,166,168,174,193,196,202,205,216,226,232,243,248,261,263,281,282,284,285,286,292,],[55,-76,-75,-73,-74,-77,-78,-79,-80,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-70,55,55,-69,55,55,55,55,-71,55,-72,55,55,-67,55,-40,-76,55,55,55,55,55,55,55,-79,-80,55,55,55,55,]),'AND':([14,17,33,35,36,37,38,68,69,72,74,85,98,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,133,136,145,146,147,149,158,165,166,168,174,193,196,202,205,216,226,232,243,248,261,263,281,282,284,285,286,292,],[56,-76,-75,-73,-74,-77,-78,-79,-80,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-70,56,56,-69,56,56,56,56,-71,56,-72,56,56,-67,56,-40,-76,56,56,56,56,56,56,56,-79,-80,56,56,56,56,]),'OR':([14,17,33,35,36,37,38,68,69,72,74,85,98,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,133,136,145,146,147,149,158,165,166,168,174,193,196,202,205,216,226,232,243,248,261,263,281,282,284,285,286,292,],[57,-76,-75,-73,-74,-77,-78,-79,-80,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-70,57,57,-69,57,57,57,57,-71,57,-72,57,57,-67,57,-40,-76,57,57,57,57,57,57,57,-79,-80,57,57,57,57,]),'EQ':([14,17,33,35,36,37,38,68,69,72,74,85,98,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,133,136,145,146,147,149,158,165,166,168,174,193,196,202,205,216,226,232,243,248,261,263,281,282,284,285,286,292,],[58,-76,-75,-73,-74,-77,-78,-79,-80,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-70,58,58,-69,58,58,58,58,-71,58,-72,58,58,-67,58,-40,-76,58,58,58,58,58,58,58,-79,-80,58,58,58,58,]),'NEQ':([14,17,33,35,36,37,38,68,69,72,74,85,98,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,133,136,145,146,147,149,158,165,166,168,174,193,196,202,205,216,226,232,243,248,261,263,281,282,284,285,286,292,],[59,-76,-75,-73,-74,-77,-78,-79,-80,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-70,59,59,-69,59,59,59,59,-71,59,-72,59,59,-67,59,-40,-76,59,59,59,59,59,59,59,-79,-80,59,59,59,59,]),'STRICT_EQ':([14,17,33,35,36,37,38,68,69,72,74,85,98,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,133,136,145,146,147,149,158,165,166,168,174,193,196,202,205,216,226,232,243,248,261,263,281,282,284,285,286,292,],[60,-76,-75,-73,-74,-77,-78,-79,-80,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-70,60,60,-69,60,60,60,60,-71,60,-72,60,60,-67,60,-40,-76,60,60,60,60,60,60,60,-79,-80,60,60,60,60,]),'STRICT_NEQ':([14,17,33,35,36,37,38,68,69,72,74,85,98,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,133,136,145,146,147,149,158,165,166,168,174,193,196,202,205,216,226,232,243,248,261,263,281,282,284,285,286,292,],[61,-76,-75,-73,-74,-77,-78,-79,-80,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-70,61,61,-69,61,61,61,61,-71,61,-72,61,61,-67,61,-40,-76,61,61,61,61,61,61,61,-79,-80,61,61,61,61,]),'LT':([14,17,33,35,36,37,38,68,69,72,74,85,98,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,133,136,145,146,147,149,158,165,166,168,174,193,196,202,205,216,226,232,243,248,261,263,281,282,284,285,286,292,],[62,-76,-75,-73,-74,-77,-78,-79,-80,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-70,62,62,-69,62,62,62,62,-71,62,-72,62,62,-67,62,-40,-76,62,62,62,62,62,62,62,-79,-80,62,62,62,62,]),'GT':([14,17,33,35,36,37,38,68,69,72,74,85,98,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,133,136,145,146,147,149,158,165,166,168,174,193,196,202,205,216,226,232,243,248,261,263,281,282,284,285,286,292,],[63,-76,-75,-73,-74,-77,-78,-79,-80,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-70,63,63,-69,63,63,63,63,-71,63,-72,63,63,-67,63,-40,-76,63,63,63,63,63,63,63,-79,-80,63,63,63,63,]),'LE':([14,17,33,35,36,37,38,68,69,72,74,85,98,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,133,136,145,146,147,149,158,165,166,168,174,193,196,202,205,216,226,232,243,248,261,263,281,282,284,285,286,292,],[64,-76,-75,-73,-74,-77,-78,-79,-80,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-70,64,64,-69,64,64,64,64,-71,64,-72,64,64,-67,64,-40,-76,64,64,64,64,64,64,64,-79,-80,64,64,64,64,]),'GE':([14,17,33,35,36,37,38,68,69,72,74,85,98,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,133,136,145,146,147,149,158,165,166,168,174,193,196,202,205,216,226,232,243,248,261,263,281,282,284,285,286,292,],[65,-76,-75,-73,-74,-77,-78,-79,-80,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-70,65,65,-69,65,65,65,65,-71,65,-72,65,65,-67,65,-40,-76,65,65,65,65,65,65,65,-79,-80,65,65,65,65,]),'DOT':([14,17,33,35,36,37,38,41,68,69,72,74,85,98,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,133,136,145,146,147,149,158,165,166,168,174,193,196,202,205,216,226,232,243,248,261,263,281,282,284,285,286,292,],[66,-76,-75,-73,-74,-77,-78,103,-79,-80,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-70,66,66,-69,66,66,66,66,-71,66,-72,66,66,-67,66,-40,-76,66,66,66,66,66,66,66,-79,-80,66,66,66,66,]),'COMMA':([17,33,35,36,37,38,68,69,72,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,133,136,158,159,162,163,164,166,177,193,199,202,229,233,273,],[-76,-75,-73,-74,-77,-78,-79,-80,134,-68,-81,-82,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-70,167,-69,-71,-44,-41,-42,-43,-72,211,-67,228,-40,252,-45,-39,]),'RPAREN':([17,33,35,36,37,38,68,69,71,74,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,130,131,132,133,135,136,145,146,147,154,158,159,162,163,164,166,170,171,173,176,193,194,201,202,205,206,210,223,229,233,242,252,263,264,267,273,274,281,282,284,285,292,],[-76,-75,-73,-74,-77,-78,-79,-80,-105,136,-68,-81,-82,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-70,166,-19,-20,-21,-105,-69,179,180,181,193,-71,-44,-41,-42,-43,-72,204,-37,-105,-105,-67,-105,-22,-40,-76,231,234,247,-35,-45,-105,-105,-28,283,-33,-39,-36,-29,-30,-31,-32,299,]),'RBRACKET':([17,33,35,36,37,38,68,69,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,131,132,133,136,158,159,162,163,164,166,168,193,198,201,202,209,233,251,272,273,287,],[-76,-75,-73,-74,-77,-78,-79,-80,-68,-81,-82,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-70,158,-19,-20,-21,-69,-71,-44,-41,-42,-43,-72,202,-67,227,-22,-40,233,-45,273,-105,-39,295,]),'COLON':([17,33,35,36,37,38,68,69,70,90,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,136,140,158,166,169,183,193,202,204,205,221,222,234,241,261,],[-76,-75,-73,-74,-77,-78,-79,-80,128,142,-68,-81,-82,156,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-70,-69,142,-71,-72,203,218,-67,-40,230,203,245,142,256,262,279,]),'RBRACE':([21,30,75,76,77,78,79,80,81,82,83,84,86,87,88,137,138,139,152,153,177,178,184,185,186,187,188,189,190,200,207,213,214,215,219,220,225,235,237,238,239,249,255,258,259,260,262,270,271,275,276,279,280,288,289,290,291,293,294,296,298,300,301,302,303,305,],[-105,-90,137,-103,-104,-89,-91,-92,-93,-94,-95,-96,-98,-100,-101,-88,-102,-97,-105,-99,-123,212,219,-110,-111,-112,-113,-114,-115,-17,-107,-84,-105,-126,-108,-109,-128,-124,259,-118,-119,-16,-106,-85,-116,-117,-105,-83,-127,-105,-105,-105,-121,296,-38,297,-105,-120,-23,-34,302,-18,-129,-125,-84,-85,]),'ELSE':([30,78,79,80,81,82,83,84,86,87,88,137,139,153,200,207,213,215,219,225,249,255,258,259,270,271,294,296,300,301,302,303,305,],[-90,-89,-91,-92,-93,-94,-95,-96,-98,-100,-101,-88,-97,-99,-17,-107,236,-126,-108,-128,-16,-106,-85,-116,-83,-127,-23,-34,-18,-129,-125,304,-85,]),'CASE':([30,76,77,78,79,80,81,82,83,84,86,87,88,137,138,139,153,200,207,213,214,215,219,225,237,238,239,249,255,258,259,260,262,270,271,279,280,293,294,296,300,301,302,303,305,],[-90,-103,-104,-89,-91,-92,-93,-94,-95,-96,-98,-100,-101,-88,-102,-97,-99,-17,-107,-84,240,-126,-108,-128,240,-118,-119,-16,-106,-85,-116,-117,-105,-83,-127,-105,-121,-120,-23,-34,-18,-129,-125,-84,-85,]),'DEFAULT':([30,76,77,78,79,80,81,82,83,84,86,87,88,137,138,139,153,200,207,213,214,215,219,225,237,238,239,249,255,258,259,260,262,270,271,279,280,293,294,296,300,301,302,303,305,],[-90,-103,-104,-89,-91,-92,-93,-94,-95,-96,-98,-100,-101,-88,-102,-97,-99,-17,-107,-84,241,-126,-108,-128,241,-118,-119,-16,-106,-85,-116,-117,-105,-83,-127,-105,-121,-120,-23,-34,-18,-129,-125,-84,-85,]),'EQUAL':([70,90,104,140,159,160,162,163,164,175,183,195,221,222,227,233,244,269,273,],[129,141,157,172,-44,197,-41,-42,-43,208,217,224,129,246,250,-45,268,197,-39,]),'LOG':([103,],[155,]),'NUMBER_TYPE':([128,142,156,161,203,218,228,230,245,256,],[162,162,162,162,162,162,162,162,162,162,]),'STRING_TYPE':([128,142,156,161,203,218,228,230,245,256,],[163,163,163,163,163,163,163,163,163,163,]),'BOOLEAN_TYPE':([128,142,156,161,203,218,228,230,245,256,],[164,164,164,164,164,164,164,164,164,164,]),'ARROW':([231,],[254,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'element':([0,1,],[2,43,]),'letAssignment':([0,1,21,75,152,179,181,184,236,262,275,276,279,280,283,289,291,293,299,304,],[3,3,78,78,188,78,78,188,78,78,78,78,78,78,78,78,78,78,78,78,]),'declaracion':([0,1,21,75,179,181,236,262,275,276,279,280,283,289,291,293,299,304,],[4,4,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'function':([0,1,21,75,152,179,181,184,236,262,275,276,279,280,283,289,291,293,299,304,],[5,5,81,81,187,81,81,187,81,81,81,81,81,81,81,81,81,81,81,81,]),'arrow_function':([0,1,21,75,179,181,236,262,275,276,279,280,283,289,291,293,299,304,],[6,6,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'async_function':([0,1,21,75,179,181,236,262,275,276,279,280,283,289,291,293,299,304,],[7,7,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'constAssignment':([0,1,21,75,152,179,181,184,236,262,275,276,279,280,283,289,291,293,299,304,],[8,8,79,79,190,79,79,190,79,79,79,79,79,79,79,79,79,79,79,79,]),'enum_definition':([0,1,],[9,9,]),'controlEstructure':([0,1,21,75,179,181,236,262,275,276,279,280,283,289,291,293,299,304,],[10,10,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'forEstructure':([0,1,21,75,179,181,236,262,275,276,279,280,283,289,291,293,299,304,],[11,11,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'class_definition':([0,1,21,75,179,181,236,262,275,276,279,280,283,289,291,293,299,304,],[12,12,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'statement':([0,1,21,75,179,181,236,262,275,276,279,280,283,289,291,293,299,304,],[13,13,76,138,213,215,258,76,76,76,76,138,294,138,76,138,303,305,]),'expression':([0,1,18,20,21,31,34,39,40,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,71,75,93,94,95,96,129,134,141,157,167,172,173,179,181,182,194,197,208,217,224,236,240,242,246,262,265,266,268,272,275,276,278,279,280,283,289,291,293,299,304,],[14,14,72,74,85,98,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,133,85,145,146,147,149,165,168,174,196,133,174,74,85,85,216,133,226,232,243,248,85,261,263,174,85,284,285,286,133,85,85,292,85,85,85,85,85,85,85,85,]),'consolelog':([0,1,21,75,179,181,236,262,275,276,279,280,283,289,291,293,299,304,],[15,15,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'varAssignment':([0,1,21,75,152,179,181,184,236,262,275,276,279,280,283,289,291,293,299,304,],[30,30,30,30,189,30,30,189,30,30,30,30,30,30,30,30,30,30,30,30,]),'instruction_list':([21,262,275,276,279,291,],[75,280,289,289,293,289,]),'empty':([21,71,96,135,152,173,176,194,214,242,252,262,272,275,276,279,291,],[77,132,151,171,186,171,171,132,239,267,171,77,132,77,77,77,77,]),'lista_expresiones_opt':([71,194,272,],[130,223,287,]),'lista_expresiones':([71,167,194,272,],[131,201,131,131,]),'for_init':([96,],[148,]),'type':([128,142,156,161,203,218,228,230,245,256,],[160,175,195,199,229,244,251,253,269,277,]),'parameters':([135,173,176,252,],[170,206,210,274,]),'enum_members':([144,211,],[178,235,]),'class_body':([152,],[184,]),'class_element':([152,184,],[185,220,]),'case_block':([214,],[237,]),'case':([214,237,],[238,260,]),'for_update':([242,],[264,]),'body_function':([275,276,291,],[288,290,298,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program element','program',2,'p_program','parser.py',15),
  ('program -> element','program',1,'p_program','parser.py',16),
  ('element -> letAssignment','element',1,'p_element','parser.py',20),
  ('element -> declaracion','element',1,'p_element','parser.py',21),
  ('element -> function','element',1,'p_element','parser.py',22),
  ('element -> arrow_function','element',1,'p_element','parser.py',23),
  ('element -> async_function','element',1,'p_element','parser.py',24),
  ('element -> constAssignment','element',1,'p_element','parser.py',25),
  ('element -> enum_definition','element',1,'p_element','parser.py',26),
  ('element -> controlEstructure','element',1,'p_element','parser.py',27),
  ('element -> forEstructure','element',1,'p_element','parser.py',28),
  ('element -> class_definition','element',1,'p_element','parser.py',29),
  ('element -> statement','element',1,'p_element','parser.py',30),
  ('element -> expression SEMICOLON','element',2,'p_element','parser.py',31),
  ('element -> consolelog','element',1,'p_element','parser.py',32),
  ('letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON','letAssignment',7,'p_letAssignment','parser.py',38),
  ('letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON','letAssignment',5,'p_letAssignment_no_type','parser.py',42),
  ('declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON','declaracion',11,'p_declaracion','parser.py',47),
  ('lista_expresiones_opt -> lista_expresiones','lista_expresiones_opt',1,'p_lista_expresiones_opt','parser.py',51),
  ('lista_expresiones_opt -> empty','lista_expresiones_opt',1,'p_lista_expresiones_opt','parser.py',52),
  ('lista_expresiones -> expression','lista_expresiones',1,'p_lista_expresiones','parser.py',56),
  ('lista_expresiones -> expression COMMA lista_expresiones','lista_expresiones',3,'p_lista_expresiones','parser.py',57),
  ('forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement','forEstructure',9,'p_forEstructure','parser.py',62),
  ('for_init -> LET IDENTIFIER EQUAL expression','for_init',4,'p_for_init','parser.py',66),
  ('for_init -> LET IDENTIFIER COLON type EQUAL expression','for_init',6,'p_for_init','parser.py',67),
  ('for_init -> expression','for_init',1,'p_for_init','parser.py',68),
  ('for_init -> empty','for_init',1,'p_for_init','parser.py',69),
  ('for_update -> expression','for_update',1,'p_for_update','parser.py',74),
  ('for_update -> expression PLUSPLUS','for_update',2,'p_for_update','parser.py',75),
  ('for_update -> expression MINUSMINUS','for_update',2,'p_for_update','parser.py',76),
  ('for_update -> PLUSPLUS expression','for_update',2,'p_for_update','parser.py',77),
  ('for_update -> MINUSMINUS expression','for_update',2,'p_for_update','parser.py',78),
  ('for_update -> empty','for_update',1,'p_for_update','parser.py',79),
  ('function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE','function',10,'p_function','parser.py',84),
  ('parameters -> IDENTIFIER COLON type','parameters',3,'p_parameters','parser.py',88),
  ('parameters -> IDENTIFIER COLON type COMMA parameters','parameters',5,'p_parameters','parser.py',89),
  ('parameters -> empty','parameters',1,'p_parameters','parser.py',90),
  ('body_function -> instruction_list','body_function',1,'p_body_function','parser.py',94),
  ('type -> LBRACKET type COMMA type RBRACKET','type',5,'p_type_tuple','parser.py',99),
  ('expression -> LBRACKET expression COMMA expression RBRACKET','expression',5,'p_expression_tuple','parser.py',103),
  ('type -> NUMBER_TYPE','type',1,'p_type','parser.py',108),
  ('type -> STRING_TYPE','type',1,'p_type','parser.py',109),
  ('type -> BOOLEAN_TYPE','type',1,'p_type','parser.py',110),
  ('type -> IDENTIFIER','type',1,'p_type','parser.py',111),
  ('type -> type LBRACKET RBRACKET','type',3,'p_type','parser.py',112),
  ('expression -> expression PLUS expression','expression',3,'p_expression','parser.py',117),
  ('expression -> expression MINUS expression','expression',3,'p_expression','parser.py',118),
  ('expression -> expression TIMES expression','expression',3,'p_expression','parser.py',119),
  ('expression -> expression DIV expression','expression',3,'p_expression','parser.py',120),
  ('expression -> expression MOD expression','expression',3,'p_expression','parser.py',121),
  ('expression -> expression PLUS_ASSIGN expression','expression',3,'p_expression','parser.py',122),
  ('expression -> expression MINUS_ASSIGN expression','expression',3,'p_expression','parser.py',123),
  ('expression -> expression MULT_ASSIGN expression','expression',3,'p_expression','parser.py',124),
  ('expression -> expression DIV_ASSIGN expression','expression',3,'p_expression','parser.py',125),
  ('expression -> expression MOD_ASSIGN expression','expression',3,'p_expression','parser.py',126),
  ('expression -> expression POT expression','expression',3,'p_expression','parser.py',127),
  ('expression -> expression AND expression','expression',3,'p_expression','parser.py',128),
  ('expression -> expression OR expression','expression',3,'p_expression','parser.py',129),
  ('expression -> expression EQ expression','expression',3,'p_expression','parser.py',130),
  ('expression -> expression NEQ expression','expression',3,'p_expression','parser.py',131),
  ('expression -> expression STRICT_EQ expression','expression',3,'p_expression','parser.py',132),
  ('expression -> expression STRICT_NEQ expression','expression',3,'p_expression','parser.py',133),
  ('expression -> expression LT expression','expression',3,'p_expression','parser.py',134),
  ('expression -> expression GT expression','expression',3,'p_expression','parser.py',135),
  ('expression -> expression LE expression','expression',3,'p_expression','parser.py',136),
  ('expression -> expression GE expression','expression',3,'p_expression','parser.py',137),
  ('expression -> PROMPT LPAREN STRING RPAREN','expression',4,'p_expression','parser.py',138),
  ('expression -> NOT expression','expression',2,'p_expression','parser.py',139),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','parser.py',140),
  ('expression -> expression DOT IDENTIFIER','expression',3,'p_expression','parser.py',141),
  ('expression -> expression LBRACKET expression RBRACKET','expression',4,'p_expression','parser.py',142),
  ('expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN','expression',4,'p_expression','parser.py',143),
  ('expression -> NUMBER','expression',1,'p_expression','parser.py',144),
  ('expression -> FLOAT','expression',1,'p_expression','parser.py',145),
  ('expression -> STRING','expression',1,'p_expression','parser.py',146),
  ('expression -> IDENTIFIER','expression',1,'p_expression','parser.py',147),
  ('expression -> TRUE','expression',1,'p_expression','parser.py',148),
  ('expression -> FALSE','expression',1,'p_expression','parser.py',149),
  ('expression -> expression PLUSPLUS','expression',2,'p_expression_increment','parser.py',153),
  ('expression -> expression MINUSMINUS','expression',2,'p_expression_increment','parser.py',154),
  ('expression -> PLUSPLUS expression','expression',2,'p_expression_increment','parser.py',155),
  ('expression -> MINUSMINUS expression','expression',2,'p_expression_increment','parser.py',156),
  ('consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON','consolelog',7,'p_consolelog','parser.py',160),
  ('controlEstructure -> IF LPAREN expression RPAREN statement','controlEstructure',5,'p_controlEstructure','parser.py',165),
  ('controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement','controlEstructure',7,'p_controlEstructure','parser.py',166),
  ('controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement','controlEstructure',11,'p_controlEstructure','parser.py',167),
  ('controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement','controlEstructure',13,'p_controlEstructure','parser.py',168),
  ('statement -> LBRACE instruction_list RBRACE','statement',3,'p_statement','parser.py',173),
  ('statement -> letAssignment','statement',1,'p_statement','parser.py',174),
  ('statement -> varAssignment','statement',1,'p_statement','parser.py',175),
  ('statement -> constAssignment','statement',1,'p_statement','parser.py',176),
  ('statement -> declaracion','statement',1,'p_statement','parser.py',177),
  ('statement -> function','statement',1,'p_statement','parser.py',178),
  ('statement -> arrow_function','statement',1,'p_statement','parser.py',179),
  ('statement -> async_function','statement',1,'p_statement','parser.py',180),
  ('statement -> consolelog','statement',1,'p_statement','parser.py',181),
  ('statement -> expression SEMICOLON','statement',2,'p_statement','parser.py',182),
  ('statement -> controlEstructure','statement',1,'p_statement','parser.py',183),
  ('statement -> RETURN expression SEMICOLON','statement',3,'p_statement','parser.py',184),
  ('statement -> forEstructure','statement',1,'p_statement','parser.py',185),
  ('statement -> class_definition','statement',1,'p_statement','parser.py',186),
  ('instruction_list -> instruction_list statement','instruction_list',2,'p_instruction_list','parser.py',192),
  ('instruction_list -> statement','instruction_list',1,'p_instruction_list','parser.py',193),
  ('instruction_list -> empty','instruction_list',1,'p_instruction_list','parser.py',194),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',199),
  ('constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON','constAssignment',7,'p_constAssignment','parser.py',219),
  ('constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON','constAssignment',5,'p_constAssignment_no_type','parser.py',223),
  ('class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE','class_definition',5,'p_class_definition','parser.py',229),
  ('class_body -> class_body class_element','class_body',2,'p_class_body','parser.py',233),
  ('class_body -> class_element','class_body',1,'p_class_body','parser.py',234),
  ('class_body -> empty','class_body',1,'p_class_body','parser.py',235),
  ('class_element -> function','class_element',1,'p_class_element','parser.py',239),
  ('class_element -> letAssignment','class_element',1,'p_class_element','parser.py',240),
  ('class_element -> varAssignment','class_element',1,'p_class_element','parser.py',241),
  ('class_element -> constAssignment','class_element',1,'p_class_element','parser.py',242),
  ('controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE','controlEstructure',7,'p_controlEstructure_switch','parser.py',248),
  ('case_block -> case_block case','case_block',2,'p_case_block','parser.py',252),
  ('case_block -> case','case_block',1,'p_case_block','parser.py',253),
  ('case_block -> empty','case_block',1,'p_case_block','parser.py',254),
  ('case -> CASE expression COLON instruction_list','case',4,'p_case','parser.py',258),
  ('case -> DEFAULT COLON instruction_list','case',3,'p_case','parser.py',259),
  ('enum_definition -> ENUM IDENTIFIER LBRACE enum_members RBRACE','enum_definition',5,'p_enum_definition','parser.py',265),
  ('enum_members -> IDENTIFIER','enum_members',1,'p_enum_members','parser.py',269),
  ('enum_members -> IDENTIFIER COMMA enum_members','enum_members',3,'p_enum_members','parser.py',270),
  ('async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE','async_function',11,'p_async_function','parser.py',276),
  ('controlEstructure -> WHILE LPAREN expression RPAREN statement','controlEstructure',5,'p_controlEstructure_while','parser.py',289),
  ('varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON','varAssignment',7,'p_varAssignment','parser.py',296),
  ('varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON','varAssignment',5,'p_varAssignment_no_type','parser.py',300),
  ('arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON','arrow_function',11,'p_arrow_function','parser.py',305),
]
