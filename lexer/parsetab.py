
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAND ANY ARROW AS ASYNC AWAIT BIGINT_TYPE BOOLEAN_TYPE BREAK CASE CATCH CLASS COLON COMMA CONSOLE CONST CONTINUE DEFAULT DIV DIV_ASSIGN DOT ELSE ENUM EQ EQUAL EXPORT FALSE FINALLY FLOAT FOR FUNCTION GE GT IDENTIFIER IF IMPORT INTERFACE LBRACE LBRACKET LE LET LOG LPAREN LT MINUS MINUSMINUS MINUS_ASSIGN MOD MOD_ASSIGN MULT_ASSIGN NEQ NEW NOT NULL_TYPE NUMBER NUMBER_TYPE OF OR PLUS PLUSPLUS PLUS_ASSIGN POT PRIVATE PROMPT PROTECTED PUBLIC RBRACE RBRACKET RETURN RPAREN SEMICOLON STATIC STRICT_EQ STRICT_NEQ STRING STRING_TYPE SUPER SWITCH SYMBOL_TYPE THIS TIMES TRUE TRY TYPE UNDEFINED_TYPE VAR VOID WHILEprogram : program element\n               | elementelement : letAssignment\n               | declaracion\n               | function\n               | arrow_function\n               | async_function\n               | constAssignment\n               | enum_definition\n               | controlEstructure\n               | forEstructure\n               | class_definition\n               | statement\n               | expression SEMICOLON\n               | consolelogletAssignment : LET IDENTIFIER COLON type EQUAL expression SEMICOLONletAssignment : LET IDENTIFIER EQUAL expression SEMICOLONdeclaracion : LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLONlista_expresiones_opt : lista_expresiones\n                            | emptylista_expresiones : expression\n                        | expression COMMA lista_expresionesforEstructure : FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statementfor_init : LET IDENTIFIER EQUAL expression\n                | LET IDENTIFIER COLON type EQUAL expression\n                | expression\n                | emptyfor_update : expression\n                  | expression PLUSPLUS\n                  | expression MINUSMINUS\n                  | PLUSPLUS expression\n                  | MINUSMINUS expression\n                  | emptyfunction : FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACEparameters : IDENTIFIER COLON type\n                | IDENTIFIER COLON type COMMA parameters\n                | emptybody_function : instruction_listtype : LBRACKET type COMMA type RBRACKETexpression : LBRACKET expression COMMA expression RBRACKETtype : NUMBER_TYPE\n            | STRING_TYPE\n            | BOOLEAN_TYPE\n            | IDENTIFIER\n            | VOID\n            | type LBRACKET RBRACKETexpression : expression PLUS expression\n                | expression MINUS expression\n                | expression TIMES expression\n                | expression DIV expression\n                | expression MOD expression\n                | expression PLUS_ASSIGN expression\n                | expression MINUS_ASSIGN expression\n                | expression MULT_ASSIGN expression\n                | expression DIV_ASSIGN expression\n                | expression MOD_ASSIGN expression\n                | expression POT expression\n                | expression AND expression\n                | expression OR expression\n                | expression EQ expression\n                | expression NEQ expression\n                | expression STRICT_EQ expression\n                | expression STRICT_NEQ expression\n                | expression LT expression\n                | expression GT expression\n                | expression LE expression\n                | expression GE expression\n                | PROMPT LPAREN STRING RPAREN\n                | NOT expression\n                | LPAREN expression RPAREN\n                | expression DOT IDENTIFIER\n                | expression LBRACKET expression RBRACKET\n                | IDENTIFIER LPAREN lista_expresiones_opt RPAREN\n                | NUMBER\n                | FLOAT\n                | STRING\n                | IDENTIFIER\n                | TRUE\n                | FALSEexpression : expression PLUSPLUS\n                    | expression MINUSMINUS\n                    | PLUSPLUS expression\n                    | MINUSMINUS expressionconsolelog : CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLONcontrolEstructure : IF LPAREN expression RPAREN statement \n                        | IF LPAREN expression RPAREN statement ELSE statement \n                        | IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement \n                        | IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statementstatement : LBRACE instruction_list RBRACE\n                 | letAssignment\n                 | varAssignment\n                 | constAssignment\n                 | declaracion\n                 | function\n                 | arrow_function\n                 | async_function\n                 | consolelog\n                 | expression SEMICOLON\n                 | controlEstructure\n                 | RETURN expression SEMICOLON\n                 | forEstructure\n                 | RETURN SEMICOLON\n                 | class_definitioninstruction_list : instruction_list statement\n                        | statement\n                        | emptyempty :constAssignment : CONST IDENTIFIER COLON type EQUAL expression SEMICOLONconstAssignment : CONST IDENTIFIER EQUAL expression SEMICOLONclass_definition : CLASS IDENTIFIER LBRACE class_body RBRACEclass_body : class_body class_element\n                  | class_element\n                  | emptyclass_element : function\n                     | letAssignment\n                     | varAssignment\n                     | constAssignmentcontrolEstructure : SWITCH LPAREN expression RPAREN LBRACE case_block RBRACEcase_block : case_block case\n                  | case\n                  | emptycase : CASE expression COLON instruction_list\n            | DEFAULT COLON instruction_listenum_definition : ENUM IDENTIFIER LBRACE enum_members RBRACEenum_members : IDENTIFIER\n                    | IDENTIFIER COMMA enum_membersasync_function : ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACEcontrolEstructure : WHILE LPAREN expression RPAREN statementvarAssignment : VAR IDENTIFIER COLON type EQUAL expression SEMICOLONvarAssignment : VAR IDENTIFIER EQUAL expression SEMICOLONarrow_function : CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON'
    
_lr_action_items = {'LET':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,21,30,43,44,75,76,77,78,79,80,81,82,83,84,86,87,88,96,99,138,139,140,153,154,181,183,186,187,188,189,190,191,192,202,209,214,215,217,221,222,227,238,251,257,260,261,264,272,273,277,278,281,282,285,291,293,295,296,298,301,302,303,304,305,306,307,],[16,16,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,16,-91,-1,-14,16,-105,-106,-90,-92,-93,-94,-95,-96,-97,-99,-101,-103,151,-102,-89,-104,-98,193,-100,16,16,193,-112,-113,-114,-115,-116,-117,-17,-109,-124,-85,-128,-110,-111,-130,16,-16,-108,-86,-118,16,-84,-129,16,16,16,16,16,16,16,16,-23,-34,16,-18,-131,-127,-85,16,-86,]),'FUNCTION':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,21,23,30,43,44,75,76,77,78,79,80,81,82,83,84,86,87,88,99,138,139,140,153,154,181,183,186,187,188,189,190,191,192,202,209,214,215,217,221,222,227,238,251,257,260,261,264,272,273,277,278,281,282,285,291,293,295,296,298,301,302,303,304,305,306,307,],[19,19,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,19,91,-91,-1,-14,19,-105,-106,-90,-92,-93,-94,-95,-96,-97,-99,-101,-103,-102,-89,-104,-98,19,-100,19,19,19,-112,-113,-114,-115,-116,-117,-17,-109,-124,-85,-128,-110,-111,-130,19,-16,-108,-86,-118,19,-84,-129,19,19,19,19,19,19,19,19,-23,-34,19,-18,-131,-127,-85,19,-86,]),'CONST':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,21,30,43,44,75,76,77,78,79,80,81,82,83,84,86,87,88,99,138,139,140,153,154,181,183,186,187,188,189,190,191,192,202,209,214,215,217,221,222,227,238,251,257,260,261,264,272,273,277,278,281,282,285,291,293,295,296,298,301,302,303,304,305,306,307,],[22,22,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,89,-91,-1,-14,89,-105,-106,-90,-92,-93,-94,-95,-96,-97,-99,-101,-103,-102,-89,-104,-98,194,-100,89,89,194,-112,-113,-114,-115,-116,-117,-17,-109,-124,-85,-128,-110,-111,-130,89,-16,-108,-86,-118,89,-84,-129,89,89,89,89,89,89,89,89,-23,-34,89,-18,-131,-127,-85,89,-86,]),'ASYNC':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,21,30,43,44,75,76,77,78,79,80,81,82,83,84,86,87,88,99,138,139,140,154,181,183,202,209,214,215,217,221,227,238,251,257,260,261,264,272,273,277,278,281,282,285,291,293,295,296,298,301,302,303,304,305,306,307,],[23,23,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,23,-91,-1,-14,23,-105,-106,-90,-92,-93,-94,-95,-96,-97,-99,-101,-103,-102,-89,-104,-98,-100,23,23,-17,-109,-124,-85,-128,-110,-130,23,-16,-108,-86,-118,23,-84,-129,23,23,23,23,23,23,23,23,-23,-34,23,-18,-131,-127,-85,23,-86,]),'ENUM':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,30,43,44,78,79,80,81,82,83,84,86,87,88,99,138,140,154,202,209,214,215,217,221,227,251,257,260,261,272,273,296,298,302,303,304,305,307,],[24,24,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,-91,-1,-14,-90,-92,-93,-94,-95,-96,-97,-99,-101,-103,-102,-89,-98,-100,-17,-109,-124,-85,-128,-110,-130,-16,-108,-86,-118,-84,-129,-23,-34,-18,-131,-127,-85,-86,]),'IF':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,21,30,43,44,75,76,77,78,79,80,81,82,83,84,86,87,88,99,138,139,140,154,181,183,202,209,214,215,217,221,227,238,251,257,260,261,264,272,273,277,278,281,282,285,291,293,295,296,298,301,302,303,304,305,306,307,],[25,25,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,25,-91,-1,-14,25,-105,-106,-90,-92,-93,-94,-95,-96,-97,-99,-101,-103,-102,-89,-104,-98,-100,25,25,-17,-109,-124,-85,-128,-110,-130,259,-16,-108,-86,-118,25,-84,-129,25,25,25,25,25,25,25,25,-23,-34,25,-18,-131,-127,-85,259,-86,]),'SWITCH':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,21,30,43,44,75,76,77,78,79,80,81,82,83,84,86,87,88,99,138,139,140,154,181,183,202,209,214,215,217,221,227,238,251,257,260,261,264,272,273,277,278,281,282,285,291,293,295,296,298,301,302,303,304,305,306,307,],[26,26,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,26,-91,-1,-14,26,-105,-106,-90,-92,-93,-94,-95,-96,-97,-99,-101,-103,-102,-89,-104,-98,-100,26,26,-17,-109,-124,-85,-128,-110,-130,26,-16,-108,-86,-118,26,-84,-129,26,26,26,26,26,26,26,26,-23,-34,26,-18,-131,-127,-85,26,-86,]),'WHILE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,21,30,43,44,75,76,77,78,79,80,81,82,83,84,86,87,88,99,138,139,140,154,181,183,202,209,214,215,217,221,227,238,251,257,260,261,264,272,273,277,278,281,282,285,291,293,295,296,298,301,302,303,304,305,306,307,],[27,27,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,27,-91,-1,-14,27,-105,-106,-90,-92,-93,-94,-95,-96,-97,-99,-101,-103,-102,-89,-104,-98,-100,27,27,-17,-109,-124,-85,-128,-110,-130,27,-16,-108,-86,-118,27,-84,-129,27,27,27,27,27,27,27,27,-23,-34,27,-18,-131,-127,-85,27,-86,]),'FOR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,21,30,43,44,75,76,77,78,79,80,81,82,83,84,86,87,88,99,138,139,140,154,181,183,202,209,214,215,217,221,227,238,251,257,260,261,264,272,273,277,278,281,282,285,291,293,295,296,298,301,302,303,304,305,306,307,],[28,28,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,28,-91,-1,-14,28,-105,-106,-90,-92,-93,-94,-95,-96,-97,-99,-101,-103,-102,-89,-104,-98,-100,28,28,-17,-109,-124,-85,-128,-110,-130,28,-16,-108,-86,-118,28,-84,-129,28,28,28,28,28,28,28,28,-23,-34,28,-18,-131,-127,-85,28,-86,]),'CLASS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,21,30,43,44,75,76,77,78,79,80,81,82,83,84,86,87,88,99,138,139,140,154,181,183,202,209,214,215,217,221,227,238,251,257,260,261,264,272,273,277,278,281,282,285,291,293,295,296,298,301,302,303,304,305,306,307,],[29,29,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,29,-91,-1,-14,29,-105,-106,-90,-92,-93,-94,-95,-96,-97,-99,-101,-103,-102,-89,-104,-98,-100,29,29,-17,-109,-124,-85,-128,-110,-130,29,-16,-108,-86,-118,29,-84,-129,29,29,29,29,29,29,29,29,-23,-34,29,-18,-131,-127,-85,29,-86,]),'LBRACE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,21,30,43,44,75,76,77,78,79,80,81,82,83,84,86,87,88,92,97,99,138,139,140,154,160,163,164,165,166,181,182,183,202,209,214,215,217,221,227,235,238,251,255,256,257,260,261,264,272,273,275,277,278,279,281,282,285,291,293,295,296,298,301,302,303,304,305,306,307,],[21,21,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,21,-91,-1,-14,21,-105,-106,-90,-92,-93,-94,-95,-96,-97,-99,-101,-103,145,153,-102,-89,-104,-98,-100,-44,-41,-42,-43,-45,21,216,21,-17,-109,-124,-85,-128,-110,-130,-46,21,-16,277,278,-108,-86,-118,21,-84,-129,-39,21,21,293,21,21,21,21,21,21,-23,-34,21,-18,-131,-127,-85,21,-86,]),'RETURN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,21,30,43,44,75,76,77,78,79,80,81,82,83,84,86,87,88,99,138,139,140,154,181,183,202,209,214,215,217,221,227,238,251,257,260,261,264,272,273,277,278,281,282,285,291,293,295,296,298,301,302,303,304,305,306,307,],[31,31,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,31,-91,-1,-14,31,-105,-106,-90,-92,-93,-94,-95,-96,-97,-99,-101,-103,-102,-89,-104,-98,-100,31,31,-17,-109,-124,-85,-128,-110,-130,31,-16,-108,-86,-118,31,-84,-129,31,31,31,31,31,31,31,31,-23,-34,31,-18,-131,-127,-85,31,-86,]),'LBRACKET':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,20,21,30,31,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,94,95,96,98,99,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,134,135,137,138,139,140,142,143,146,147,148,150,154,157,158,159,160,161,162,163,164,165,166,167,168,169,170,174,175,176,177,181,183,184,195,196,197,198,199,201,202,204,205,207,209,210,214,215,217,218,219,220,221,226,227,228,229,230,231,232,234,235,238,242,244,245,246,247,248,250,251,252,253,255,257,258,260,261,263,264,265,267,268,270,271,272,273,274,275,277,278,279,280,281,282,283,284,285,286,287,288,291,293,294,295,296,298,301,302,303,304,305,306,307,],[18,18,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,67,-15,-77,18,18,18,-91,18,-76,18,-74,-75,-78,-79,18,18,-1,-14,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-80,-81,18,67,67,18,-105,-106,-90,-92,-93,-94,-95,-96,-97,67,-99,-101,-103,18,18,18,18,67,-102,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-71,67,162,18,67,18,-70,-89,-104,-98,18,162,67,67,67,67,-100,162,18,-72,-44,200,162,-41,-42,-43,-45,67,-73,18,67,18,18,67,211,18,18,18,-68,18,211,67,18,211,-17,-40,162,-77,-109,18,-124,-85,-128,67,18,162,-110,18,-130,67,-46,162,211,162,67,-46,18,18,18,67,211,162,18,67,-16,274,211,211,-108,162,-86,-118,67,18,67,18,18,18,211,-84,-129,18,-39,18,18,211,18,18,18,-80,-81,18,67,67,67,18,18,67,18,-23,-34,18,-18,-131,-127,-85,18,-86,]),'PROMPT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,18,20,21,30,31,34,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,71,75,76,77,78,79,80,81,82,83,84,86,87,88,93,94,95,96,99,130,135,138,139,140,142,154,158,169,174,175,181,183,184,196,199,202,209,210,214,215,217,219,221,226,227,238,242,244,248,251,257,260,261,264,267,268,270,272,273,274,277,278,280,281,282,285,291,293,295,296,298,301,302,303,304,305,306,307,],[32,32,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,32,32,32,-91,32,32,32,32,-1,-14,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-105,-106,-90,-92,-93,-94,-95,-96,-97,-99,-101,-103,32,32,32,32,-102,32,32,-89,-104,-98,32,-100,32,32,32,32,32,32,32,32,32,-17,-109,32,-124,-85,-128,32,-110,32,-130,32,32,32,32,-16,-108,-86,-118,32,32,32,32,-84,-129,32,32,32,32,32,32,32,32,32,32,-23,-34,32,-18,-131,-127,-85,32,-86,]),'NOT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,18,20,21,30,31,34,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,71,75,76,77,78,79,80,81,82,83,84,86,87,88,93,94,95,96,99,130,135,138,139,140,142,154,158,169,174,175,181,183,184,196,199,202,209,210,214,215,217,219,221,226,227,238,242,244,248,251,257,260,261,264,267,268,270,272,273,274,277,278,280,281,282,285,291,293,295,296,298,301,302,303,304,305,306,307,],[34,34,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,34,34,34,-91,34,34,34,34,-1,-14,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-105,-106,-90,-92,-93,-94,-95,-96,-97,-99,-101,-103,34,34,34,34,-102,34,34,-89,-104,-98,34,-100,34,34,34,34,34,34,34,34,34,-17,-109,34,-124,-85,-128,34,-110,34,-130,34,34,34,34,-16,-108,-86,-118,34,34,34,34,-84,-129,34,34,34,34,34,34,34,34,34,34,-23,-34,34,-18,-131,-127,-85,34,-86,]),'LPAREN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,17,18,20,21,25,26,27,28,30,31,32,34,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,71,73,75,76,77,78,79,80,81,82,83,84,86,87,88,93,94,95,96,99,130,135,138,139,140,142,144,154,156,158,169,174,175,181,183,184,196,199,202,207,209,210,214,215,217,219,221,226,227,238,242,244,248,251,257,259,260,261,264,267,268,270,272,273,274,277,278,280,281,282,285,291,293,295,296,298,301,302,303,304,305,306,307,],[20,20,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,71,20,20,20,93,94,95,96,-91,20,100,20,20,20,-1,-14,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,136,20,-105,-106,-90,-92,-93,-94,-95,-96,-97,-99,-101,-103,20,20,20,20,-102,20,20,-89,-104,-98,175,178,-100,196,20,20,175,20,20,20,20,20,20,-17,71,-109,20,-124,-85,-128,20,-110,20,-130,20,20,20,20,-16,-108,280,-86,-118,20,20,20,20,-84,-129,20,20,20,20,20,20,20,20,20,20,-23,-34,20,-18,-131,-127,-85,20,-86,]),'IDENTIFIER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,20,21,22,24,29,30,31,34,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,75,76,77,78,79,80,81,82,83,84,86,87,88,89,91,93,94,95,96,99,129,130,135,136,138,139,140,142,143,145,151,154,157,158,162,169,174,175,178,181,183,184,193,194,196,199,202,205,209,210,213,214,215,217,219,220,221,226,227,230,232,238,242,244,247,248,251,254,257,258,260,261,264,267,268,270,272,273,274,277,278,280,281,282,285,291,293,295,296,298,301,302,303,304,305,306,307,],[17,17,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,70,17,73,17,17,90,92,97,-91,17,17,17,17,105,-1,-14,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,127,17,17,17,-105,-106,-90,-92,-93,-94,-95,-96,-97,-99,-101,-103,141,144,17,17,17,17,-102,160,17,17,171,-89,-104,-98,17,160,179,185,-100,160,17,160,17,17,207,171,17,17,17,223,224,17,17,-17,160,-109,17,179,-124,-85,-128,17,160,-110,17,-130,160,160,17,17,17,160,17,-16,171,-108,160,-86,-118,17,17,17,17,-84,-129,17,17,17,17,17,17,17,17,17,17,-23,-34,17,-18,-131,-127,-85,17,-86,]),'NUMBER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,18,20,21,30,31,34,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,71,75,76,77,78,79,80,81,82,83,84,86,87,88,93,94,95,96,99,130,135,138,139,140,142,154,158,169,174,175,181,183,184,196,199,202,209,210,214,215,217,219,221,226,227,238,242,244,248,251,257,260,261,264,267,268,270,272,273,274,277,278,280,281,282,285,291,293,295,296,298,301,302,303,304,305,306,307,],[35,35,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,35,35,35,-91,35,35,35,35,-1,-14,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-105,-106,-90,-92,-93,-94,-95,-96,-97,-99,-101,-103,35,35,35,35,-102,35,35,-89,-104,-98,35,-100,35,35,35,35,35,35,35,35,35,-17,-109,35,-124,-85,-128,35,-110,35,-130,35,35,35,35,-16,-108,-86,-118,35,35,35,35,-84,-129,35,35,35,35,35,35,35,35,35,35,-23,-34,35,-18,-131,-127,-85,35,-86,]),'FLOAT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,18,20,21,30,31,34,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,71,75,76,77,78,79,80,81,82,83,84,86,87,88,93,94,95,96,99,130,135,138,139,140,142,154,158,169,174,175,181,183,184,196,199,202,209,210,214,215,217,219,221,226,227,238,242,244,248,251,257,260,261,264,267,268,270,272,273,274,277,278,280,281,282,285,291,293,295,296,298,301,302,303,304,305,306,307,],[36,36,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,36,36,36,-91,36,36,36,36,-1,-14,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-105,-106,-90,-92,-93,-94,-95,-96,-97,-99,-101,-103,36,36,36,36,-102,36,36,-89,-104,-98,36,-100,36,36,36,36,36,36,36,36,36,-17,-109,36,-124,-85,-128,36,-110,36,-130,36,36,36,36,-16,-108,-86,-118,36,36,36,36,-84,-129,36,36,36,36,36,36,36,36,36,36,-23,-34,36,-18,-131,-127,-85,36,-86,]),'STRING':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,18,20,21,30,31,34,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,71,75,76,77,78,79,80,81,82,83,84,86,87,88,93,94,95,96,99,100,130,135,138,139,140,142,154,158,169,174,175,181,183,184,196,199,202,209,210,214,215,217,219,221,226,227,238,242,244,248,251,257,260,261,264,267,268,270,272,273,274,277,278,280,281,282,285,291,293,295,296,298,301,302,303,304,305,306,307,],[33,33,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,33,33,33,-91,33,33,33,33,-1,-14,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-105,-106,-90,-92,-93,-94,-95,-96,-97,-99,-101,-103,33,33,33,33,-102,155,33,33,-89,-104,-98,33,-100,33,33,33,33,33,33,33,33,33,-17,-109,33,-124,-85,-128,33,-110,33,-130,33,33,33,33,-16,-108,-86,-118,33,33,33,33,-84,-129,33,33,33,33,33,33,33,33,33,33,-23,-34,33,-18,-131,-127,-85,33,-86,]),'TRUE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,18,20,21,30,31,34,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,71,75,76,77,78,79,80,81,82,83,84,86,87,88,93,94,95,96,99,130,135,138,139,140,142,154,158,169,174,175,181,183,184,196,199,202,209,210,214,215,217,219,221,226,227,238,242,244,248,251,257,260,261,264,267,268,270,272,273,274,277,278,280,281,282,285,291,293,295,296,298,301,302,303,304,305,306,307,],[37,37,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,37,37,37,-91,37,37,37,37,-1,-14,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-105,-106,-90,-92,-93,-94,-95,-96,-97,-99,-101,-103,37,37,37,37,-102,37,37,-89,-104,-98,37,-100,37,37,37,37,37,37,37,37,37,-17,-109,37,-124,-85,-128,37,-110,37,-130,37,37,37,37,-16,-108,-86,-118,37,37,37,37,-84,-129,37,37,37,37,37,37,37,37,37,37,-23,-34,37,-18,-131,-127,-85,37,-86,]),'FALSE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,18,20,21,30,31,34,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,71,75,76,77,78,79,80,81,82,83,84,86,87,88,93,94,95,96,99,130,135,138,139,140,142,154,158,169,174,175,181,183,184,196,199,202,209,210,214,215,217,219,221,226,227,238,242,244,248,251,257,260,261,264,267,268,270,272,273,274,277,278,280,281,282,285,291,293,295,296,298,301,302,303,304,305,306,307,],[38,38,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,38,38,38,-91,38,38,38,38,-1,-14,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-105,-106,-90,-92,-93,-94,-95,-96,-97,-99,-101,-103,38,38,38,38,-102,38,38,-89,-104,-98,38,-100,38,38,38,38,38,38,38,38,38,-17,-109,38,-124,-85,-128,38,-110,38,-130,38,38,38,38,-16,-108,-86,-118,38,38,38,38,-84,-129,38,38,38,38,38,38,38,38,38,38,-23,-34,38,-18,-131,-127,-85,38,-86,]),'PLUSPLUS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,20,21,30,31,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,94,95,96,98,99,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,134,135,137,138,139,140,142,146,147,148,150,154,158,159,167,168,169,170,174,175,176,181,183,184,195,196,198,199,202,204,207,209,210,214,215,217,218,219,221,226,227,228,234,238,242,244,245,248,250,251,257,260,261,263,264,265,267,268,270,272,273,274,277,278,280,281,282,283,284,285,286,287,288,291,293,294,295,296,298,301,302,303,304,305,306,307,],[39,39,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,68,-15,-77,39,39,39,-91,39,-76,39,-74,-75,-78,-79,39,39,-1,-14,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-80,-81,39,68,68,39,-105,-106,-90,-92,-93,-94,-95,-96,-97,68,-99,-101,-103,39,39,39,39,68,-102,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-71,68,39,68,39,-70,-89,-104,-98,39,68,68,68,68,-100,39,-72,68,-73,39,68,39,39,68,39,39,39,-68,39,68,39,-17,-40,-77,-109,39,-124,-85,-128,68,39,-110,39,-130,68,68,39,39,267,68,39,68,-16,-108,-86,-118,68,39,283,39,39,39,-84,-129,39,39,39,39,39,39,-80,-81,39,68,68,68,39,39,68,39,-23,-34,39,-18,-131,-127,-85,39,-86,]),'MINUSMINUS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,20,21,30,31,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,94,95,96,98,99,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,134,135,137,138,139,140,142,146,147,148,150,154,158,159,167,168,169,170,174,175,176,181,183,184,195,196,198,199,202,204,207,209,210,214,215,217,218,219,221,226,227,228,234,238,242,244,245,248,250,251,257,260,261,263,264,265,267,268,270,272,273,274,277,278,280,281,282,283,284,285,286,287,288,291,293,294,295,296,298,301,302,303,304,305,306,307,],[40,40,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,69,-15,-77,40,40,40,-91,40,-76,40,-74,-75,-78,-79,40,40,-1,-14,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-80,-81,40,69,69,40,-105,-106,-90,-92,-93,-94,-95,-96,-97,69,-99,-101,-103,40,40,40,40,69,-102,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-71,69,40,69,40,-70,-89,-104,-98,40,69,69,69,69,-100,40,-72,69,-73,40,69,40,40,69,40,40,40,-68,40,69,40,-17,-40,-77,-109,40,-124,-85,-128,69,40,-110,40,-130,69,69,40,40,268,69,40,69,-16,-108,-86,-118,69,40,284,40,40,40,-84,-129,40,40,40,40,40,40,-80,-81,40,69,69,69,40,40,69,40,-23,-34,40,-18,-131,-127,-85,40,-86,]),'CONSOLE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,21,30,43,44,75,76,77,78,79,80,81,82,83,84,86,87,88,99,138,139,140,154,181,183,202,209,214,215,217,221,227,238,251,257,260,261,264,272,273,277,278,281,282,285,291,293,295,296,298,301,302,303,304,305,306,307,],[41,41,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,41,-91,-1,-14,41,-105,-106,-90,-92,-93,-94,-95,-96,-97,-99,-101,-103,-102,-89,-104,-98,-100,41,41,-17,-109,-124,-85,-128,-110,-130,41,-16,-108,-86,-118,41,-84,-129,41,41,41,41,41,41,41,41,-23,-34,41,-18,-131,-127,-85,41,-86,]),'VAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,21,30,43,44,75,76,77,78,79,80,81,82,83,84,86,87,88,99,138,139,140,153,154,181,183,186,187,188,189,190,191,192,202,209,214,215,217,221,222,227,238,251,257,260,261,264,272,273,277,278,281,282,285,291,293,295,296,298,301,302,303,304,305,306,307,],[42,42,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,42,-91,-1,-14,42,-105,-106,-90,-92,-93,-94,-95,-96,-97,-99,-101,-103,-102,-89,-104,-98,42,-100,42,42,42,-112,-113,-114,-115,-116,-117,-17,-109,-124,-85,-128,-110,-111,-130,42,-16,-108,-86,-118,42,-84,-129,42,42,42,42,42,42,42,42,-23,-34,42,-18,-131,-127,-85,42,-86,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,15,30,43,44,78,79,80,81,82,83,84,86,87,88,99,138,140,154,202,209,214,215,217,221,227,251,257,260,261,272,273,296,298,302,303,304,305,307,],[0,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,-91,-1,-14,-90,-92,-93,-94,-95,-96,-97,-99,-101,-103,-102,-89,-98,-100,-17,-109,-124,-85,-128,-110,-130,-16,-108,-86,-118,-84,-129,-23,-34,-18,-131,-127,-85,-86,]),'SEMICOLON':([14,17,31,33,35,36,37,38,68,69,85,96,98,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,137,149,150,152,159,167,168,176,195,198,204,218,228,234,245,249,250,288,297,299,],[44,-77,99,-76,-74,-75,-78,-79,-80,-81,140,-107,154,-69,-82,-83,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-71,-70,184,-26,-27,-72,202,-73,209,-68,227,-40,244,251,257,-24,272,273,-25,302,303,]),'PLUS':([14,17,33,35,36,37,38,68,69,72,74,85,98,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,134,137,146,147,148,150,159,167,168,170,176,195,198,204,207,218,228,234,245,250,263,265,283,284,286,287,288,294,],[45,-77,-76,-74,-75,-78,-79,-80,-81,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-71,45,45,-70,45,45,45,45,-72,45,-73,45,45,-68,45,-40,-77,45,45,45,45,45,45,45,-80,-81,45,45,45,45,]),'MINUS':([14,17,33,35,36,37,38,68,69,72,74,85,98,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,134,137,146,147,148,150,159,167,168,170,176,195,198,204,207,218,228,234,245,250,263,265,283,284,286,287,288,294,],[46,-77,-76,-74,-75,-78,-79,-80,-81,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-71,46,46,-70,46,46,46,46,-72,46,-73,46,46,-68,46,-40,-77,46,46,46,46,46,46,46,-80,-81,46,46,46,46,]),'TIMES':([14,17,33,35,36,37,38,68,69,72,74,85,98,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,134,137,146,147,148,150,159,167,168,170,176,195,198,204,207,218,228,234,245,250,263,265,283,284,286,287,288,294,],[47,-77,-76,-74,-75,-78,-79,-80,-81,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-71,47,47,-70,47,47,47,47,-72,47,-73,47,47,-68,47,-40,-77,47,47,47,47,47,47,47,-80,-81,47,47,47,47,]),'DIV':([14,17,33,35,36,37,38,68,69,72,74,85,98,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,134,137,146,147,148,150,159,167,168,170,176,195,198,204,207,218,228,234,245,250,263,265,283,284,286,287,288,294,],[48,-77,-76,-74,-75,-78,-79,-80,-81,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-71,48,48,-70,48,48,48,48,-72,48,-73,48,48,-68,48,-40,-77,48,48,48,48,48,48,48,-80,-81,48,48,48,48,]),'MOD':([14,17,33,35,36,37,38,68,69,72,74,85,98,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,134,137,146,147,148,150,159,167,168,170,176,195,198,204,207,218,228,234,245,250,263,265,283,284,286,287,288,294,],[49,-77,-76,-74,-75,-78,-79,-80,-81,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-71,49,49,-70,49,49,49,49,-72,49,-73,49,49,-68,49,-40,-77,49,49,49,49,49,49,49,-80,-81,49,49,49,49,]),'PLUS_ASSIGN':([14,17,33,35,36,37,38,68,69,72,74,85,98,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,134,137,146,147,148,150,159,167,168,170,176,195,198,204,207,218,228,234,245,250,263,265,283,284,286,287,288,294,],[50,-77,-76,-74,-75,-78,-79,-80,-81,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-71,50,50,-70,50,50,50,50,-72,50,-73,50,50,-68,50,-40,-77,50,50,50,50,50,50,50,-80,-81,50,50,50,50,]),'MINUS_ASSIGN':([14,17,33,35,36,37,38,68,69,72,74,85,98,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,134,137,146,147,148,150,159,167,168,170,176,195,198,204,207,218,228,234,245,250,263,265,283,284,286,287,288,294,],[51,-77,-76,-74,-75,-78,-79,-80,-81,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-71,51,51,-70,51,51,51,51,-72,51,-73,51,51,-68,51,-40,-77,51,51,51,51,51,51,51,-80,-81,51,51,51,51,]),'MULT_ASSIGN':([14,17,33,35,36,37,38,68,69,72,74,85,98,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,134,137,146,147,148,150,159,167,168,170,176,195,198,204,207,218,228,234,245,250,263,265,283,284,286,287,288,294,],[52,-77,-76,-74,-75,-78,-79,-80,-81,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-71,52,52,-70,52,52,52,52,-72,52,-73,52,52,-68,52,-40,-77,52,52,52,52,52,52,52,-80,-81,52,52,52,52,]),'DIV_ASSIGN':([14,17,33,35,36,37,38,68,69,72,74,85,98,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,134,137,146,147,148,150,159,167,168,170,176,195,198,204,207,218,228,234,245,250,263,265,283,284,286,287,288,294,],[53,-77,-76,-74,-75,-78,-79,-80,-81,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-71,53,53,-70,53,53,53,53,-72,53,-73,53,53,-68,53,-40,-77,53,53,53,53,53,53,53,-80,-81,53,53,53,53,]),'MOD_ASSIGN':([14,17,33,35,36,37,38,68,69,72,74,85,98,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,134,137,146,147,148,150,159,167,168,170,176,195,198,204,207,218,228,234,245,250,263,265,283,284,286,287,288,294,],[54,-77,-76,-74,-75,-78,-79,-80,-81,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-71,54,54,-70,54,54,54,54,-72,54,-73,54,54,-68,54,-40,-77,54,54,54,54,54,54,54,-80,-81,54,54,54,54,]),'POT':([14,17,33,35,36,37,38,68,69,72,74,85,98,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,134,137,146,147,148,150,159,167,168,170,176,195,198,204,207,218,228,234,245,250,263,265,283,284,286,287,288,294,],[55,-77,-76,-74,-75,-78,-79,-80,-81,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-71,55,55,-70,55,55,55,55,-72,55,-73,55,55,-68,55,-40,-77,55,55,55,55,55,55,55,-80,-81,55,55,55,55,]),'AND':([14,17,33,35,36,37,38,68,69,72,74,85,98,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,134,137,146,147,148,150,159,167,168,170,176,195,198,204,207,218,228,234,245,250,263,265,283,284,286,287,288,294,],[56,-77,-76,-74,-75,-78,-79,-80,-81,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-71,56,56,-70,56,56,56,56,-72,56,-73,56,56,-68,56,-40,-77,56,56,56,56,56,56,56,-80,-81,56,56,56,56,]),'OR':([14,17,33,35,36,37,38,68,69,72,74,85,98,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,134,137,146,147,148,150,159,167,168,170,176,195,198,204,207,218,228,234,245,250,263,265,283,284,286,287,288,294,],[57,-77,-76,-74,-75,-78,-79,-80,-81,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-71,57,57,-70,57,57,57,57,-72,57,-73,57,57,-68,57,-40,-77,57,57,57,57,57,57,57,-80,-81,57,57,57,57,]),'EQ':([14,17,33,35,36,37,38,68,69,72,74,85,98,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,134,137,146,147,148,150,159,167,168,170,176,195,198,204,207,218,228,234,245,250,263,265,283,284,286,287,288,294,],[58,-77,-76,-74,-75,-78,-79,-80,-81,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-71,58,58,-70,58,58,58,58,-72,58,-73,58,58,-68,58,-40,-77,58,58,58,58,58,58,58,-80,-81,58,58,58,58,]),'NEQ':([14,17,33,35,36,37,38,68,69,72,74,85,98,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,134,137,146,147,148,150,159,167,168,170,176,195,198,204,207,218,228,234,245,250,263,265,283,284,286,287,288,294,],[59,-77,-76,-74,-75,-78,-79,-80,-81,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-71,59,59,-70,59,59,59,59,-72,59,-73,59,59,-68,59,-40,-77,59,59,59,59,59,59,59,-80,-81,59,59,59,59,]),'STRICT_EQ':([14,17,33,35,36,37,38,68,69,72,74,85,98,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,134,137,146,147,148,150,159,167,168,170,176,195,198,204,207,218,228,234,245,250,263,265,283,284,286,287,288,294,],[60,-77,-76,-74,-75,-78,-79,-80,-81,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-71,60,60,-70,60,60,60,60,-72,60,-73,60,60,-68,60,-40,-77,60,60,60,60,60,60,60,-80,-81,60,60,60,60,]),'STRICT_NEQ':([14,17,33,35,36,37,38,68,69,72,74,85,98,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,134,137,146,147,148,150,159,167,168,170,176,195,198,204,207,218,228,234,245,250,263,265,283,284,286,287,288,294,],[61,-77,-76,-74,-75,-78,-79,-80,-81,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-71,61,61,-70,61,61,61,61,-72,61,-73,61,61,-68,61,-40,-77,61,61,61,61,61,61,61,-80,-81,61,61,61,61,]),'LT':([14,17,33,35,36,37,38,68,69,72,74,85,98,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,134,137,146,147,148,150,159,167,168,170,176,195,198,204,207,218,228,234,245,250,263,265,283,284,286,287,288,294,],[62,-77,-76,-74,-75,-78,-79,-80,-81,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-71,62,62,-70,62,62,62,62,-72,62,-73,62,62,-68,62,-40,-77,62,62,62,62,62,62,62,-80,-81,62,62,62,62,]),'GT':([14,17,33,35,36,37,38,68,69,72,74,85,98,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,134,137,146,147,148,150,159,167,168,170,176,195,198,204,207,218,228,234,245,250,263,265,283,284,286,287,288,294,],[63,-77,-76,-74,-75,-78,-79,-80,-81,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-71,63,63,-70,63,63,63,63,-72,63,-73,63,63,-68,63,-40,-77,63,63,63,63,63,63,63,-80,-81,63,63,63,63,]),'LE':([14,17,33,35,36,37,38,68,69,72,74,85,98,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,134,137,146,147,148,150,159,167,168,170,176,195,198,204,207,218,228,234,245,250,263,265,283,284,286,287,288,294,],[64,-77,-76,-74,-75,-78,-79,-80,-81,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-71,64,64,-70,64,64,64,64,-72,64,-73,64,64,-68,64,-40,-77,64,64,64,64,64,64,64,-80,-81,64,64,64,64,]),'GE':([14,17,33,35,36,37,38,68,69,72,74,85,98,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,134,137,146,147,148,150,159,167,168,170,176,195,198,204,207,218,228,234,245,250,263,265,283,284,286,287,288,294,],[65,-77,-76,-74,-75,-78,-79,-80,-81,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-71,65,65,-70,65,65,65,65,-72,65,-73,65,65,-68,65,-40,-77,65,65,65,65,65,65,65,-80,-81,65,65,65,65,]),'DOT':([14,17,33,35,36,37,38,41,68,69,72,74,85,98,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,134,137,146,147,148,150,159,167,168,170,176,195,198,204,207,218,228,234,245,250,263,265,283,284,286,287,288,294,],[66,-77,-76,-74,-75,-78,-79,104,-80,-81,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-71,66,66,-70,66,66,66,66,-72,66,-73,66,66,-68,66,-40,-77,66,66,66,66,66,66,66,-80,-81,66,66,66,66,]),'COMMA':([17,33,35,36,37,38,68,69,72,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,134,137,159,160,163,164,165,166,168,179,195,201,204,231,235,275,],[-77,-76,-74,-75,-78,-79,-80,-81,135,-69,-82,-83,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-71,169,-70,-72,-44,-41,-42,-43,-45,-73,213,-68,230,-40,254,-46,-39,]),'RPAREN':([17,33,35,36,37,38,68,69,71,74,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,131,132,133,134,136,137,146,147,148,155,159,160,163,164,165,166,168,172,173,175,178,195,196,203,204,207,208,212,225,231,235,244,254,265,266,269,275,276,283,284,286,287,294,],[-77,-76,-74,-75,-78,-79,-80,-81,-107,137,-69,-82,-83,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-71,168,-19,-20,-21,-107,-70,181,182,183,195,-72,-44,-41,-42,-43,-45,-73,206,-37,-107,-107,-68,-107,-22,-40,-77,233,236,249,-35,-46,-107,-107,-28,285,-33,-39,-36,-29,-30,-31,-32,301,]),'RBRACKET':([17,33,35,36,37,38,68,69,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,132,133,134,137,159,160,163,164,165,166,168,170,195,200,203,204,211,235,253,274,275,289,],[-77,-76,-74,-75,-78,-79,-80,-81,-69,-82,-83,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-71,159,-19,-20,-21,-70,-72,-44,-41,-42,-43,-45,-73,204,-68,229,-22,-40,235,-46,275,-107,-39,297,]),'COLON':([17,33,35,36,37,38,68,69,70,90,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,137,141,159,168,171,185,195,204,206,207,223,224,236,243,263,],[-77,-76,-74,-75,-78,-79,-80,-81,129,143,-69,-82,-83,157,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-71,-70,143,-72,-73,205,220,-68,-40,232,205,247,143,258,264,281,]),'RBRACE':([21,30,75,76,77,78,79,80,81,82,83,84,86,87,88,99,138,139,140,153,154,179,180,186,187,188,189,190,191,192,202,209,215,216,217,221,222,227,237,239,240,241,251,257,260,261,262,264,272,273,277,278,281,282,290,291,292,293,295,296,298,300,302,303,304,305,307,],[-107,-91,138,-105,-106,-90,-92,-93,-94,-95,-96,-97,-99,-101,-103,-102,-89,-104,-98,-107,-100,-125,214,221,-112,-113,-114,-115,-116,-117,-17,-109,-85,-107,-128,-110,-111,-130,-126,261,-120,-121,-16,-108,-86,-118,-119,-107,-84,-129,-107,-107,-107,-123,298,-38,299,-107,-122,-23,-34,304,-18,-131,-127,-85,-86,]),'ELSE':([30,78,79,80,81,82,83,84,86,87,88,99,138,140,154,202,209,215,217,221,227,251,257,260,261,272,273,296,298,302,303,304,305,307,],[-91,-90,-92,-93,-94,-95,-96,-97,-99,-101,-103,-102,-89,-98,-100,-17,-109,238,-128,-110,-130,-16,-108,-86,-118,-84,-129,-23,-34,-18,-131,-127,306,-86,]),'CASE':([30,76,77,78,79,80,81,82,83,84,86,87,88,99,138,139,140,154,202,209,215,216,217,221,227,239,240,241,251,257,260,261,262,264,272,273,281,282,295,296,298,302,303,304,305,307,],[-91,-105,-106,-90,-92,-93,-94,-95,-96,-97,-99,-101,-103,-102,-89,-104,-98,-100,-17,-109,-85,242,-128,-110,-130,242,-120,-121,-16,-108,-86,-118,-119,-107,-84,-129,-107,-123,-122,-23,-34,-18,-131,-127,-85,-86,]),'DEFAULT':([30,76,77,78,79,80,81,82,83,84,86,87,88,99,138,139,140,154,202,209,215,216,217,221,227,239,240,241,251,257,260,261,262,264,272,273,281,282,295,296,298,302,303,304,305,307,],[-91,-105,-106,-90,-92,-93,-94,-95,-96,-97,-99,-101,-103,-102,-89,-104,-98,-100,-17,-109,-85,243,-128,-110,-130,243,-120,-121,-16,-108,-86,-118,-119,-107,-84,-129,-107,-123,-122,-23,-34,-18,-131,-127,-85,-86,]),'EQUAL':([70,90,105,141,160,161,163,164,165,166,177,185,197,223,224,229,235,246,271,275,],[130,142,158,174,-44,199,-41,-42,-43,-45,210,219,226,130,248,252,-46,270,199,-39,]),'LOG':([104,],[156,]),'NUMBER_TYPE':([129,143,157,162,205,220,230,232,247,258,],[163,163,163,163,163,163,163,163,163,163,]),'STRING_TYPE':([129,143,157,162,205,220,230,232,247,258,],[164,164,164,164,164,164,164,164,164,164,]),'BOOLEAN_TYPE':([129,143,157,162,205,220,230,232,247,258,],[165,165,165,165,165,165,165,165,165,165,]),'VOID':([129,143,157,162,205,220,230,232,247,258,],[166,166,166,166,166,166,166,166,166,166,]),'ARROW':([233,],[256,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'element':([0,1,],[2,43,]),'letAssignment':([0,1,21,75,153,181,183,186,238,264,277,278,281,282,285,291,293,295,301,306,],[3,3,78,78,190,78,78,190,78,78,78,78,78,78,78,78,78,78,78,78,]),'declaracion':([0,1,21,75,181,183,238,264,277,278,281,282,285,291,293,295,301,306,],[4,4,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'function':([0,1,21,75,153,181,183,186,238,264,277,278,281,282,285,291,293,295,301,306,],[5,5,81,81,189,81,81,189,81,81,81,81,81,81,81,81,81,81,81,81,]),'arrow_function':([0,1,21,75,181,183,238,264,277,278,281,282,285,291,293,295,301,306,],[6,6,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'async_function':([0,1,21,75,181,183,238,264,277,278,281,282,285,291,293,295,301,306,],[7,7,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'constAssignment':([0,1,21,75,153,181,183,186,238,264,277,278,281,282,285,291,293,295,301,306,],[8,8,79,79,192,79,79,192,79,79,79,79,79,79,79,79,79,79,79,79,]),'enum_definition':([0,1,],[9,9,]),'controlEstructure':([0,1,21,75,181,183,238,264,277,278,281,282,285,291,293,295,301,306,],[10,10,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'forEstructure':([0,1,21,75,181,183,238,264,277,278,281,282,285,291,293,295,301,306,],[11,11,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'class_definition':([0,1,21,75,181,183,238,264,277,278,281,282,285,291,293,295,301,306,],[12,12,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'statement':([0,1,21,75,181,183,238,264,277,278,281,282,285,291,293,295,301,306,],[13,13,76,139,215,217,260,76,76,76,76,139,296,139,76,139,305,307,]),'expression':([0,1,18,20,21,31,34,39,40,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,71,75,93,94,95,96,130,135,142,158,169,174,175,181,183,184,196,199,210,219,226,238,242,244,248,264,267,268,270,274,277,278,280,281,282,285,291,293,295,301,306,],[14,14,72,74,85,98,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,134,85,146,147,148,150,167,170,176,198,134,176,74,85,85,218,134,228,234,245,250,85,263,265,176,85,286,287,288,134,85,85,294,85,85,85,85,85,85,85,85,]),'consolelog':([0,1,21,75,181,183,238,264,277,278,281,282,285,291,293,295,301,306,],[15,15,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'varAssignment':([0,1,21,75,153,181,183,186,238,264,277,278,281,282,285,291,293,295,301,306,],[30,30,30,30,191,30,30,191,30,30,30,30,30,30,30,30,30,30,30,30,]),'instruction_list':([21,264,277,278,281,293,],[75,282,291,291,295,291,]),'empty':([21,71,96,136,153,175,178,196,216,244,254,264,274,277,278,281,293,],[77,133,152,173,188,173,173,133,241,269,173,77,133,77,77,77,77,]),'lista_expresiones_opt':([71,196,274,],[131,225,289,]),'lista_expresiones':([71,169,196,274,],[132,203,132,132,]),'for_init':([96,],[149,]),'type':([129,143,157,162,205,220,230,232,247,258,],[161,177,197,201,231,246,253,255,271,279,]),'parameters':([136,175,178,254,],[172,208,212,276,]),'enum_members':([145,213,],[180,237,]),'class_body':([153,],[186,]),'class_element':([153,186,],[187,222,]),'case_block':([216,],[239,]),'case':([216,239,],[240,262,]),'for_update':([244,],[266,]),'body_function':([277,278,293,],[290,292,300,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program element','program',2,'p_program','parser.py',15),
  ('program -> element','program',1,'p_program','parser.py',16),
  ('element -> letAssignment','element',1,'p_element','parser.py',20),
  ('element -> declaracion','element',1,'p_element','parser.py',21),
  ('element -> function','element',1,'p_element','parser.py',22),
  ('element -> arrow_function','element',1,'p_element','parser.py',23),
  ('element -> async_function','element',1,'p_element','parser.py',24),
  ('element -> constAssignment','element',1,'p_element','parser.py',25),
  ('element -> enum_definition','element',1,'p_element','parser.py',26),
  ('element -> controlEstructure','element',1,'p_element','parser.py',27),
  ('element -> forEstructure','element',1,'p_element','parser.py',28),
  ('element -> class_definition','element',1,'p_element','parser.py',29),
  ('element -> statement','element',1,'p_element','parser.py',30),
  ('element -> expression SEMICOLON','element',2,'p_element','parser.py',31),
  ('element -> consolelog','element',1,'p_element','parser.py',32),
  ('letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON','letAssignment',7,'p_letAssignment','parser.py',38),
  ('letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON','letAssignment',5,'p_letAssignment_no_type','parser.py',42),
  ('declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON','declaracion',11,'p_declaracion','parser.py',47),
  ('lista_expresiones_opt -> lista_expresiones','lista_expresiones_opt',1,'p_lista_expresiones_opt','parser.py',51),
  ('lista_expresiones_opt -> empty','lista_expresiones_opt',1,'p_lista_expresiones_opt','parser.py',52),
  ('lista_expresiones -> expression','lista_expresiones',1,'p_lista_expresiones','parser.py',56),
  ('lista_expresiones -> expression COMMA lista_expresiones','lista_expresiones',3,'p_lista_expresiones','parser.py',57),
  ('forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement','forEstructure',9,'p_forEstructure','parser.py',62),
  ('for_init -> LET IDENTIFIER EQUAL expression','for_init',4,'p_for_init','parser.py',66),
  ('for_init -> LET IDENTIFIER COLON type EQUAL expression','for_init',6,'p_for_init','parser.py',67),
  ('for_init -> expression','for_init',1,'p_for_init','parser.py',68),
  ('for_init -> empty','for_init',1,'p_for_init','parser.py',69),
  ('for_update -> expression','for_update',1,'p_for_update','parser.py',74),
  ('for_update -> expression PLUSPLUS','for_update',2,'p_for_update','parser.py',75),
  ('for_update -> expression MINUSMINUS','for_update',2,'p_for_update','parser.py',76),
  ('for_update -> PLUSPLUS expression','for_update',2,'p_for_update','parser.py',77),
  ('for_update -> MINUSMINUS expression','for_update',2,'p_for_update','parser.py',78),
  ('for_update -> empty','for_update',1,'p_for_update','parser.py',79),
  ('function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE','function',10,'p_function','parser.py',84),
  ('parameters -> IDENTIFIER COLON type','parameters',3,'p_parameters','parser.py',88),
  ('parameters -> IDENTIFIER COLON type COMMA parameters','parameters',5,'p_parameters','parser.py',89),
  ('parameters -> empty','parameters',1,'p_parameters','parser.py',90),
  ('body_function -> instruction_list','body_function',1,'p_body_function','parser.py',94),
  ('type -> LBRACKET type COMMA type RBRACKET','type',5,'p_type_tuple','parser.py',99),
  ('expression -> LBRACKET expression COMMA expression RBRACKET','expression',5,'p_expression_tuple','parser.py',103),
  ('type -> NUMBER_TYPE','type',1,'p_type','parser.py',108),
  ('type -> STRING_TYPE','type',1,'p_type','parser.py',109),
  ('type -> BOOLEAN_TYPE','type',1,'p_type','parser.py',110),
  ('type -> IDENTIFIER','type',1,'p_type','parser.py',111),
  ('type -> VOID','type',1,'p_type','parser.py',112),
  ('type -> type LBRACKET RBRACKET','type',3,'p_type','parser.py',113),
  ('expression -> expression PLUS expression','expression',3,'p_expression','parser.py',118),
  ('expression -> expression MINUS expression','expression',3,'p_expression','parser.py',119),
  ('expression -> expression TIMES expression','expression',3,'p_expression','parser.py',120),
  ('expression -> expression DIV expression','expression',3,'p_expression','parser.py',121),
  ('expression -> expression MOD expression','expression',3,'p_expression','parser.py',122),
  ('expression -> expression PLUS_ASSIGN expression','expression',3,'p_expression','parser.py',123),
  ('expression -> expression MINUS_ASSIGN expression','expression',3,'p_expression','parser.py',124),
  ('expression -> expression MULT_ASSIGN expression','expression',3,'p_expression','parser.py',125),
  ('expression -> expression DIV_ASSIGN expression','expression',3,'p_expression','parser.py',126),
  ('expression -> expression MOD_ASSIGN expression','expression',3,'p_expression','parser.py',127),
  ('expression -> expression POT expression','expression',3,'p_expression','parser.py',128),
  ('expression -> expression AND expression','expression',3,'p_expression','parser.py',129),
  ('expression -> expression OR expression','expression',3,'p_expression','parser.py',130),
  ('expression -> expression EQ expression','expression',3,'p_expression','parser.py',131),
  ('expression -> expression NEQ expression','expression',3,'p_expression','parser.py',132),
  ('expression -> expression STRICT_EQ expression','expression',3,'p_expression','parser.py',133),
  ('expression -> expression STRICT_NEQ expression','expression',3,'p_expression','parser.py',134),
  ('expression -> expression LT expression','expression',3,'p_expression','parser.py',135),
  ('expression -> expression GT expression','expression',3,'p_expression','parser.py',136),
  ('expression -> expression LE expression','expression',3,'p_expression','parser.py',137),
  ('expression -> expression GE expression','expression',3,'p_expression','parser.py',138),
  ('expression -> PROMPT LPAREN STRING RPAREN','expression',4,'p_expression','parser.py',139),
  ('expression -> NOT expression','expression',2,'p_expression','parser.py',140),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','parser.py',141),
  ('expression -> expression DOT IDENTIFIER','expression',3,'p_expression','parser.py',142),
  ('expression -> expression LBRACKET expression RBRACKET','expression',4,'p_expression','parser.py',143),
  ('expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN','expression',4,'p_expression','parser.py',144),
  ('expression -> NUMBER','expression',1,'p_expression','parser.py',145),
  ('expression -> FLOAT','expression',1,'p_expression','parser.py',146),
  ('expression -> STRING','expression',1,'p_expression','parser.py',147),
  ('expression -> IDENTIFIER','expression',1,'p_expression','parser.py',148),
  ('expression -> TRUE','expression',1,'p_expression','parser.py',149),
  ('expression -> FALSE','expression',1,'p_expression','parser.py',150),
  ('expression -> expression PLUSPLUS','expression',2,'p_expression_increment','parser.py',154),
  ('expression -> expression MINUSMINUS','expression',2,'p_expression_increment','parser.py',155),
  ('expression -> PLUSPLUS expression','expression',2,'p_expression_increment','parser.py',156),
  ('expression -> MINUSMINUS expression','expression',2,'p_expression_increment','parser.py',157),
  ('consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON','consolelog',7,'p_consolelog','parser.py',161),
  ('controlEstructure -> IF LPAREN expression RPAREN statement','controlEstructure',5,'p_controlEstructure','parser.py',166),
  ('controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement','controlEstructure',7,'p_controlEstructure','parser.py',167),
  ('controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement','controlEstructure',11,'p_controlEstructure','parser.py',168),
  ('controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement','controlEstructure',13,'p_controlEstructure','parser.py',169),
  ('statement -> LBRACE instruction_list RBRACE','statement',3,'p_statement','parser.py',174),
  ('statement -> letAssignment','statement',1,'p_statement','parser.py',175),
  ('statement -> varAssignment','statement',1,'p_statement','parser.py',176),
  ('statement -> constAssignment','statement',1,'p_statement','parser.py',177),
  ('statement -> declaracion','statement',1,'p_statement','parser.py',178),
  ('statement -> function','statement',1,'p_statement','parser.py',179),
  ('statement -> arrow_function','statement',1,'p_statement','parser.py',180),
  ('statement -> async_function','statement',1,'p_statement','parser.py',181),
  ('statement -> consolelog','statement',1,'p_statement','parser.py',182),
  ('statement -> expression SEMICOLON','statement',2,'p_statement','parser.py',183),
  ('statement -> controlEstructure','statement',1,'p_statement','parser.py',184),
  ('statement -> RETURN expression SEMICOLON','statement',3,'p_statement','parser.py',185),
  ('statement -> forEstructure','statement',1,'p_statement','parser.py',186),
  ('statement -> RETURN SEMICOLON','statement',2,'p_statement','parser.py',187),
  ('statement -> class_definition','statement',1,'p_statement','parser.py',188),
  ('instruction_list -> instruction_list statement','instruction_list',2,'p_instruction_list','parser.py',195),
  ('instruction_list -> statement','instruction_list',1,'p_instruction_list','parser.py',196),
  ('instruction_list -> empty','instruction_list',1,'p_instruction_list','parser.py',197),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',202),
  ('constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON','constAssignment',7,'p_constAssignment','parser.py',222),
  ('constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON','constAssignment',5,'p_constAssignment_no_type','parser.py',226),
  ('class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE','class_definition',5,'p_class_definition','parser.py',232),
  ('class_body -> class_body class_element','class_body',2,'p_class_body','parser.py',236),
  ('class_body -> class_element','class_body',1,'p_class_body','parser.py',237),
  ('class_body -> empty','class_body',1,'p_class_body','parser.py',238),
  ('class_element -> function','class_element',1,'p_class_element','parser.py',242),
  ('class_element -> letAssignment','class_element',1,'p_class_element','parser.py',243),
  ('class_element -> varAssignment','class_element',1,'p_class_element','parser.py',244),
  ('class_element -> constAssignment','class_element',1,'p_class_element','parser.py',245),
  ('controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE','controlEstructure',7,'p_controlEstructure_switch','parser.py',251),
  ('case_block -> case_block case','case_block',2,'p_case_block','parser.py',255),
  ('case_block -> case','case_block',1,'p_case_block','parser.py',256),
  ('case_block -> empty','case_block',1,'p_case_block','parser.py',257),
  ('case -> CASE expression COLON instruction_list','case',4,'p_case','parser.py',261),
  ('case -> DEFAULT COLON instruction_list','case',3,'p_case','parser.py',262),
  ('enum_definition -> ENUM IDENTIFIER LBRACE enum_members RBRACE','enum_definition',5,'p_enum_definition','parser.py',268),
  ('enum_members -> IDENTIFIER','enum_members',1,'p_enum_members','parser.py',272),
  ('enum_members -> IDENTIFIER COMMA enum_members','enum_members',3,'p_enum_members','parser.py',273),
  ('async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE','async_function',11,'p_async_function','parser.py',279),
  ('controlEstructure -> WHILE LPAREN expression RPAREN statement','controlEstructure',5,'p_controlEstructure_while','parser.py',292),
  ('varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON','varAssignment',7,'p_varAssignment','parser.py',299),
  ('varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON','varAssignment',5,'p_varAssignment_no_type','parser.py',303),
  ('arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON','arrow_function',11,'p_arrow_function','parser.py',308),
]
