
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAND ANY ARROW AS ASYNC AWAIT BIGINT_TYPE BOOLEAN_TYPE BREAK CASE CATCH CLASS COLON COMMA CONSOLE CONST CONTINUE DEFAULT DIV DIV_ASSIGN DOT ELSE ENUM EQ EQUAL EQUALS EXPORT FALSE FINALLY FLOAT FOR FUNCTION GE GT IDENTIFIER IF IMPORT INTERFACE LBRACE LBRACKET LE LET LOG LPAREN LT MINUS MINUSMINUS MINUS_ASSIGN MOD MOD_ASSIGN MULT_ASSIGN NEQ NEW NOT NULL_TYPE NUMBER NUMBER_TYPE OF OR PLUS PLUSPLUS PLUS_ASSIGN POT PRIVATE PROTECTED PUBLIC RBRACE RBRACKET RETURN RPAREN SEMICOLON STATIC STRICT_EQ STRICT_NEQ STRING STRING_TYPE SUPER SWITCH SYMBOL_TYPE THIS TIMES TRUE TRY TYPE UNDEFINED_TYPE VAR VOID WHILEprogram : program element\n               | elementelement : letAssignment\n                | declaracion\n                | function\n                | controlEstructure\n                | forEstructure\n                | statement\n                | expression SEMICOLON\n                | consolelogletAssignment : LET IDENTIFIER COLON type EQUAL expression SEMICOLONletAssignment : LET IDENTIFIER EQUAL expression SEMICOLONdeclaracion : LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLONlista_expresiones_opt : lista_expresiones\n                            | emptylista_expresiones : expression\n                        | expression COMMA lista_expresionesforEstructure : FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statementfor_init : LET IDENTIFIER EQUAL expression\n                | LET IDENTIFIER COLON type EQUAL expression\n                | expression\n                | emptyfor_update : expression\n                  | expression PLUSPLUS\n                  | expression MINUSMINUS\n                  | PLUSPLUS expression\n                  | MINUSMINUS expression\n                  | emptyfunction : FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACEparameters : IDENTIFIER COLON type\n                | IDENTIFIER COLON type COMMA parameters\n                | emptybody_function : instruction_listtype : NUMBER_TYPE\n            | STRING_TYPE\n            | BOOLEAN_TYPE\n            | IDENTIFIER\n            | type LBRACKET RBRACKETexpression : expression PLUS expression\n                | expression MINUS expression\n                | expression TIMES expression\n                | expression DIV expression\n                | expression MOD expression\n                | expression PLUS_ASSIGN expression\n                | expression MINUS_ASSIGN expression\n                | expression MULT_ASSIGN expression\n                | expression DIV_ASSIGN expression\n                | expression MOD_ASSIGN expression\n                | expression POT expression\n                | expression AND expression\n                | expression OR expression\n                | expression EQ expression\n                | expression NEQ expression\n                | expression STRICT_EQ expression\n                | expression STRICT_NEQ expression\n                | expression LT expression\n                | expression GT expression\n                | expression LE expression\n                | expression GE expression\n                | NOT expression\n                | LPAREN expression RPAREN\n                | expression DOT IDENTIFIER\n                | expression LBRACKET expression RBRACKET\n                | IDENTIFIER LPAREN lista_expresiones_opt RPAREN\n                | NUMBER\n                | FLOAT\n                | STRING\n                | IDENTIFIERexpression : expression PLUSPLUS\n                    | expression MINUSMINUS\n                    | PLUSPLUS expression\n                    | MINUSMINUS expressionconsolelog : CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLONcontrolEstructure : IF LPAREN expression RPAREN statement \n                        | IF LPAREN expression RPAREN statement ELSE statement \n                        | IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement \n                        | IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statementstatement : LBRACE instruction_list RBRACE\n                | letAssignment\n                | declaracion\n                | function\n                | consolelog\n                | expression SEMICOLON\n                | controlEstructure\n                | RETURN expression SEMICOLON\n                | forEstructureinstruction_list : instruction_list statement\n                        | statement\n                        | emptyempty :'
    
_lr_action_items = {'LET':([0,1,2,3,4,5,6,7,8,10,15,26,27,57,58,59,60,61,62,63,65,66,68,105,106,107,113,127,133,137,146,151,157,164,168,172,178,180,182,183,184,185,186,187,],[11,11,-2,-3,-4,-5,-6,-7,-8,-10,11,-1,-9,11,-88,-89,-79,-80,-81,-82,-84,-86,111,-78,-87,-83,-85,11,-12,-74,11,-11,-75,-73,11,11,11,-18,-29,11,-13,-74,11,-75,]),'FUNCTION':([0,1,2,3,4,5,6,7,8,10,15,26,27,57,58,59,60,61,62,63,65,66,105,106,107,113,127,133,137,146,151,157,164,168,172,178,180,182,183,184,185,186,187,],[13,13,-2,-3,-4,-5,-6,-7,-8,-10,13,-1,-9,13,-88,-89,-79,-80,-81,-82,-84,-86,-78,-87,-83,-85,13,-12,-74,13,-11,-75,-73,13,13,13,-18,-29,13,-13,-74,13,-75,]),'IF':([0,1,2,3,4,5,6,7,8,10,15,26,27,57,58,59,60,61,62,63,65,66,105,106,107,113,127,133,137,146,151,157,164,168,172,178,180,182,183,184,185,186,187,],[16,16,-2,-3,-4,-5,-6,-7,-8,-10,16,-1,-9,16,-88,-89,-79,-80,-81,-82,-84,-86,-78,-87,-83,-85,16,-12,-74,156,-11,-75,-73,16,16,16,-18,-29,16,-13,-74,156,-75,]),'FOR':([0,1,2,3,4,5,6,7,8,10,15,26,27,57,58,59,60,61,62,63,65,66,105,106,107,113,127,133,137,146,151,157,164,168,172,178,180,182,183,184,185,186,187,],[17,17,-2,-3,-4,-5,-6,-7,-8,-10,17,-1,-9,17,-88,-89,-79,-80,-81,-82,-84,-86,-78,-87,-83,-85,17,-12,-74,17,-11,-75,-73,17,17,17,-18,-29,17,-13,-74,17,-75,]),'LBRACE':([0,1,2,3,4,5,6,7,8,10,15,26,27,57,58,59,60,61,62,63,65,66,105,106,107,113,116,118,119,120,127,133,137,146,151,155,157,164,167,168,172,178,180,182,183,184,185,186,187,],[15,15,-2,-3,-4,-5,-6,-7,-8,-10,15,-1,-9,15,-88,-89,-79,-80,-81,-82,-84,-86,-78,-87,-83,-85,-37,-34,-35,-36,15,-12,-74,15,-11,168,-75,-73,-38,15,15,15,-18,-29,15,-13,-74,15,-75,]),'RETURN':([0,1,2,3,4,5,6,7,8,10,15,26,27,57,58,59,60,61,62,63,65,66,105,106,107,113,127,133,137,146,151,157,164,168,172,178,180,182,183,184,185,186,187,],[18,18,-2,-3,-4,-5,-6,-7,-8,-10,18,-1,-9,18,-88,-89,-79,-80,-81,-82,-84,-86,-78,-87,-83,-85,18,-12,-74,18,-11,-75,-73,18,18,18,-18,-29,18,-13,-74,18,-75,]),'NOT':([0,1,2,3,4,5,6,7,8,10,14,15,18,19,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,54,57,58,59,60,61,62,63,65,66,67,68,98,105,106,107,113,123,127,128,130,131,133,137,139,146,147,151,157,160,161,163,164,165,168,169,172,178,180,182,183,184,185,186,187,],[19,19,-2,-3,-4,-5,-6,-7,-8,-10,19,19,19,19,19,19,-1,-9,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-88,-89,-79,-80,-81,-82,-84,-86,19,19,19,-78,-87,-83,-85,19,19,19,19,19,-12,-74,19,19,19,-11,-75,19,19,19,-73,19,19,19,19,19,-18,-29,19,-13,-74,19,-75,]),'LPAREN':([0,1,2,3,4,5,6,7,8,10,12,14,15,16,17,18,19,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,54,55,57,58,59,60,61,62,63,65,66,67,68,98,105,106,107,113,114,123,127,128,130,131,133,137,139,146,147,151,156,157,160,161,163,164,165,168,169,172,178,180,182,183,184,185,186,187,],[14,14,-2,-3,-4,-5,-6,-7,-8,-10,54,14,14,67,68,14,14,14,14,-1,-9,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,103,14,-88,-89,-79,-80,-81,-82,-84,-86,14,14,14,-78,-87,-83,-85,130,14,14,14,14,14,-12,-74,14,14,14,-11,169,-75,14,14,14,-73,14,14,14,14,14,-18,-29,14,-13,-74,14,-75,]),'IDENTIFIER':([0,1,2,3,4,5,6,7,8,10,11,13,14,15,18,19,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,57,58,59,60,61,62,63,65,66,67,68,97,98,103,105,106,107,111,113,123,127,128,130,131,133,135,137,139,140,145,146,147,151,153,157,160,161,163,164,165,168,169,172,178,180,182,183,184,185,186,187,],[12,12,-2,-3,-4,-5,-6,-7,-8,-10,53,55,12,12,12,12,12,12,-1,-9,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,95,12,12,12,-88,-89,-79,-80,-81,-82,-84,-86,12,12,116,12,124,-78,-87,-83,129,-85,12,12,12,12,12,-12,116,-74,12,116,116,12,12,-11,124,-75,12,12,12,-73,12,12,12,12,12,-18,-29,12,-13,-74,12,-75,]),'NUMBER':([0,1,2,3,4,5,6,7,8,10,14,15,18,19,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,54,57,58,59,60,61,62,63,65,66,67,68,98,105,106,107,113,123,127,128,130,131,133,137,139,146,147,151,157,160,161,163,164,165,168,169,172,178,180,182,183,184,185,186,187,],[20,20,-2,-3,-4,-5,-6,-7,-8,-10,20,20,20,20,20,20,-1,-9,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-88,-89,-79,-80,-81,-82,-84,-86,20,20,20,-78,-87,-83,-85,20,20,20,20,20,-12,-74,20,20,20,-11,-75,20,20,20,-73,20,20,20,20,20,-18,-29,20,-13,-74,20,-75,]),'FLOAT':([0,1,2,3,4,5,6,7,8,10,14,15,18,19,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,54,57,58,59,60,61,62,63,65,66,67,68,98,105,106,107,113,123,127,128,130,131,133,137,139,146,147,151,157,160,161,163,164,165,168,169,172,178,180,182,183,184,185,186,187,],[21,21,-2,-3,-4,-5,-6,-7,-8,-10,21,21,21,21,21,21,-1,-9,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-88,-89,-79,-80,-81,-82,-84,-86,21,21,21,-78,-87,-83,-85,21,21,21,21,21,-12,-74,21,21,21,-11,-75,21,21,21,-73,21,21,21,21,21,-18,-29,21,-13,-74,21,-75,]),'STRING':([0,1,2,3,4,5,6,7,8,10,14,15,18,19,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,54,57,58,59,60,61,62,63,65,66,67,68,98,105,106,107,113,123,127,128,130,131,133,137,139,146,147,151,157,160,161,163,164,165,168,169,172,178,180,182,183,184,185,186,187,],[22,22,-2,-3,-4,-5,-6,-7,-8,-10,22,22,22,22,22,22,-1,-9,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-88,-89,-79,-80,-81,-82,-84,-86,22,22,22,-78,-87,-83,-85,22,22,22,22,22,-12,-74,22,22,22,-11,-75,22,22,22,-73,22,22,22,22,22,-18,-29,22,-13,-74,22,-75,]),'PLUSPLUS':([0,1,2,3,4,5,6,7,8,9,10,12,14,15,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,102,104,105,106,107,108,110,113,115,121,122,123,127,128,130,131,133,137,138,139,142,146,147,148,151,157,158,160,161,163,164,165,168,169,170,171,172,173,174,175,178,179,180,182,183,184,185,186,187,],[23,23,-2,-3,-4,-5,-6,-7,-8,51,-10,-68,23,23,23,23,-65,-66,-67,23,23,-1,-9,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-69,-70,23,51,23,-88,-89,-79,-80,-81,-82,51,-84,-86,23,23,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-62,51,23,51,-61,-78,-87,-83,51,51,-85,-63,51,-64,23,23,23,23,23,-12,-74,51,23,51,23,160,51,-11,-75,170,23,23,23,-73,23,23,23,-69,-70,23,51,51,51,23,51,-18,-29,23,-13,-74,23,-75,]),'MINUSMINUS':([0,1,2,3,4,5,6,7,8,9,10,12,14,15,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,102,104,105,106,107,108,110,113,115,121,122,123,127,128,130,131,133,137,138,139,142,146,147,148,151,157,158,160,161,163,164,165,168,169,170,171,172,173,174,175,178,179,180,182,183,184,185,186,187,],[24,24,-2,-3,-4,-5,-6,-7,-8,52,-10,-68,24,24,24,24,-65,-66,-67,24,24,-1,-9,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-69,-70,24,52,24,-88,-89,-79,-80,-81,-82,52,-84,-86,24,24,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-62,52,24,52,-61,-78,-87,-83,52,52,-85,-63,52,-64,24,24,24,24,24,-12,-74,52,24,52,24,161,52,-11,-75,171,24,24,24,-73,24,24,24,-69,-70,24,52,52,52,24,52,-18,-29,24,-13,-74,24,-75,]),'CONSOLE':([0,1,2,3,4,5,6,7,8,10,15,26,27,57,58,59,60,61,62,63,65,66,105,106,107,113,127,133,137,146,151,157,164,168,172,178,180,182,183,184,185,186,187,],[25,25,-2,-3,-4,-5,-6,-7,-8,-10,25,-1,-9,25,-88,-89,-79,-80,-81,-82,-84,-86,-78,-87,-83,-85,25,-12,-74,25,-11,-75,-73,25,25,25,-18,-29,25,-13,-74,25,-75,]),'$end':([1,2,3,4,5,6,7,8,10,26,27,60,61,62,63,65,66,105,107,113,133,137,151,157,164,180,182,184,185,187,],[0,-2,-3,-4,-5,-6,-7,-8,-10,-1,-9,-79,-80,-81,-82,-84,-86,-78,-83,-85,-12,-74,-11,-75,-73,-18,-29,-13,-74,-75,]),'SEMICOLON':([9,12,20,21,22,51,52,64,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,104,109,110,112,115,121,122,138,142,148,150,175,181,],[27,-68,-65,-66,-67,-69,-70,107,-90,113,-60,-71,-72,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-62,-61,128,-21,-22,-63,133,-64,147,151,-19,164,-20,184,]),'PLUS':([9,12,20,21,22,51,52,56,64,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,104,108,110,115,121,122,138,142,148,158,170,171,173,174,175,179,],[28,-68,-65,-66,-67,-69,-70,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-62,28,28,-61,28,28,-63,28,-64,28,28,28,28,-69,-70,28,28,28,28,]),'MINUS':([9,12,20,21,22,51,52,56,64,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,104,108,110,115,121,122,138,142,148,158,170,171,173,174,175,179,],[29,-68,-65,-66,-67,-69,-70,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-62,29,29,-61,29,29,-63,29,-64,29,29,29,29,-69,-70,29,29,29,29,]),'TIMES':([9,12,20,21,22,51,52,56,64,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,104,108,110,115,121,122,138,142,148,158,170,171,173,174,175,179,],[30,-68,-65,-66,-67,-69,-70,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-62,30,30,-61,30,30,-63,30,-64,30,30,30,30,-69,-70,30,30,30,30,]),'DIV':([9,12,20,21,22,51,52,56,64,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,104,108,110,115,121,122,138,142,148,158,170,171,173,174,175,179,],[31,-68,-65,-66,-67,-69,-70,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-62,31,31,-61,31,31,-63,31,-64,31,31,31,31,-69,-70,31,31,31,31,]),'MOD':([9,12,20,21,22,51,52,56,64,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,104,108,110,115,121,122,138,142,148,158,170,171,173,174,175,179,],[32,-68,-65,-66,-67,-69,-70,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-62,32,32,-61,32,32,-63,32,-64,32,32,32,32,-69,-70,32,32,32,32,]),'PLUS_ASSIGN':([9,12,20,21,22,51,52,56,64,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,104,108,110,115,121,122,138,142,148,158,170,171,173,174,175,179,],[33,-68,-65,-66,-67,-69,-70,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-62,33,33,-61,33,33,-63,33,-64,33,33,33,33,-69,-70,33,33,33,33,]),'MINUS_ASSIGN':([9,12,20,21,22,51,52,56,64,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,104,108,110,115,121,122,138,142,148,158,170,171,173,174,175,179,],[34,-68,-65,-66,-67,-69,-70,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-62,34,34,-61,34,34,-63,34,-64,34,34,34,34,-69,-70,34,34,34,34,]),'MULT_ASSIGN':([9,12,20,21,22,51,52,56,64,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,104,108,110,115,121,122,138,142,148,158,170,171,173,174,175,179,],[35,-68,-65,-66,-67,-69,-70,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-62,35,35,-61,35,35,-63,35,-64,35,35,35,35,-69,-70,35,35,35,35,]),'DIV_ASSIGN':([9,12,20,21,22,51,52,56,64,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,104,108,110,115,121,122,138,142,148,158,170,171,173,174,175,179,],[36,-68,-65,-66,-67,-69,-70,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-62,36,36,-61,36,36,-63,36,-64,36,36,36,36,-69,-70,36,36,36,36,]),'MOD_ASSIGN':([9,12,20,21,22,51,52,56,64,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,104,108,110,115,121,122,138,142,148,158,170,171,173,174,175,179,],[37,-68,-65,-66,-67,-69,-70,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-62,37,37,-61,37,37,-63,37,-64,37,37,37,37,-69,-70,37,37,37,37,]),'POT':([9,12,20,21,22,51,52,56,64,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,104,108,110,115,121,122,138,142,148,158,170,171,173,174,175,179,],[38,-68,-65,-66,-67,-69,-70,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-62,38,38,-61,38,38,-63,38,-64,38,38,38,38,-69,-70,38,38,38,38,]),'AND':([9,12,20,21,22,51,52,56,64,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,104,108,110,115,121,122,138,142,148,158,170,171,173,174,175,179,],[39,-68,-65,-66,-67,-69,-70,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-62,39,39,-61,39,39,-63,39,-64,39,39,39,39,-69,-70,39,39,39,39,]),'OR':([9,12,20,21,22,51,52,56,64,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,104,108,110,115,121,122,138,142,148,158,170,171,173,174,175,179,],[40,-68,-65,-66,-67,-69,-70,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-62,40,40,-61,40,40,-63,40,-64,40,40,40,40,-69,-70,40,40,40,40,]),'EQ':([9,12,20,21,22,51,52,56,64,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,104,108,110,115,121,122,138,142,148,158,170,171,173,174,175,179,],[41,-68,-65,-66,-67,-69,-70,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-62,41,41,-61,41,41,-63,41,-64,41,41,41,41,-69,-70,41,41,41,41,]),'NEQ':([9,12,20,21,22,51,52,56,64,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,104,108,110,115,121,122,138,142,148,158,170,171,173,174,175,179,],[42,-68,-65,-66,-67,-69,-70,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-62,42,42,-61,42,42,-63,42,-64,42,42,42,42,-69,-70,42,42,42,42,]),'STRICT_EQ':([9,12,20,21,22,51,52,56,64,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,104,108,110,115,121,122,138,142,148,158,170,171,173,174,175,179,],[43,-68,-65,-66,-67,-69,-70,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-62,43,43,-61,43,43,-63,43,-64,43,43,43,43,-69,-70,43,43,43,43,]),'STRICT_NEQ':([9,12,20,21,22,51,52,56,64,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,104,108,110,115,121,122,138,142,148,158,170,171,173,174,175,179,],[44,-68,-65,-66,-67,-69,-70,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-62,44,44,-61,44,44,-63,44,-64,44,44,44,44,-69,-70,44,44,44,44,]),'LT':([9,12,20,21,22,51,52,56,64,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,104,108,110,115,121,122,138,142,148,158,170,171,173,174,175,179,],[45,-68,-65,-66,-67,-69,-70,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-62,45,45,-61,45,45,-63,45,-64,45,45,45,45,-69,-70,45,45,45,45,]),'GT':([9,12,20,21,22,51,52,56,64,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,104,108,110,115,121,122,138,142,148,158,170,171,173,174,175,179,],[46,-68,-65,-66,-67,-69,-70,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-62,46,46,-61,46,46,-63,46,-64,46,46,46,46,-69,-70,46,46,46,46,]),'LE':([9,12,20,21,22,51,52,56,64,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,104,108,110,115,121,122,138,142,148,158,170,171,173,174,175,179,],[47,-68,-65,-66,-67,-69,-70,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-62,47,47,-61,47,47,-63,47,-64,47,47,47,47,-69,-70,47,47,47,47,]),'GE':([9,12,20,21,22,51,52,56,64,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,104,108,110,115,121,122,138,142,148,158,170,171,173,174,175,179,],[48,-68,-65,-66,-67,-69,-70,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-62,48,48,-61,48,48,-63,48,-64,48,48,48,48,-69,-70,48,48,48,48,]),'DOT':([9,12,20,21,22,25,51,52,56,64,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,104,108,110,115,121,122,138,142,148,158,170,171,173,174,175,179,],[49,-68,-65,-66,-67,73,-69,-70,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-62,49,49,-61,49,49,-63,49,-64,49,49,49,49,-69,-70,49,49,49,49,]),'LBRACKET':([9,12,20,21,22,51,52,56,64,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,104,108,110,115,116,117,118,119,120,121,122,138,142,143,144,148,149,152,155,158,167,170,171,173,174,175,179,],[50,-68,-65,-66,-67,-69,-70,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-62,50,50,-61,50,50,-63,-37,132,-34,-35,-36,50,-64,50,50,-38,154,50,154,165,154,50,-38,-69,-70,50,50,50,50,]),'RPAREN':([12,20,21,22,51,52,54,56,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,99,100,101,102,103,104,108,115,116,118,119,120,122,125,126,130,134,141,144,147,153,158,159,162,166,167,170,171,173,174,179,],[-68,-65,-66,-67,-69,-70,-90,104,-60,-71,-72,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-62,122,-14,-15,-16,-90,-61,127,-63,-37,-34,-35,-36,-64,136,-32,-90,-17,150,-30,-90,-90,-23,172,-28,-31,-38,-24,-25,-26,-27,183,]),'RBRACKET':([12,20,21,22,51,52,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,100,101,102,104,115,122,132,134,154,165,176,],[-68,-65,-66,-67,-69,-70,-60,-71,-72,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-62,115,-14,-15,-16,-61,-63,-64,143,-17,167,-90,181,]),'COMMA':([12,20,21,22,51,52,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,102,104,115,116,118,119,120,122,144,167,],[-68,-65,-66,-67,-69,-70,-60,-71,-72,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-62,123,-61,-63,-37,-34,-35,-36,-64,153,-38,]),'RBRACE':([15,57,58,59,60,61,62,63,65,66,105,106,107,113,133,137,151,157,164,168,177,178,180,182,184,185,187,],[-90,105,-88,-89,-79,-80,-81,-82,-84,-86,-78,-87,-83,-85,-12,-74,-11,-75,-73,-90,182,-33,-18,-29,-13,-74,-75,]),'COLON':([53,124,129,136,],[97,135,140,145,]),'EQUAL':([53,116,117,118,119,120,129,143,149,167,],[98,-37,131,-34,-35,-36,139,152,163,-38,]),'ELSE':([60,61,62,63,65,66,105,107,113,133,137,151,157,164,180,182,184,185,187,],[-79,-80,-81,-82,-84,-86,-78,-83,-85,-12,146,-11,-75,-73,-18,-29,-13,186,-75,]),'LOG':([73,],[114,]),'NUMBER_TYPE':([97,135,140,145,],[118,118,118,118,]),'STRING_TYPE':([97,135,140,145,],[119,119,119,119,]),'BOOLEAN_TYPE':([97,135,140,145,],[120,120,120,120,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'element':([0,1,],[2,26,]),'letAssignment':([0,1,15,57,127,146,168,172,178,183,186,],[3,3,60,60,60,60,60,60,60,60,60,]),'declaracion':([0,1,15,57,127,146,168,172,178,183,186,],[4,4,61,61,61,61,61,61,61,61,61,]),'function':([0,1,15,57,127,146,168,172,178,183,186,],[5,5,62,62,62,62,62,62,62,62,62,]),'controlEstructure':([0,1,15,57,127,146,168,172,178,183,186,],[6,6,65,65,65,65,65,65,65,65,65,]),'forEstructure':([0,1,15,57,127,146,168,172,178,183,186,],[7,7,66,66,66,66,66,66,66,66,66,]),'statement':([0,1,15,57,127,146,168,172,178,183,186,],[8,8,58,106,137,157,58,180,106,185,187,]),'expression':([0,1,14,15,18,19,23,24,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,54,57,67,68,98,123,127,128,130,131,139,146,147,160,161,163,165,168,169,172,178,183,186,],[9,9,56,64,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,102,64,108,110,121,102,64,138,102,142,148,64,158,173,174,175,102,64,179,64,64,64,64,]),'consolelog':([0,1,15,57,127,146,168,172,178,183,186,],[10,10,63,63,63,63,63,63,63,63,63,]),'instruction_list':([15,168,],[57,178,]),'empty':([15,54,68,103,130,147,153,165,168,],[59,101,112,126,101,162,126,101,59,]),'lista_expresiones_opt':([54,130,165,],[99,141,176,]),'lista_expresiones':([54,123,130,165,],[100,134,100,100,]),'for_init':([68,],[109,]),'type':([97,135,140,145,],[117,144,149,155,]),'parameters':([103,153,],[125,166,]),'for_update':([147,],[159,]),'body_function':([168,],[177,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program element','program',2,'p_program','parser.py',15),
  ('program -> element','program',1,'p_program','parser.py',16),
  ('element -> letAssignment','element',1,'p_element','parser.py',20),
  ('element -> declaracion','element',1,'p_element','parser.py',21),
  ('element -> function','element',1,'p_element','parser.py',22),
  ('element -> controlEstructure','element',1,'p_element','parser.py',23),
  ('element -> forEstructure','element',1,'p_element','parser.py',24),
  ('element -> statement','element',1,'p_element','parser.py',25),
  ('element -> expression SEMICOLON','element',2,'p_element','parser.py',26),
  ('element -> consolelog','element',1,'p_element','parser.py',27),
  ('letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON','letAssignment',7,'p_letAssignment','parser.py',32),
  ('letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON','letAssignment',5,'p_letAssignment_no_type','parser.py',36),
  ('declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON','declaracion',11,'p_declaracion','parser.py',41),
  ('lista_expresiones_opt -> lista_expresiones','lista_expresiones_opt',1,'p_lista_expresiones_opt','parser.py',45),
  ('lista_expresiones_opt -> empty','lista_expresiones_opt',1,'p_lista_expresiones_opt','parser.py',46),
  ('lista_expresiones -> expression','lista_expresiones',1,'p_lista_expresiones','parser.py',50),
  ('lista_expresiones -> expression COMMA lista_expresiones','lista_expresiones',3,'p_lista_expresiones','parser.py',51),
  ('forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement','forEstructure',9,'p_forEstructure','parser.py',56),
  ('for_init -> LET IDENTIFIER EQUAL expression','for_init',4,'p_for_init','parser.py',60),
  ('for_init -> LET IDENTIFIER COLON type EQUAL expression','for_init',6,'p_for_init','parser.py',61),
  ('for_init -> expression','for_init',1,'p_for_init','parser.py',62),
  ('for_init -> empty','for_init',1,'p_for_init','parser.py',63),
  ('for_update -> expression','for_update',1,'p_for_update','parser.py',68),
  ('for_update -> expression PLUSPLUS','for_update',2,'p_for_update','parser.py',69),
  ('for_update -> expression MINUSMINUS','for_update',2,'p_for_update','parser.py',70),
  ('for_update -> PLUSPLUS expression','for_update',2,'p_for_update','parser.py',71),
  ('for_update -> MINUSMINUS expression','for_update',2,'p_for_update','parser.py',72),
  ('for_update -> empty','for_update',1,'p_for_update','parser.py',73),
  ('function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE','function',10,'p_function','parser.py',78),
  ('parameters -> IDENTIFIER COLON type','parameters',3,'p_parameters','parser.py',82),
  ('parameters -> IDENTIFIER COLON type COMMA parameters','parameters',5,'p_parameters','parser.py',83),
  ('parameters -> empty','parameters',1,'p_parameters','parser.py',84),
  ('body_function -> instruction_list','body_function',1,'p_body_function','parser.py',88),
  ('type -> NUMBER_TYPE','type',1,'p_type','parser.py',93),
  ('type -> STRING_TYPE','type',1,'p_type','parser.py',94),
  ('type -> BOOLEAN_TYPE','type',1,'p_type','parser.py',95),
  ('type -> IDENTIFIER','type',1,'p_type','parser.py',96),
  ('type -> type LBRACKET RBRACKET','type',3,'p_type','parser.py',97),
  ('expression -> expression PLUS expression','expression',3,'p_expression','parser.py',102),
  ('expression -> expression MINUS expression','expression',3,'p_expression','parser.py',103),
  ('expression -> expression TIMES expression','expression',3,'p_expression','parser.py',104),
  ('expression -> expression DIV expression','expression',3,'p_expression','parser.py',105),
  ('expression -> expression MOD expression','expression',3,'p_expression','parser.py',106),
  ('expression -> expression PLUS_ASSIGN expression','expression',3,'p_expression','parser.py',107),
  ('expression -> expression MINUS_ASSIGN expression','expression',3,'p_expression','parser.py',108),
  ('expression -> expression MULT_ASSIGN expression','expression',3,'p_expression','parser.py',109),
  ('expression -> expression DIV_ASSIGN expression','expression',3,'p_expression','parser.py',110),
  ('expression -> expression MOD_ASSIGN expression','expression',3,'p_expression','parser.py',111),
  ('expression -> expression POT expression','expression',3,'p_expression','parser.py',112),
  ('expression -> expression AND expression','expression',3,'p_expression','parser.py',113),
  ('expression -> expression OR expression','expression',3,'p_expression','parser.py',114),
  ('expression -> expression EQ expression','expression',3,'p_expression','parser.py',115),
  ('expression -> expression NEQ expression','expression',3,'p_expression','parser.py',116),
  ('expression -> expression STRICT_EQ expression','expression',3,'p_expression','parser.py',117),
  ('expression -> expression STRICT_NEQ expression','expression',3,'p_expression','parser.py',118),
  ('expression -> expression LT expression','expression',3,'p_expression','parser.py',119),
  ('expression -> expression GT expression','expression',3,'p_expression','parser.py',120),
  ('expression -> expression LE expression','expression',3,'p_expression','parser.py',121),
  ('expression -> expression GE expression','expression',3,'p_expression','parser.py',122),
  ('expression -> NOT expression','expression',2,'p_expression','parser.py',123),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','parser.py',124),
  ('expression -> expression DOT IDENTIFIER','expression',3,'p_expression','parser.py',125),
  ('expression -> expression LBRACKET expression RBRACKET','expression',4,'p_expression','parser.py',126),
  ('expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN','expression',4,'p_expression','parser.py',127),
  ('expression -> NUMBER','expression',1,'p_expression','parser.py',128),
  ('expression -> FLOAT','expression',1,'p_expression','parser.py',129),
  ('expression -> STRING','expression',1,'p_expression','parser.py',130),
  ('expression -> IDENTIFIER','expression',1,'p_expression','parser.py',131),
  ('expression -> expression PLUSPLUS','expression',2,'p_expression_increment','parser.py',135),
  ('expression -> expression MINUSMINUS','expression',2,'p_expression_increment','parser.py',136),
  ('expression -> PLUSPLUS expression','expression',2,'p_expression_increment','parser.py',137),
  ('expression -> MINUSMINUS expression','expression',2,'p_expression_increment','parser.py',138),
  ('consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON','consolelog',7,'p_consolelog','parser.py',142),
  ('controlEstructure -> IF LPAREN expression RPAREN statement','controlEstructure',5,'p_controlEstructure','parser.py',147),
  ('controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement','controlEstructure',7,'p_controlEstructure','parser.py',148),
  ('controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement','controlEstructure',11,'p_controlEstructure','parser.py',149),
  ('controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement','controlEstructure',13,'p_controlEstructure','parser.py',150),
  ('statement -> LBRACE instruction_list RBRACE','statement',3,'p_statement','parser.py',155),
  ('statement -> letAssignment','statement',1,'p_statement','parser.py',156),
  ('statement -> declaracion','statement',1,'p_statement','parser.py',157),
  ('statement -> function','statement',1,'p_statement','parser.py',158),
  ('statement -> consolelog','statement',1,'p_statement','parser.py',159),
  ('statement -> expression SEMICOLON','statement',2,'p_statement','parser.py',160),
  ('statement -> controlEstructure','statement',1,'p_statement','parser.py',161),
  ('statement -> RETURN expression SEMICOLON','statement',3,'p_statement','parser.py',162),
  ('statement -> forEstructure','statement',1,'p_statement','parser.py',163),
  ('instruction_list -> instruction_list statement','instruction_list',2,'p_instruction_list','parser.py',167),
  ('instruction_list -> statement','instruction_list',1,'p_instruction_list','parser.py',168),
  ('instruction_list -> empty','instruction_list',1,'p_instruction_list','parser.py',169),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',174),
]
