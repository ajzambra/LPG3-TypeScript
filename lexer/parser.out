Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ANY
    AS
    AWAIT
    BIGINT_TYPE
    BREAK
    CATCH
    CONTINUE
    EXPORT
    FINALLY
    IMPORT
    NEW
    NULL_TYPE
    PRIVATE
    PROTECTED
    PUBLIC
    STATIC
    SUPER
    SYMBOL_TYPE
    THIS
    TRY
    TYPE
    UNDEFINED_TYPE

Grammar

Rule 0     S' -> program
Rule 1     program -> program element
Rule 2     program -> element
Rule 3     element -> letAssignment
Rule 4     element -> declaracion
Rule 5     element -> function
Rule 6     element -> arrow_function
Rule 7     element -> async_function
Rule 8     element -> constAssignment
Rule 9     element -> enum_definition
Rule 10    element -> controlEstructure
Rule 11    element -> forEstructure
Rule 12    element -> class_definition
Rule 13    element -> statement
Rule 14    element -> interface
Rule 15    element -> assignment
Rule 16    element -> expression SEMICOLON
Rule 17    element -> consolelog
Rule 18    assignment -> IDENTIFIER EQUAL expression SEMICOLON
Rule 19    letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON
Rule 20    letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON
Rule 21    declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
Rule 22    lista_expresiones_opt -> lista_expresiones
Rule 23    lista_expresiones_opt -> empty
Rule 24    lista_expresiones -> expression
Rule 25    lista_expresiones -> expression COMMA lista_expresiones
Rule 26    forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
Rule 27    forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement
Rule 28    for_init -> LET IDENTIFIER EQUAL expression
Rule 29    for_init -> LET IDENTIFIER COLON type EQUAL expression
Rule 30    for_init -> expression
Rule 31    for_init -> empty
Rule 32    for_update -> expression
Rule 33    for_update -> expression PLUSPLUS
Rule 34    for_update -> expression MINUSMINUS
Rule 35    for_update -> PLUSPLUS expression
Rule 36    for_update -> MINUSMINUS expression
Rule 37    for_update -> empty
Rule 38    function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
Rule 39    parameters -> IDENTIFIER COLON type
Rule 40    parameters -> IDENTIFIER COLON type COMMA parameters
Rule 41    parameters -> empty
Rule 42    body_function -> instruction_list
Rule 43    body_function -> empty
Rule 44    type -> LBRACKET type COMMA type RBRACKET
Rule 45    expression -> LBRACKET expression COMMA expression RBRACKET
Rule 46    type -> NUMBER_TYPE
Rule 47    type -> STRING_TYPE
Rule 48    type -> BOOLEAN_TYPE
Rule 49    type -> IDENTIFIER
Rule 50    type -> VOID
Rule 51    type -> type LBRACKET RBRACKET
Rule 52    expression -> expression PLUS expression
Rule 53    expression -> expression MINUS expression
Rule 54    expression -> expression TIMES expression
Rule 55    expression -> expression DIV expression
Rule 56    expression -> expression MOD expression
Rule 57    expression -> expression PLUS_ASSIGN expression
Rule 58    expression -> expression MINUS_ASSIGN expression
Rule 59    expression -> expression MULT_ASSIGN expression
Rule 60    expression -> expression DIV_ASSIGN expression
Rule 61    expression -> expression MOD_ASSIGN expression
Rule 62    expression -> expression POT expression
Rule 63    expression -> expression AND expression
Rule 64    expression -> expression OR expression
Rule 65    expression -> expression EQ expression
Rule 66    expression -> expression NEQ expression
Rule 67    expression -> expression STRICT_EQ expression
Rule 68    expression -> expression STRICT_NEQ expression
Rule 69    expression -> expression LT expression
Rule 70    expression -> expression GT expression
Rule 71    expression -> expression LE expression
Rule 72    expression -> expression GE expression
Rule 73    expression -> PROMPT LPAREN STRING RPAREN
Rule 74    expression -> NOT expression
Rule 75    expression -> LPAREN expression RPAREN
Rule 76    expression -> expression DOT IDENTIFIER
Rule 77    expression -> expression LBRACKET expression RBRACKET
Rule 78    expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN
Rule 79    expression -> NUMBER
Rule 80    expression -> FLOAT
Rule 81    expression -> STRING
Rule 82    expression -> IDENTIFIER
Rule 83    expression -> TRUE
Rule 84    expression -> FALSE
Rule 85    expression -> expression PLUSPLUS
Rule 86    expression -> expression MINUSMINUS
Rule 87    expression -> PLUSPLUS expression
Rule 88    expression -> MINUSMINUS expression
Rule 89    consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
Rule 90    controlEstructure -> IF LPAREN expression RPAREN statement
Rule 91    controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement
Rule 92    controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
Rule 93    controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
Rule 94    statement -> LBRACE instruction_list RBRACE
Rule 95    statement -> letAssignment
Rule 96    statement -> varAssignment
Rule 97    statement -> constAssignment
Rule 98    statement -> declaracion
Rule 99    statement -> function
Rule 100   statement -> arrow_function
Rule 101   statement -> async_function
Rule 102   statement -> consolelog
Rule 103   statement -> expression SEMICOLON
Rule 104   statement -> controlEstructure
Rule 105   statement -> RETURN expression SEMICOLON
Rule 106   statement -> forEstructure
Rule 107   statement -> RETURN SEMICOLON
Rule 108   statement -> class_definition
Rule 109   instruction_list -> instruction_list statement
Rule 110   instruction_list -> statement
Rule 111   instruction_list -> empty
Rule 112   empty -> <empty>
Rule 113   constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON
Rule 114   constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON
Rule 115   class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE
Rule 116   class_body -> class_body class_element
Rule 117   class_body -> class_element
Rule 118   class_body -> empty
Rule 119   class_element -> function
Rule 120   class_element -> letAssignment
Rule 121   class_element -> varAssignment
Rule 122   class_element -> constAssignment
Rule 123   controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE
Rule 124   case_block -> case_block case
Rule 125   case_block -> case
Rule 126   case_block -> empty
Rule 127   case -> CASE expression COLON instruction_list
Rule 128   case -> DEFAULT COLON instruction_list
Rule 129   enum_definition -> ENUM IDENTIFIER LBRACE enum_members RBRACE
Rule 130   enum_members -> IDENTIFIER
Rule 131   enum_members -> IDENTIFIER COMMA enum_members
Rule 132   async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
Rule 133   controlEstructure -> WHILE LPAREN expression RPAREN statement
Rule 134   varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
Rule 135   varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON
Rule 136   arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
Rule 137   interface -> INTERFACE IDENTIFIER LBRACE interface_body RBRACE
Rule 138   interface_body -> interface_body interface_property
Rule 139   interface_body -> interface_property
Rule 140   interface_body -> empty
Rule 141   interface_property -> IDENTIFIER COLON type SEMICOLON
Rule 142   expression -> LBRACE object_properties RBRACE
Rule 143   object_properties -> object_property
Rule 144   object_properties -> object_property COMMA object_properties
Rule 145   object_properties -> empty
Rule 146   object_property -> IDENTIFIER COLON expression

Terminals, with rules where they appear

AND                  : 63
ANY                  : 
ARROW                : 136
AS                   : 
ASYNC                : 132
AWAIT                : 
BIGINT_TYPE          : 
BOOLEAN_TYPE         : 48
BREAK                : 
CASE                 : 127
CATCH                : 
CLASS                : 115
COLON                : 19 21 29 38 39 40 113 127 128 132 134 141 146
COMMA                : 25 40 44 45 131 144
CONSOLE              : 89
CONST                : 27 113 114 136
CONTINUE             : 
DEFAULT              : 128
DIV                  : 55
DIV_ASSIGN           : 60
DOT                  : 76 89
ELSE                 : 91 92 93 93
ENUM                 : 129
EQ                   : 65
EQUAL                : 18 19 20 21 28 29 113 114 134 135 136
EXPORT               : 
FALSE                : 84
FINALLY              : 
FLOAT                : 80
FOR                  : 26 27
FUNCTION             : 38 132
GE                   : 72
GT                   : 70
IDENTIFIER           : 18 19 20 21 27 27 28 29 38 39 40 49 76 78 82 113 114 115 129 130 131 132 134 135 136 137 141 146
IF                   : 90 91 92 92 93 93
IMPORT               : 
INTERFACE            : 137
LBRACE               : 38 94 115 123 129 132 136 137 142
LBRACKET             : 21 21 44 45 51 77
LE                   : 71
LET                  : 19 20 21 28 29
LOG                  : 89
LPAREN               : 26 27 38 73 75 78 89 90 91 92 92 93 93 123 132 133 136
LT                   : 69
MINUS                : 53
MINUSMINUS           : 34 36 86 88
MINUS_ASSIGN         : 58
MOD                  : 56
MOD_ASSIGN           : 61
MULT_ASSIGN          : 59
NEQ                  : 66
NEW                  : 
NOT                  : 74
NULL_TYPE            : 
NUMBER               : 79
NUMBER_TYPE          : 46
OF                   : 27
OR                   : 64
PLUS                 : 52
PLUSPLUS             : 33 35 85 87
PLUS_ASSIGN          : 57
POT                  : 62
PRIVATE              : 
PROMPT               : 73
PROTECTED            : 
PUBLIC               : 
RBRACE               : 38 94 115 123 129 132 136 137 142
RBRACKET             : 21 21 44 45 51 77
RETURN               : 105 107
RPAREN               : 26 27 38 73 75 78 89 90 91 92 92 93 93 123 132 133 136
SEMICOLON            : 16 18 19 20 21 26 26 89 103 105 107 113 114 134 135 136 141
STATIC               : 
STRICT_EQ            : 67
STRICT_NEQ           : 68
STRING               : 73 81
STRING_TYPE          : 47
SUPER                : 
SWITCH               : 123
SYMBOL_TYPE          : 
THIS                 : 
TIMES                : 54
TRUE                 : 83
TRY                  : 
TYPE                 : 
UNDEFINED_TYPE       : 
VAR                  : 134 135
VOID                 : 50
WHILE                : 133
error                : 

Nonterminals, with rules where they appear

arrow_function       : 6 100
assignment           : 15
async_function       : 7 101
body_function        : 38 132 136
case                 : 124 125
case_block           : 123 124
class_body           : 115 116
class_definition     : 12 108
class_element        : 116 117
consolelog           : 17 102
constAssignment      : 8 97 122
controlEstructure    : 10 104
declaracion          : 4 98
element              : 1 2
empty                : 23 31 37 41 43 111 118 126 140 145
enum_definition      : 9
enum_members         : 129 131
expression           : 16 18 19 20 24 25 26 28 29 30 32 33 34 35 36 45 45 52 52 53 53 54 54 55 55 56 56 57 57 58 58 59 59 60 60 61 61 62 62 63 63 64 64 65 65 66 66 67 67 68 68 69 69 70 70 71 71 72 72 74 75 76 77 77 85 86 87 88 90 91 92 92 93 93 103 105 113 114 123 127 133 134 135 146
forEstructure        : 11 106
for_init             : 26
for_update           : 26
function             : 5 99 119
instruction_list     : 42 94 109 127 128
interface            : 14
interface_body       : 137 138
interface_property   : 138 139
letAssignment        : 3 95 120
lista_expresiones    : 22 25
lista_expresiones_opt : 21 78 89
object_properties    : 142 144
object_property      : 143 144
parameters           : 38 40 132 136
program              : 1 0
statement            : 13 26 27 90 91 91 92 92 93 93 93 109 110 133
type                 : 19 21 29 38 39 40 44 44 51 113 132 134 141
varAssignment        : 96 121

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program element
    (2) program -> . element
    (3) element -> . letAssignment
    (4) element -> . declaracion
    (5) element -> . function
    (6) element -> . arrow_function
    (7) element -> . async_function
    (8) element -> . constAssignment
    (9) element -> . enum_definition
    (10) element -> . controlEstructure
    (11) element -> . forEstructure
    (12) element -> . class_definition
    (13) element -> . statement
    (14) element -> . interface
    (15) element -> . assignment
    (16) element -> . expression SEMICOLON
    (17) element -> . consolelog
    (19) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (20) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (21) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (38) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (136) arrow_function -> . CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (132) async_function -> . ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (113) constAssignment -> . CONST IDENTIFIER COLON type EQUAL expression SEMICOLON
    (114) constAssignment -> . CONST IDENTIFIER EQUAL expression SEMICOLON
    (129) enum_definition -> . ENUM IDENTIFIER LBRACE enum_members RBRACE
    (90) controlEstructure -> . IF LPAREN expression RPAREN statement
    (91) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (92) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (93) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (123) controlEstructure -> . SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE
    (133) controlEstructure -> . WHILE LPAREN expression RPAREN statement
    (26) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (27) forEstructure -> . FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement
    (115) class_definition -> . CLASS IDENTIFIER LBRACE class_body RBRACE
    (94) statement -> . LBRACE instruction_list RBRACE
    (95) statement -> . letAssignment
    (96) statement -> . varAssignment
    (97) statement -> . constAssignment
    (98) statement -> . declaracion
    (99) statement -> . function
    (100) statement -> . arrow_function
    (101) statement -> . async_function
    (102) statement -> . consolelog
    (103) statement -> . expression SEMICOLON
    (104) statement -> . controlEstructure
    (105) statement -> . RETURN expression SEMICOLON
    (106) statement -> . forEstructure
    (107) statement -> . RETURN SEMICOLON
    (108) statement -> . class_definition
    (137) interface -> . INTERFACE IDENTIFIER LBRACE interface_body RBRACE
    (18) assignment -> . IDENTIFIER EQUAL expression SEMICOLON
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE
    (89) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (134) varAssignment -> . VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
    (135) varAssignment -> . VAR IDENTIFIER EQUAL expression SEMICOLON

    LET             shift and go to state 18
    FUNCTION        shift and go to state 21
    CONST           shift and go to state 24
    ASYNC           shift and go to state 25
    ENUM            shift and go to state 26
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    CLASS           shift and go to state 31
    LBRACE          shift and go to state 23
    RETURN          shift and go to state 33
    INTERFACE       shift and go to state 34
    IDENTIFIER      shift and go to state 19
    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    CONSOLE         shift and go to state 44
    VAR             shift and go to state 45

    program                        shift and go to state 1
    element                        shift and go to state 2
    letAssignment                  shift and go to state 3
    declaracion                    shift and go to state 4
    function                       shift and go to state 5
    arrow_function                 shift and go to state 6
    async_function                 shift and go to state 7
    constAssignment                shift and go to state 8
    enum_definition                shift and go to state 9
    controlEstructure              shift and go to state 10
    forEstructure                  shift and go to state 11
    class_definition               shift and go to state 12
    statement                      shift and go to state 13
    interface                      shift and go to state 14
    assignment                     shift and go to state 15
    expression                     shift and go to state 16
    consolelog                     shift and go to state 17
    varAssignment                  shift and go to state 32

state 1

    (0) S' -> program .
    (1) program -> program . element
    (3) element -> . letAssignment
    (4) element -> . declaracion
    (5) element -> . function
    (6) element -> . arrow_function
    (7) element -> . async_function
    (8) element -> . constAssignment
    (9) element -> . enum_definition
    (10) element -> . controlEstructure
    (11) element -> . forEstructure
    (12) element -> . class_definition
    (13) element -> . statement
    (14) element -> . interface
    (15) element -> . assignment
    (16) element -> . expression SEMICOLON
    (17) element -> . consolelog
    (19) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (20) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (21) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (38) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (136) arrow_function -> . CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (132) async_function -> . ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (113) constAssignment -> . CONST IDENTIFIER COLON type EQUAL expression SEMICOLON
    (114) constAssignment -> . CONST IDENTIFIER EQUAL expression SEMICOLON
    (129) enum_definition -> . ENUM IDENTIFIER LBRACE enum_members RBRACE
    (90) controlEstructure -> . IF LPAREN expression RPAREN statement
    (91) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (92) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (93) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (123) controlEstructure -> . SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE
    (133) controlEstructure -> . WHILE LPAREN expression RPAREN statement
    (26) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (27) forEstructure -> . FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement
    (115) class_definition -> . CLASS IDENTIFIER LBRACE class_body RBRACE
    (94) statement -> . LBRACE instruction_list RBRACE
    (95) statement -> . letAssignment
    (96) statement -> . varAssignment
    (97) statement -> . constAssignment
    (98) statement -> . declaracion
    (99) statement -> . function
    (100) statement -> . arrow_function
    (101) statement -> . async_function
    (102) statement -> . consolelog
    (103) statement -> . expression SEMICOLON
    (104) statement -> . controlEstructure
    (105) statement -> . RETURN expression SEMICOLON
    (106) statement -> . forEstructure
    (107) statement -> . RETURN SEMICOLON
    (108) statement -> . class_definition
    (137) interface -> . INTERFACE IDENTIFIER LBRACE interface_body RBRACE
    (18) assignment -> . IDENTIFIER EQUAL expression SEMICOLON
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE
    (89) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (134) varAssignment -> . VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
    (135) varAssignment -> . VAR IDENTIFIER EQUAL expression SEMICOLON

    LET             shift and go to state 18
    FUNCTION        shift and go to state 21
    CONST           shift and go to state 24
    ASYNC           shift and go to state 25
    ENUM            shift and go to state 26
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    CLASS           shift and go to state 31
    LBRACE          shift and go to state 23
    RETURN          shift and go to state 33
    INTERFACE       shift and go to state 34
    IDENTIFIER      shift and go to state 19
    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    CONSOLE         shift and go to state 44
    VAR             shift and go to state 45

    element                        shift and go to state 46
    letAssignment                  shift and go to state 3
    declaracion                    shift and go to state 4
    function                       shift and go to state 5
    arrow_function                 shift and go to state 6
    async_function                 shift and go to state 7
    constAssignment                shift and go to state 8
    enum_definition                shift and go to state 9
    controlEstructure              shift and go to state 10
    forEstructure                  shift and go to state 11
    class_definition               shift and go to state 12
    statement                      shift and go to state 13
    interface                      shift and go to state 14
    assignment                     shift and go to state 15
    expression                     shift and go to state 16
    consolelog                     shift and go to state 17
    varAssignment                  shift and go to state 32

state 2

    (2) program -> element .

    LET             reduce using rule 2 (program -> element .)
    FUNCTION        reduce using rule 2 (program -> element .)
    CONST           reduce using rule 2 (program -> element .)
    ASYNC           reduce using rule 2 (program -> element .)
    ENUM            reduce using rule 2 (program -> element .)
    IF              reduce using rule 2 (program -> element .)
    SWITCH          reduce using rule 2 (program -> element .)
    WHILE           reduce using rule 2 (program -> element .)
    FOR             reduce using rule 2 (program -> element .)
    CLASS           reduce using rule 2 (program -> element .)
    LBRACE          reduce using rule 2 (program -> element .)
    RETURN          reduce using rule 2 (program -> element .)
    INTERFACE       reduce using rule 2 (program -> element .)
    IDENTIFIER      reduce using rule 2 (program -> element .)
    LBRACKET        reduce using rule 2 (program -> element .)
    PROMPT          reduce using rule 2 (program -> element .)
    NOT             reduce using rule 2 (program -> element .)
    LPAREN          reduce using rule 2 (program -> element .)
    NUMBER          reduce using rule 2 (program -> element .)
    FLOAT           reduce using rule 2 (program -> element .)
    STRING          reduce using rule 2 (program -> element .)
    TRUE            reduce using rule 2 (program -> element .)
    FALSE           reduce using rule 2 (program -> element .)
    PLUSPLUS        reduce using rule 2 (program -> element .)
    MINUSMINUS      reduce using rule 2 (program -> element .)
    CONSOLE         reduce using rule 2 (program -> element .)
    VAR             reduce using rule 2 (program -> element .)
    $end            reduce using rule 2 (program -> element .)


state 3

    (3) element -> letAssignment .
    (95) statement -> letAssignment .

  ! reduce/reduce conflict for LET resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for CONST resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for ASYNC resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for ENUM resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for IF resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for SWITCH resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for WHILE resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for FOR resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for CLASS resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for LBRACE resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for RETURN resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for PROMPT resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for NOT resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for LPAREN resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for NUMBER resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for FLOAT resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for STRING resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for TRUE resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for FALSE resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for PLUSPLUS resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for MINUSMINUS resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for VAR resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for $end resolved using rule 3 (element -> letAssignment .)
    LET             reduce using rule 3 (element -> letAssignment .)
    FUNCTION        reduce using rule 3 (element -> letAssignment .)
    CONST           reduce using rule 3 (element -> letAssignment .)
    ASYNC           reduce using rule 3 (element -> letAssignment .)
    ENUM            reduce using rule 3 (element -> letAssignment .)
    IF              reduce using rule 3 (element -> letAssignment .)
    SWITCH          reduce using rule 3 (element -> letAssignment .)
    WHILE           reduce using rule 3 (element -> letAssignment .)
    FOR             reduce using rule 3 (element -> letAssignment .)
    CLASS           reduce using rule 3 (element -> letAssignment .)
    LBRACE          reduce using rule 3 (element -> letAssignment .)
    RETURN          reduce using rule 3 (element -> letAssignment .)
    INTERFACE       reduce using rule 3 (element -> letAssignment .)
    IDENTIFIER      reduce using rule 3 (element -> letAssignment .)
    LBRACKET        reduce using rule 3 (element -> letAssignment .)
    PROMPT          reduce using rule 3 (element -> letAssignment .)
    NOT             reduce using rule 3 (element -> letAssignment .)
    LPAREN          reduce using rule 3 (element -> letAssignment .)
    NUMBER          reduce using rule 3 (element -> letAssignment .)
    FLOAT           reduce using rule 3 (element -> letAssignment .)
    STRING          reduce using rule 3 (element -> letAssignment .)
    TRUE            reduce using rule 3 (element -> letAssignment .)
    FALSE           reduce using rule 3 (element -> letAssignment .)
    PLUSPLUS        reduce using rule 3 (element -> letAssignment .)
    MINUSMINUS      reduce using rule 3 (element -> letAssignment .)
    CONSOLE         reduce using rule 3 (element -> letAssignment .)
    VAR             reduce using rule 3 (element -> letAssignment .)
    $end            reduce using rule 3 (element -> letAssignment .)

  ! LET             [ reduce using rule 95 (statement -> letAssignment .) ]
  ! FUNCTION        [ reduce using rule 95 (statement -> letAssignment .) ]
  ! CONST           [ reduce using rule 95 (statement -> letAssignment .) ]
  ! ASYNC           [ reduce using rule 95 (statement -> letAssignment .) ]
  ! ENUM            [ reduce using rule 95 (statement -> letAssignment .) ]
  ! IF              [ reduce using rule 95 (statement -> letAssignment .) ]
  ! SWITCH          [ reduce using rule 95 (statement -> letAssignment .) ]
  ! WHILE           [ reduce using rule 95 (statement -> letAssignment .) ]
  ! FOR             [ reduce using rule 95 (statement -> letAssignment .) ]
  ! CLASS           [ reduce using rule 95 (statement -> letAssignment .) ]
  ! LBRACE          [ reduce using rule 95 (statement -> letAssignment .) ]
  ! RETURN          [ reduce using rule 95 (statement -> letAssignment .) ]
  ! INTERFACE       [ reduce using rule 95 (statement -> letAssignment .) ]
  ! IDENTIFIER      [ reduce using rule 95 (statement -> letAssignment .) ]
  ! LBRACKET        [ reduce using rule 95 (statement -> letAssignment .) ]
  ! PROMPT          [ reduce using rule 95 (statement -> letAssignment .) ]
  ! NOT             [ reduce using rule 95 (statement -> letAssignment .) ]
  ! LPAREN          [ reduce using rule 95 (statement -> letAssignment .) ]
  ! NUMBER          [ reduce using rule 95 (statement -> letAssignment .) ]
  ! FLOAT           [ reduce using rule 95 (statement -> letAssignment .) ]
  ! STRING          [ reduce using rule 95 (statement -> letAssignment .) ]
  ! TRUE            [ reduce using rule 95 (statement -> letAssignment .) ]
  ! FALSE           [ reduce using rule 95 (statement -> letAssignment .) ]
  ! PLUSPLUS        [ reduce using rule 95 (statement -> letAssignment .) ]
  ! MINUSMINUS      [ reduce using rule 95 (statement -> letAssignment .) ]
  ! CONSOLE         [ reduce using rule 95 (statement -> letAssignment .) ]
  ! VAR             [ reduce using rule 95 (statement -> letAssignment .) ]
  ! $end            [ reduce using rule 95 (statement -> letAssignment .) ]


state 4

    (4) element -> declaracion .
    (98) statement -> declaracion .

  ! reduce/reduce conflict for LET resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for CONST resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for ASYNC resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for ENUM resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for IF resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for SWITCH resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for WHILE resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for FOR resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for CLASS resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for LBRACE resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for RETURN resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for PROMPT resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for NOT resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for LPAREN resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for NUMBER resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for FLOAT resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for STRING resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for TRUE resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for FALSE resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for PLUSPLUS resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for MINUSMINUS resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for VAR resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for $end resolved using rule 4 (element -> declaracion .)
    LET             reduce using rule 4 (element -> declaracion .)
    FUNCTION        reduce using rule 4 (element -> declaracion .)
    CONST           reduce using rule 4 (element -> declaracion .)
    ASYNC           reduce using rule 4 (element -> declaracion .)
    ENUM            reduce using rule 4 (element -> declaracion .)
    IF              reduce using rule 4 (element -> declaracion .)
    SWITCH          reduce using rule 4 (element -> declaracion .)
    WHILE           reduce using rule 4 (element -> declaracion .)
    FOR             reduce using rule 4 (element -> declaracion .)
    CLASS           reduce using rule 4 (element -> declaracion .)
    LBRACE          reduce using rule 4 (element -> declaracion .)
    RETURN          reduce using rule 4 (element -> declaracion .)
    INTERFACE       reduce using rule 4 (element -> declaracion .)
    IDENTIFIER      reduce using rule 4 (element -> declaracion .)
    LBRACKET        reduce using rule 4 (element -> declaracion .)
    PROMPT          reduce using rule 4 (element -> declaracion .)
    NOT             reduce using rule 4 (element -> declaracion .)
    LPAREN          reduce using rule 4 (element -> declaracion .)
    NUMBER          reduce using rule 4 (element -> declaracion .)
    FLOAT           reduce using rule 4 (element -> declaracion .)
    STRING          reduce using rule 4 (element -> declaracion .)
    TRUE            reduce using rule 4 (element -> declaracion .)
    FALSE           reduce using rule 4 (element -> declaracion .)
    PLUSPLUS        reduce using rule 4 (element -> declaracion .)
    MINUSMINUS      reduce using rule 4 (element -> declaracion .)
    CONSOLE         reduce using rule 4 (element -> declaracion .)
    VAR             reduce using rule 4 (element -> declaracion .)
    $end            reduce using rule 4 (element -> declaracion .)

  ! LET             [ reduce using rule 98 (statement -> declaracion .) ]
  ! FUNCTION        [ reduce using rule 98 (statement -> declaracion .) ]
  ! CONST           [ reduce using rule 98 (statement -> declaracion .) ]
  ! ASYNC           [ reduce using rule 98 (statement -> declaracion .) ]
  ! ENUM            [ reduce using rule 98 (statement -> declaracion .) ]
  ! IF              [ reduce using rule 98 (statement -> declaracion .) ]
  ! SWITCH          [ reduce using rule 98 (statement -> declaracion .) ]
  ! WHILE           [ reduce using rule 98 (statement -> declaracion .) ]
  ! FOR             [ reduce using rule 98 (statement -> declaracion .) ]
  ! CLASS           [ reduce using rule 98 (statement -> declaracion .) ]
  ! LBRACE          [ reduce using rule 98 (statement -> declaracion .) ]
  ! RETURN          [ reduce using rule 98 (statement -> declaracion .) ]
  ! INTERFACE       [ reduce using rule 98 (statement -> declaracion .) ]
  ! IDENTIFIER      [ reduce using rule 98 (statement -> declaracion .) ]
  ! LBRACKET        [ reduce using rule 98 (statement -> declaracion .) ]
  ! PROMPT          [ reduce using rule 98 (statement -> declaracion .) ]
  ! NOT             [ reduce using rule 98 (statement -> declaracion .) ]
  ! LPAREN          [ reduce using rule 98 (statement -> declaracion .) ]
  ! NUMBER          [ reduce using rule 98 (statement -> declaracion .) ]
  ! FLOAT           [ reduce using rule 98 (statement -> declaracion .) ]
  ! STRING          [ reduce using rule 98 (statement -> declaracion .) ]
  ! TRUE            [ reduce using rule 98 (statement -> declaracion .) ]
  ! FALSE           [ reduce using rule 98 (statement -> declaracion .) ]
  ! PLUSPLUS        [ reduce using rule 98 (statement -> declaracion .) ]
  ! MINUSMINUS      [ reduce using rule 98 (statement -> declaracion .) ]
  ! CONSOLE         [ reduce using rule 98 (statement -> declaracion .) ]
  ! VAR             [ reduce using rule 98 (statement -> declaracion .) ]
  ! $end            [ reduce using rule 98 (statement -> declaracion .) ]


state 5

    (5) element -> function .
    (99) statement -> function .

  ! reduce/reduce conflict for LET resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for CONST resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for ASYNC resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for ENUM resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for IF resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for SWITCH resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for WHILE resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for FOR resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for CLASS resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for LBRACE resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for RETURN resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for PROMPT resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for NOT resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for LPAREN resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for NUMBER resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for FLOAT resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for STRING resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for TRUE resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for FALSE resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for PLUSPLUS resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for MINUSMINUS resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for VAR resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for $end resolved using rule 5 (element -> function .)
    LET             reduce using rule 5 (element -> function .)
    FUNCTION        reduce using rule 5 (element -> function .)
    CONST           reduce using rule 5 (element -> function .)
    ASYNC           reduce using rule 5 (element -> function .)
    ENUM            reduce using rule 5 (element -> function .)
    IF              reduce using rule 5 (element -> function .)
    SWITCH          reduce using rule 5 (element -> function .)
    WHILE           reduce using rule 5 (element -> function .)
    FOR             reduce using rule 5 (element -> function .)
    CLASS           reduce using rule 5 (element -> function .)
    LBRACE          reduce using rule 5 (element -> function .)
    RETURN          reduce using rule 5 (element -> function .)
    INTERFACE       reduce using rule 5 (element -> function .)
    IDENTIFIER      reduce using rule 5 (element -> function .)
    LBRACKET        reduce using rule 5 (element -> function .)
    PROMPT          reduce using rule 5 (element -> function .)
    NOT             reduce using rule 5 (element -> function .)
    LPAREN          reduce using rule 5 (element -> function .)
    NUMBER          reduce using rule 5 (element -> function .)
    FLOAT           reduce using rule 5 (element -> function .)
    STRING          reduce using rule 5 (element -> function .)
    TRUE            reduce using rule 5 (element -> function .)
    FALSE           reduce using rule 5 (element -> function .)
    PLUSPLUS        reduce using rule 5 (element -> function .)
    MINUSMINUS      reduce using rule 5 (element -> function .)
    CONSOLE         reduce using rule 5 (element -> function .)
    VAR             reduce using rule 5 (element -> function .)
    $end            reduce using rule 5 (element -> function .)

  ! LET             [ reduce using rule 99 (statement -> function .) ]
  ! FUNCTION        [ reduce using rule 99 (statement -> function .) ]
  ! CONST           [ reduce using rule 99 (statement -> function .) ]
  ! ASYNC           [ reduce using rule 99 (statement -> function .) ]
  ! ENUM            [ reduce using rule 99 (statement -> function .) ]
  ! IF              [ reduce using rule 99 (statement -> function .) ]
  ! SWITCH          [ reduce using rule 99 (statement -> function .) ]
  ! WHILE           [ reduce using rule 99 (statement -> function .) ]
  ! FOR             [ reduce using rule 99 (statement -> function .) ]
  ! CLASS           [ reduce using rule 99 (statement -> function .) ]
  ! LBRACE          [ reduce using rule 99 (statement -> function .) ]
  ! RETURN          [ reduce using rule 99 (statement -> function .) ]
  ! INTERFACE       [ reduce using rule 99 (statement -> function .) ]
  ! IDENTIFIER      [ reduce using rule 99 (statement -> function .) ]
  ! LBRACKET        [ reduce using rule 99 (statement -> function .) ]
  ! PROMPT          [ reduce using rule 99 (statement -> function .) ]
  ! NOT             [ reduce using rule 99 (statement -> function .) ]
  ! LPAREN          [ reduce using rule 99 (statement -> function .) ]
  ! NUMBER          [ reduce using rule 99 (statement -> function .) ]
  ! FLOAT           [ reduce using rule 99 (statement -> function .) ]
  ! STRING          [ reduce using rule 99 (statement -> function .) ]
  ! TRUE            [ reduce using rule 99 (statement -> function .) ]
  ! FALSE           [ reduce using rule 99 (statement -> function .) ]
  ! PLUSPLUS        [ reduce using rule 99 (statement -> function .) ]
  ! MINUSMINUS      [ reduce using rule 99 (statement -> function .) ]
  ! CONSOLE         [ reduce using rule 99 (statement -> function .) ]
  ! VAR             [ reduce using rule 99 (statement -> function .) ]
  ! $end            [ reduce using rule 99 (statement -> function .) ]


state 6

    (6) element -> arrow_function .
    (100) statement -> arrow_function .

  ! reduce/reduce conflict for LET resolved using rule 6 (element -> arrow_function .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 6 (element -> arrow_function .)
  ! reduce/reduce conflict for CONST resolved using rule 6 (element -> arrow_function .)
  ! reduce/reduce conflict for ASYNC resolved using rule 6 (element -> arrow_function .)
  ! reduce/reduce conflict for ENUM resolved using rule 6 (element -> arrow_function .)
  ! reduce/reduce conflict for IF resolved using rule 6 (element -> arrow_function .)
  ! reduce/reduce conflict for SWITCH resolved using rule 6 (element -> arrow_function .)
  ! reduce/reduce conflict for WHILE resolved using rule 6 (element -> arrow_function .)
  ! reduce/reduce conflict for FOR resolved using rule 6 (element -> arrow_function .)
  ! reduce/reduce conflict for CLASS resolved using rule 6 (element -> arrow_function .)
  ! reduce/reduce conflict for LBRACE resolved using rule 6 (element -> arrow_function .)
  ! reduce/reduce conflict for RETURN resolved using rule 6 (element -> arrow_function .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 6 (element -> arrow_function .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 6 (element -> arrow_function .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 6 (element -> arrow_function .)
  ! reduce/reduce conflict for PROMPT resolved using rule 6 (element -> arrow_function .)
  ! reduce/reduce conflict for NOT resolved using rule 6 (element -> arrow_function .)
  ! reduce/reduce conflict for LPAREN resolved using rule 6 (element -> arrow_function .)
  ! reduce/reduce conflict for NUMBER resolved using rule 6 (element -> arrow_function .)
  ! reduce/reduce conflict for FLOAT resolved using rule 6 (element -> arrow_function .)
  ! reduce/reduce conflict for STRING resolved using rule 6 (element -> arrow_function .)
  ! reduce/reduce conflict for TRUE resolved using rule 6 (element -> arrow_function .)
  ! reduce/reduce conflict for FALSE resolved using rule 6 (element -> arrow_function .)
  ! reduce/reduce conflict for PLUSPLUS resolved using rule 6 (element -> arrow_function .)
  ! reduce/reduce conflict for MINUSMINUS resolved using rule 6 (element -> arrow_function .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 6 (element -> arrow_function .)
  ! reduce/reduce conflict for VAR resolved using rule 6 (element -> arrow_function .)
  ! reduce/reduce conflict for $end resolved using rule 6 (element -> arrow_function .)
    LET             reduce using rule 6 (element -> arrow_function .)
    FUNCTION        reduce using rule 6 (element -> arrow_function .)
    CONST           reduce using rule 6 (element -> arrow_function .)
    ASYNC           reduce using rule 6 (element -> arrow_function .)
    ENUM            reduce using rule 6 (element -> arrow_function .)
    IF              reduce using rule 6 (element -> arrow_function .)
    SWITCH          reduce using rule 6 (element -> arrow_function .)
    WHILE           reduce using rule 6 (element -> arrow_function .)
    FOR             reduce using rule 6 (element -> arrow_function .)
    CLASS           reduce using rule 6 (element -> arrow_function .)
    LBRACE          reduce using rule 6 (element -> arrow_function .)
    RETURN          reduce using rule 6 (element -> arrow_function .)
    INTERFACE       reduce using rule 6 (element -> arrow_function .)
    IDENTIFIER      reduce using rule 6 (element -> arrow_function .)
    LBRACKET        reduce using rule 6 (element -> arrow_function .)
    PROMPT          reduce using rule 6 (element -> arrow_function .)
    NOT             reduce using rule 6 (element -> arrow_function .)
    LPAREN          reduce using rule 6 (element -> arrow_function .)
    NUMBER          reduce using rule 6 (element -> arrow_function .)
    FLOAT           reduce using rule 6 (element -> arrow_function .)
    STRING          reduce using rule 6 (element -> arrow_function .)
    TRUE            reduce using rule 6 (element -> arrow_function .)
    FALSE           reduce using rule 6 (element -> arrow_function .)
    PLUSPLUS        reduce using rule 6 (element -> arrow_function .)
    MINUSMINUS      reduce using rule 6 (element -> arrow_function .)
    CONSOLE         reduce using rule 6 (element -> arrow_function .)
    VAR             reduce using rule 6 (element -> arrow_function .)
    $end            reduce using rule 6 (element -> arrow_function .)

  ! LET             [ reduce using rule 100 (statement -> arrow_function .) ]
  ! FUNCTION        [ reduce using rule 100 (statement -> arrow_function .) ]
  ! CONST           [ reduce using rule 100 (statement -> arrow_function .) ]
  ! ASYNC           [ reduce using rule 100 (statement -> arrow_function .) ]
  ! ENUM            [ reduce using rule 100 (statement -> arrow_function .) ]
  ! IF              [ reduce using rule 100 (statement -> arrow_function .) ]
  ! SWITCH          [ reduce using rule 100 (statement -> arrow_function .) ]
  ! WHILE           [ reduce using rule 100 (statement -> arrow_function .) ]
  ! FOR             [ reduce using rule 100 (statement -> arrow_function .) ]
  ! CLASS           [ reduce using rule 100 (statement -> arrow_function .) ]
  ! LBRACE          [ reduce using rule 100 (statement -> arrow_function .) ]
  ! RETURN          [ reduce using rule 100 (statement -> arrow_function .) ]
  ! INTERFACE       [ reduce using rule 100 (statement -> arrow_function .) ]
  ! IDENTIFIER      [ reduce using rule 100 (statement -> arrow_function .) ]
  ! LBRACKET        [ reduce using rule 100 (statement -> arrow_function .) ]
  ! PROMPT          [ reduce using rule 100 (statement -> arrow_function .) ]
  ! NOT             [ reduce using rule 100 (statement -> arrow_function .) ]
  ! LPAREN          [ reduce using rule 100 (statement -> arrow_function .) ]
  ! NUMBER          [ reduce using rule 100 (statement -> arrow_function .) ]
  ! FLOAT           [ reduce using rule 100 (statement -> arrow_function .) ]
  ! STRING          [ reduce using rule 100 (statement -> arrow_function .) ]
  ! TRUE            [ reduce using rule 100 (statement -> arrow_function .) ]
  ! FALSE           [ reduce using rule 100 (statement -> arrow_function .) ]
  ! PLUSPLUS        [ reduce using rule 100 (statement -> arrow_function .) ]
  ! MINUSMINUS      [ reduce using rule 100 (statement -> arrow_function .) ]
  ! CONSOLE         [ reduce using rule 100 (statement -> arrow_function .) ]
  ! VAR             [ reduce using rule 100 (statement -> arrow_function .) ]
  ! $end            [ reduce using rule 100 (statement -> arrow_function .) ]


state 7

    (7) element -> async_function .
    (101) statement -> async_function .

  ! reduce/reduce conflict for LET resolved using rule 7 (element -> async_function .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 7 (element -> async_function .)
  ! reduce/reduce conflict for CONST resolved using rule 7 (element -> async_function .)
  ! reduce/reduce conflict for ASYNC resolved using rule 7 (element -> async_function .)
  ! reduce/reduce conflict for ENUM resolved using rule 7 (element -> async_function .)
  ! reduce/reduce conflict for IF resolved using rule 7 (element -> async_function .)
  ! reduce/reduce conflict for SWITCH resolved using rule 7 (element -> async_function .)
  ! reduce/reduce conflict for WHILE resolved using rule 7 (element -> async_function .)
  ! reduce/reduce conflict for FOR resolved using rule 7 (element -> async_function .)
  ! reduce/reduce conflict for CLASS resolved using rule 7 (element -> async_function .)
  ! reduce/reduce conflict for LBRACE resolved using rule 7 (element -> async_function .)
  ! reduce/reduce conflict for RETURN resolved using rule 7 (element -> async_function .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 7 (element -> async_function .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 7 (element -> async_function .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 7 (element -> async_function .)
  ! reduce/reduce conflict for PROMPT resolved using rule 7 (element -> async_function .)
  ! reduce/reduce conflict for NOT resolved using rule 7 (element -> async_function .)
  ! reduce/reduce conflict for LPAREN resolved using rule 7 (element -> async_function .)
  ! reduce/reduce conflict for NUMBER resolved using rule 7 (element -> async_function .)
  ! reduce/reduce conflict for FLOAT resolved using rule 7 (element -> async_function .)
  ! reduce/reduce conflict for STRING resolved using rule 7 (element -> async_function .)
  ! reduce/reduce conflict for TRUE resolved using rule 7 (element -> async_function .)
  ! reduce/reduce conflict for FALSE resolved using rule 7 (element -> async_function .)
  ! reduce/reduce conflict for PLUSPLUS resolved using rule 7 (element -> async_function .)
  ! reduce/reduce conflict for MINUSMINUS resolved using rule 7 (element -> async_function .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 7 (element -> async_function .)
  ! reduce/reduce conflict for VAR resolved using rule 7 (element -> async_function .)
  ! reduce/reduce conflict for $end resolved using rule 7 (element -> async_function .)
    LET             reduce using rule 7 (element -> async_function .)
    FUNCTION        reduce using rule 7 (element -> async_function .)
    CONST           reduce using rule 7 (element -> async_function .)
    ASYNC           reduce using rule 7 (element -> async_function .)
    ENUM            reduce using rule 7 (element -> async_function .)
    IF              reduce using rule 7 (element -> async_function .)
    SWITCH          reduce using rule 7 (element -> async_function .)
    WHILE           reduce using rule 7 (element -> async_function .)
    FOR             reduce using rule 7 (element -> async_function .)
    CLASS           reduce using rule 7 (element -> async_function .)
    LBRACE          reduce using rule 7 (element -> async_function .)
    RETURN          reduce using rule 7 (element -> async_function .)
    INTERFACE       reduce using rule 7 (element -> async_function .)
    IDENTIFIER      reduce using rule 7 (element -> async_function .)
    LBRACKET        reduce using rule 7 (element -> async_function .)
    PROMPT          reduce using rule 7 (element -> async_function .)
    NOT             reduce using rule 7 (element -> async_function .)
    LPAREN          reduce using rule 7 (element -> async_function .)
    NUMBER          reduce using rule 7 (element -> async_function .)
    FLOAT           reduce using rule 7 (element -> async_function .)
    STRING          reduce using rule 7 (element -> async_function .)
    TRUE            reduce using rule 7 (element -> async_function .)
    FALSE           reduce using rule 7 (element -> async_function .)
    PLUSPLUS        reduce using rule 7 (element -> async_function .)
    MINUSMINUS      reduce using rule 7 (element -> async_function .)
    CONSOLE         reduce using rule 7 (element -> async_function .)
    VAR             reduce using rule 7 (element -> async_function .)
    $end            reduce using rule 7 (element -> async_function .)

  ! LET             [ reduce using rule 101 (statement -> async_function .) ]
  ! FUNCTION        [ reduce using rule 101 (statement -> async_function .) ]
  ! CONST           [ reduce using rule 101 (statement -> async_function .) ]
  ! ASYNC           [ reduce using rule 101 (statement -> async_function .) ]
  ! ENUM            [ reduce using rule 101 (statement -> async_function .) ]
  ! IF              [ reduce using rule 101 (statement -> async_function .) ]
  ! SWITCH          [ reduce using rule 101 (statement -> async_function .) ]
  ! WHILE           [ reduce using rule 101 (statement -> async_function .) ]
  ! FOR             [ reduce using rule 101 (statement -> async_function .) ]
  ! CLASS           [ reduce using rule 101 (statement -> async_function .) ]
  ! LBRACE          [ reduce using rule 101 (statement -> async_function .) ]
  ! RETURN          [ reduce using rule 101 (statement -> async_function .) ]
  ! INTERFACE       [ reduce using rule 101 (statement -> async_function .) ]
  ! IDENTIFIER      [ reduce using rule 101 (statement -> async_function .) ]
  ! LBRACKET        [ reduce using rule 101 (statement -> async_function .) ]
  ! PROMPT          [ reduce using rule 101 (statement -> async_function .) ]
  ! NOT             [ reduce using rule 101 (statement -> async_function .) ]
  ! LPAREN          [ reduce using rule 101 (statement -> async_function .) ]
  ! NUMBER          [ reduce using rule 101 (statement -> async_function .) ]
  ! FLOAT           [ reduce using rule 101 (statement -> async_function .) ]
  ! STRING          [ reduce using rule 101 (statement -> async_function .) ]
  ! TRUE            [ reduce using rule 101 (statement -> async_function .) ]
  ! FALSE           [ reduce using rule 101 (statement -> async_function .) ]
  ! PLUSPLUS        [ reduce using rule 101 (statement -> async_function .) ]
  ! MINUSMINUS      [ reduce using rule 101 (statement -> async_function .) ]
  ! CONSOLE         [ reduce using rule 101 (statement -> async_function .) ]
  ! VAR             [ reduce using rule 101 (statement -> async_function .) ]
  ! $end            [ reduce using rule 101 (statement -> async_function .) ]


state 8

    (8) element -> constAssignment .
    (97) statement -> constAssignment .

  ! reduce/reduce conflict for LET resolved using rule 8 (element -> constAssignment .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 8 (element -> constAssignment .)
  ! reduce/reduce conflict for CONST resolved using rule 8 (element -> constAssignment .)
  ! reduce/reduce conflict for ASYNC resolved using rule 8 (element -> constAssignment .)
  ! reduce/reduce conflict for ENUM resolved using rule 8 (element -> constAssignment .)
  ! reduce/reduce conflict for IF resolved using rule 8 (element -> constAssignment .)
  ! reduce/reduce conflict for SWITCH resolved using rule 8 (element -> constAssignment .)
  ! reduce/reduce conflict for WHILE resolved using rule 8 (element -> constAssignment .)
  ! reduce/reduce conflict for FOR resolved using rule 8 (element -> constAssignment .)
  ! reduce/reduce conflict for CLASS resolved using rule 8 (element -> constAssignment .)
  ! reduce/reduce conflict for LBRACE resolved using rule 8 (element -> constAssignment .)
  ! reduce/reduce conflict for RETURN resolved using rule 8 (element -> constAssignment .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 8 (element -> constAssignment .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 8 (element -> constAssignment .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 8 (element -> constAssignment .)
  ! reduce/reduce conflict for PROMPT resolved using rule 8 (element -> constAssignment .)
  ! reduce/reduce conflict for NOT resolved using rule 8 (element -> constAssignment .)
  ! reduce/reduce conflict for LPAREN resolved using rule 8 (element -> constAssignment .)
  ! reduce/reduce conflict for NUMBER resolved using rule 8 (element -> constAssignment .)
  ! reduce/reduce conflict for FLOAT resolved using rule 8 (element -> constAssignment .)
  ! reduce/reduce conflict for STRING resolved using rule 8 (element -> constAssignment .)
  ! reduce/reduce conflict for TRUE resolved using rule 8 (element -> constAssignment .)
  ! reduce/reduce conflict for FALSE resolved using rule 8 (element -> constAssignment .)
  ! reduce/reduce conflict for PLUSPLUS resolved using rule 8 (element -> constAssignment .)
  ! reduce/reduce conflict for MINUSMINUS resolved using rule 8 (element -> constAssignment .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 8 (element -> constAssignment .)
  ! reduce/reduce conflict for VAR resolved using rule 8 (element -> constAssignment .)
  ! reduce/reduce conflict for $end resolved using rule 8 (element -> constAssignment .)
    LET             reduce using rule 8 (element -> constAssignment .)
    FUNCTION        reduce using rule 8 (element -> constAssignment .)
    CONST           reduce using rule 8 (element -> constAssignment .)
    ASYNC           reduce using rule 8 (element -> constAssignment .)
    ENUM            reduce using rule 8 (element -> constAssignment .)
    IF              reduce using rule 8 (element -> constAssignment .)
    SWITCH          reduce using rule 8 (element -> constAssignment .)
    WHILE           reduce using rule 8 (element -> constAssignment .)
    FOR             reduce using rule 8 (element -> constAssignment .)
    CLASS           reduce using rule 8 (element -> constAssignment .)
    LBRACE          reduce using rule 8 (element -> constAssignment .)
    RETURN          reduce using rule 8 (element -> constAssignment .)
    INTERFACE       reduce using rule 8 (element -> constAssignment .)
    IDENTIFIER      reduce using rule 8 (element -> constAssignment .)
    LBRACKET        reduce using rule 8 (element -> constAssignment .)
    PROMPT          reduce using rule 8 (element -> constAssignment .)
    NOT             reduce using rule 8 (element -> constAssignment .)
    LPAREN          reduce using rule 8 (element -> constAssignment .)
    NUMBER          reduce using rule 8 (element -> constAssignment .)
    FLOAT           reduce using rule 8 (element -> constAssignment .)
    STRING          reduce using rule 8 (element -> constAssignment .)
    TRUE            reduce using rule 8 (element -> constAssignment .)
    FALSE           reduce using rule 8 (element -> constAssignment .)
    PLUSPLUS        reduce using rule 8 (element -> constAssignment .)
    MINUSMINUS      reduce using rule 8 (element -> constAssignment .)
    CONSOLE         reduce using rule 8 (element -> constAssignment .)
    VAR             reduce using rule 8 (element -> constAssignment .)
    $end            reduce using rule 8 (element -> constAssignment .)

  ! LET             [ reduce using rule 97 (statement -> constAssignment .) ]
  ! FUNCTION        [ reduce using rule 97 (statement -> constAssignment .) ]
  ! CONST           [ reduce using rule 97 (statement -> constAssignment .) ]
  ! ASYNC           [ reduce using rule 97 (statement -> constAssignment .) ]
  ! ENUM            [ reduce using rule 97 (statement -> constAssignment .) ]
  ! IF              [ reduce using rule 97 (statement -> constAssignment .) ]
  ! SWITCH          [ reduce using rule 97 (statement -> constAssignment .) ]
  ! WHILE           [ reduce using rule 97 (statement -> constAssignment .) ]
  ! FOR             [ reduce using rule 97 (statement -> constAssignment .) ]
  ! CLASS           [ reduce using rule 97 (statement -> constAssignment .) ]
  ! LBRACE          [ reduce using rule 97 (statement -> constAssignment .) ]
  ! RETURN          [ reduce using rule 97 (statement -> constAssignment .) ]
  ! INTERFACE       [ reduce using rule 97 (statement -> constAssignment .) ]
  ! IDENTIFIER      [ reduce using rule 97 (statement -> constAssignment .) ]
  ! LBRACKET        [ reduce using rule 97 (statement -> constAssignment .) ]
  ! PROMPT          [ reduce using rule 97 (statement -> constAssignment .) ]
  ! NOT             [ reduce using rule 97 (statement -> constAssignment .) ]
  ! LPAREN          [ reduce using rule 97 (statement -> constAssignment .) ]
  ! NUMBER          [ reduce using rule 97 (statement -> constAssignment .) ]
  ! FLOAT           [ reduce using rule 97 (statement -> constAssignment .) ]
  ! STRING          [ reduce using rule 97 (statement -> constAssignment .) ]
  ! TRUE            [ reduce using rule 97 (statement -> constAssignment .) ]
  ! FALSE           [ reduce using rule 97 (statement -> constAssignment .) ]
  ! PLUSPLUS        [ reduce using rule 97 (statement -> constAssignment .) ]
  ! MINUSMINUS      [ reduce using rule 97 (statement -> constAssignment .) ]
  ! CONSOLE         [ reduce using rule 97 (statement -> constAssignment .) ]
  ! VAR             [ reduce using rule 97 (statement -> constAssignment .) ]
  ! $end            [ reduce using rule 97 (statement -> constAssignment .) ]


state 9

    (9) element -> enum_definition .

    LET             reduce using rule 9 (element -> enum_definition .)
    FUNCTION        reduce using rule 9 (element -> enum_definition .)
    CONST           reduce using rule 9 (element -> enum_definition .)
    ASYNC           reduce using rule 9 (element -> enum_definition .)
    ENUM            reduce using rule 9 (element -> enum_definition .)
    IF              reduce using rule 9 (element -> enum_definition .)
    SWITCH          reduce using rule 9 (element -> enum_definition .)
    WHILE           reduce using rule 9 (element -> enum_definition .)
    FOR             reduce using rule 9 (element -> enum_definition .)
    CLASS           reduce using rule 9 (element -> enum_definition .)
    LBRACE          reduce using rule 9 (element -> enum_definition .)
    RETURN          reduce using rule 9 (element -> enum_definition .)
    INTERFACE       reduce using rule 9 (element -> enum_definition .)
    IDENTIFIER      reduce using rule 9 (element -> enum_definition .)
    LBRACKET        reduce using rule 9 (element -> enum_definition .)
    PROMPT          reduce using rule 9 (element -> enum_definition .)
    NOT             reduce using rule 9 (element -> enum_definition .)
    LPAREN          reduce using rule 9 (element -> enum_definition .)
    NUMBER          reduce using rule 9 (element -> enum_definition .)
    FLOAT           reduce using rule 9 (element -> enum_definition .)
    STRING          reduce using rule 9 (element -> enum_definition .)
    TRUE            reduce using rule 9 (element -> enum_definition .)
    FALSE           reduce using rule 9 (element -> enum_definition .)
    PLUSPLUS        reduce using rule 9 (element -> enum_definition .)
    MINUSMINUS      reduce using rule 9 (element -> enum_definition .)
    CONSOLE         reduce using rule 9 (element -> enum_definition .)
    VAR             reduce using rule 9 (element -> enum_definition .)
    $end            reduce using rule 9 (element -> enum_definition .)


state 10

    (10) element -> controlEstructure .
    (104) statement -> controlEstructure .

  ! reduce/reduce conflict for LET resolved using rule 10 (element -> controlEstructure .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 10 (element -> controlEstructure .)
  ! reduce/reduce conflict for CONST resolved using rule 10 (element -> controlEstructure .)
  ! reduce/reduce conflict for ASYNC resolved using rule 10 (element -> controlEstructure .)
  ! reduce/reduce conflict for ENUM resolved using rule 10 (element -> controlEstructure .)
  ! reduce/reduce conflict for IF resolved using rule 10 (element -> controlEstructure .)
  ! reduce/reduce conflict for SWITCH resolved using rule 10 (element -> controlEstructure .)
  ! reduce/reduce conflict for WHILE resolved using rule 10 (element -> controlEstructure .)
  ! reduce/reduce conflict for FOR resolved using rule 10 (element -> controlEstructure .)
  ! reduce/reduce conflict for CLASS resolved using rule 10 (element -> controlEstructure .)
  ! reduce/reduce conflict for LBRACE resolved using rule 10 (element -> controlEstructure .)
  ! reduce/reduce conflict for RETURN resolved using rule 10 (element -> controlEstructure .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 10 (element -> controlEstructure .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 10 (element -> controlEstructure .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 10 (element -> controlEstructure .)
  ! reduce/reduce conflict for PROMPT resolved using rule 10 (element -> controlEstructure .)
  ! reduce/reduce conflict for NOT resolved using rule 10 (element -> controlEstructure .)
  ! reduce/reduce conflict for LPAREN resolved using rule 10 (element -> controlEstructure .)
  ! reduce/reduce conflict for NUMBER resolved using rule 10 (element -> controlEstructure .)
  ! reduce/reduce conflict for FLOAT resolved using rule 10 (element -> controlEstructure .)
  ! reduce/reduce conflict for STRING resolved using rule 10 (element -> controlEstructure .)
  ! reduce/reduce conflict for TRUE resolved using rule 10 (element -> controlEstructure .)
  ! reduce/reduce conflict for FALSE resolved using rule 10 (element -> controlEstructure .)
  ! reduce/reduce conflict for PLUSPLUS resolved using rule 10 (element -> controlEstructure .)
  ! reduce/reduce conflict for MINUSMINUS resolved using rule 10 (element -> controlEstructure .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 10 (element -> controlEstructure .)
  ! reduce/reduce conflict for VAR resolved using rule 10 (element -> controlEstructure .)
  ! reduce/reduce conflict for $end resolved using rule 10 (element -> controlEstructure .)
    LET             reduce using rule 10 (element -> controlEstructure .)
    FUNCTION        reduce using rule 10 (element -> controlEstructure .)
    CONST           reduce using rule 10 (element -> controlEstructure .)
    ASYNC           reduce using rule 10 (element -> controlEstructure .)
    ENUM            reduce using rule 10 (element -> controlEstructure .)
    IF              reduce using rule 10 (element -> controlEstructure .)
    SWITCH          reduce using rule 10 (element -> controlEstructure .)
    WHILE           reduce using rule 10 (element -> controlEstructure .)
    FOR             reduce using rule 10 (element -> controlEstructure .)
    CLASS           reduce using rule 10 (element -> controlEstructure .)
    LBRACE          reduce using rule 10 (element -> controlEstructure .)
    RETURN          reduce using rule 10 (element -> controlEstructure .)
    INTERFACE       reduce using rule 10 (element -> controlEstructure .)
    IDENTIFIER      reduce using rule 10 (element -> controlEstructure .)
    LBRACKET        reduce using rule 10 (element -> controlEstructure .)
    PROMPT          reduce using rule 10 (element -> controlEstructure .)
    NOT             reduce using rule 10 (element -> controlEstructure .)
    LPAREN          reduce using rule 10 (element -> controlEstructure .)
    NUMBER          reduce using rule 10 (element -> controlEstructure .)
    FLOAT           reduce using rule 10 (element -> controlEstructure .)
    STRING          reduce using rule 10 (element -> controlEstructure .)
    TRUE            reduce using rule 10 (element -> controlEstructure .)
    FALSE           reduce using rule 10 (element -> controlEstructure .)
    PLUSPLUS        reduce using rule 10 (element -> controlEstructure .)
    MINUSMINUS      reduce using rule 10 (element -> controlEstructure .)
    CONSOLE         reduce using rule 10 (element -> controlEstructure .)
    VAR             reduce using rule 10 (element -> controlEstructure .)
    $end            reduce using rule 10 (element -> controlEstructure .)

  ! LET             [ reduce using rule 104 (statement -> controlEstructure .) ]
  ! FUNCTION        [ reduce using rule 104 (statement -> controlEstructure .) ]
  ! CONST           [ reduce using rule 104 (statement -> controlEstructure .) ]
  ! ASYNC           [ reduce using rule 104 (statement -> controlEstructure .) ]
  ! ENUM            [ reduce using rule 104 (statement -> controlEstructure .) ]
  ! IF              [ reduce using rule 104 (statement -> controlEstructure .) ]
  ! SWITCH          [ reduce using rule 104 (statement -> controlEstructure .) ]
  ! WHILE           [ reduce using rule 104 (statement -> controlEstructure .) ]
  ! FOR             [ reduce using rule 104 (statement -> controlEstructure .) ]
  ! CLASS           [ reduce using rule 104 (statement -> controlEstructure .) ]
  ! LBRACE          [ reduce using rule 104 (statement -> controlEstructure .) ]
  ! RETURN          [ reduce using rule 104 (statement -> controlEstructure .) ]
  ! INTERFACE       [ reduce using rule 104 (statement -> controlEstructure .) ]
  ! IDENTIFIER      [ reduce using rule 104 (statement -> controlEstructure .) ]
  ! LBRACKET        [ reduce using rule 104 (statement -> controlEstructure .) ]
  ! PROMPT          [ reduce using rule 104 (statement -> controlEstructure .) ]
  ! NOT             [ reduce using rule 104 (statement -> controlEstructure .) ]
  ! LPAREN          [ reduce using rule 104 (statement -> controlEstructure .) ]
  ! NUMBER          [ reduce using rule 104 (statement -> controlEstructure .) ]
  ! FLOAT           [ reduce using rule 104 (statement -> controlEstructure .) ]
  ! STRING          [ reduce using rule 104 (statement -> controlEstructure .) ]
  ! TRUE            [ reduce using rule 104 (statement -> controlEstructure .) ]
  ! FALSE           [ reduce using rule 104 (statement -> controlEstructure .) ]
  ! PLUSPLUS        [ reduce using rule 104 (statement -> controlEstructure .) ]
  ! MINUSMINUS      [ reduce using rule 104 (statement -> controlEstructure .) ]
  ! CONSOLE         [ reduce using rule 104 (statement -> controlEstructure .) ]
  ! VAR             [ reduce using rule 104 (statement -> controlEstructure .) ]
  ! $end            [ reduce using rule 104 (statement -> controlEstructure .) ]


state 11

    (11) element -> forEstructure .
    (106) statement -> forEstructure .

  ! reduce/reduce conflict for LET resolved using rule 11 (element -> forEstructure .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 11 (element -> forEstructure .)
  ! reduce/reduce conflict for CONST resolved using rule 11 (element -> forEstructure .)
  ! reduce/reduce conflict for ASYNC resolved using rule 11 (element -> forEstructure .)
  ! reduce/reduce conflict for ENUM resolved using rule 11 (element -> forEstructure .)
  ! reduce/reduce conflict for IF resolved using rule 11 (element -> forEstructure .)
  ! reduce/reduce conflict for SWITCH resolved using rule 11 (element -> forEstructure .)
  ! reduce/reduce conflict for WHILE resolved using rule 11 (element -> forEstructure .)
  ! reduce/reduce conflict for FOR resolved using rule 11 (element -> forEstructure .)
  ! reduce/reduce conflict for CLASS resolved using rule 11 (element -> forEstructure .)
  ! reduce/reduce conflict for LBRACE resolved using rule 11 (element -> forEstructure .)
  ! reduce/reduce conflict for RETURN resolved using rule 11 (element -> forEstructure .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 11 (element -> forEstructure .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 11 (element -> forEstructure .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 11 (element -> forEstructure .)
  ! reduce/reduce conflict for PROMPT resolved using rule 11 (element -> forEstructure .)
  ! reduce/reduce conflict for NOT resolved using rule 11 (element -> forEstructure .)
  ! reduce/reduce conflict for LPAREN resolved using rule 11 (element -> forEstructure .)
  ! reduce/reduce conflict for NUMBER resolved using rule 11 (element -> forEstructure .)
  ! reduce/reduce conflict for FLOAT resolved using rule 11 (element -> forEstructure .)
  ! reduce/reduce conflict for STRING resolved using rule 11 (element -> forEstructure .)
  ! reduce/reduce conflict for TRUE resolved using rule 11 (element -> forEstructure .)
  ! reduce/reduce conflict for FALSE resolved using rule 11 (element -> forEstructure .)
  ! reduce/reduce conflict for PLUSPLUS resolved using rule 11 (element -> forEstructure .)
  ! reduce/reduce conflict for MINUSMINUS resolved using rule 11 (element -> forEstructure .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 11 (element -> forEstructure .)
  ! reduce/reduce conflict for VAR resolved using rule 11 (element -> forEstructure .)
  ! reduce/reduce conflict for $end resolved using rule 11 (element -> forEstructure .)
    LET             reduce using rule 11 (element -> forEstructure .)
    FUNCTION        reduce using rule 11 (element -> forEstructure .)
    CONST           reduce using rule 11 (element -> forEstructure .)
    ASYNC           reduce using rule 11 (element -> forEstructure .)
    ENUM            reduce using rule 11 (element -> forEstructure .)
    IF              reduce using rule 11 (element -> forEstructure .)
    SWITCH          reduce using rule 11 (element -> forEstructure .)
    WHILE           reduce using rule 11 (element -> forEstructure .)
    FOR             reduce using rule 11 (element -> forEstructure .)
    CLASS           reduce using rule 11 (element -> forEstructure .)
    LBRACE          reduce using rule 11 (element -> forEstructure .)
    RETURN          reduce using rule 11 (element -> forEstructure .)
    INTERFACE       reduce using rule 11 (element -> forEstructure .)
    IDENTIFIER      reduce using rule 11 (element -> forEstructure .)
    LBRACKET        reduce using rule 11 (element -> forEstructure .)
    PROMPT          reduce using rule 11 (element -> forEstructure .)
    NOT             reduce using rule 11 (element -> forEstructure .)
    LPAREN          reduce using rule 11 (element -> forEstructure .)
    NUMBER          reduce using rule 11 (element -> forEstructure .)
    FLOAT           reduce using rule 11 (element -> forEstructure .)
    STRING          reduce using rule 11 (element -> forEstructure .)
    TRUE            reduce using rule 11 (element -> forEstructure .)
    FALSE           reduce using rule 11 (element -> forEstructure .)
    PLUSPLUS        reduce using rule 11 (element -> forEstructure .)
    MINUSMINUS      reduce using rule 11 (element -> forEstructure .)
    CONSOLE         reduce using rule 11 (element -> forEstructure .)
    VAR             reduce using rule 11 (element -> forEstructure .)
    $end            reduce using rule 11 (element -> forEstructure .)

  ! LET             [ reduce using rule 106 (statement -> forEstructure .) ]
  ! FUNCTION        [ reduce using rule 106 (statement -> forEstructure .) ]
  ! CONST           [ reduce using rule 106 (statement -> forEstructure .) ]
  ! ASYNC           [ reduce using rule 106 (statement -> forEstructure .) ]
  ! ENUM            [ reduce using rule 106 (statement -> forEstructure .) ]
  ! IF              [ reduce using rule 106 (statement -> forEstructure .) ]
  ! SWITCH          [ reduce using rule 106 (statement -> forEstructure .) ]
  ! WHILE           [ reduce using rule 106 (statement -> forEstructure .) ]
  ! FOR             [ reduce using rule 106 (statement -> forEstructure .) ]
  ! CLASS           [ reduce using rule 106 (statement -> forEstructure .) ]
  ! LBRACE          [ reduce using rule 106 (statement -> forEstructure .) ]
  ! RETURN          [ reduce using rule 106 (statement -> forEstructure .) ]
  ! INTERFACE       [ reduce using rule 106 (statement -> forEstructure .) ]
  ! IDENTIFIER      [ reduce using rule 106 (statement -> forEstructure .) ]
  ! LBRACKET        [ reduce using rule 106 (statement -> forEstructure .) ]
  ! PROMPT          [ reduce using rule 106 (statement -> forEstructure .) ]
  ! NOT             [ reduce using rule 106 (statement -> forEstructure .) ]
  ! LPAREN          [ reduce using rule 106 (statement -> forEstructure .) ]
  ! NUMBER          [ reduce using rule 106 (statement -> forEstructure .) ]
  ! FLOAT           [ reduce using rule 106 (statement -> forEstructure .) ]
  ! STRING          [ reduce using rule 106 (statement -> forEstructure .) ]
  ! TRUE            [ reduce using rule 106 (statement -> forEstructure .) ]
  ! FALSE           [ reduce using rule 106 (statement -> forEstructure .) ]
  ! PLUSPLUS        [ reduce using rule 106 (statement -> forEstructure .) ]
  ! MINUSMINUS      [ reduce using rule 106 (statement -> forEstructure .) ]
  ! CONSOLE         [ reduce using rule 106 (statement -> forEstructure .) ]
  ! VAR             [ reduce using rule 106 (statement -> forEstructure .) ]
  ! $end            [ reduce using rule 106 (statement -> forEstructure .) ]


state 12

    (12) element -> class_definition .
    (108) statement -> class_definition .

  ! reduce/reduce conflict for LET resolved using rule 12 (element -> class_definition .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 12 (element -> class_definition .)
  ! reduce/reduce conflict for CONST resolved using rule 12 (element -> class_definition .)
  ! reduce/reduce conflict for ASYNC resolved using rule 12 (element -> class_definition .)
  ! reduce/reduce conflict for ENUM resolved using rule 12 (element -> class_definition .)
  ! reduce/reduce conflict for IF resolved using rule 12 (element -> class_definition .)
  ! reduce/reduce conflict for SWITCH resolved using rule 12 (element -> class_definition .)
  ! reduce/reduce conflict for WHILE resolved using rule 12 (element -> class_definition .)
  ! reduce/reduce conflict for FOR resolved using rule 12 (element -> class_definition .)
  ! reduce/reduce conflict for CLASS resolved using rule 12 (element -> class_definition .)
  ! reduce/reduce conflict for LBRACE resolved using rule 12 (element -> class_definition .)
  ! reduce/reduce conflict for RETURN resolved using rule 12 (element -> class_definition .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 12 (element -> class_definition .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 12 (element -> class_definition .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 12 (element -> class_definition .)
  ! reduce/reduce conflict for PROMPT resolved using rule 12 (element -> class_definition .)
  ! reduce/reduce conflict for NOT resolved using rule 12 (element -> class_definition .)
  ! reduce/reduce conflict for LPAREN resolved using rule 12 (element -> class_definition .)
  ! reduce/reduce conflict for NUMBER resolved using rule 12 (element -> class_definition .)
  ! reduce/reduce conflict for FLOAT resolved using rule 12 (element -> class_definition .)
  ! reduce/reduce conflict for STRING resolved using rule 12 (element -> class_definition .)
  ! reduce/reduce conflict for TRUE resolved using rule 12 (element -> class_definition .)
  ! reduce/reduce conflict for FALSE resolved using rule 12 (element -> class_definition .)
  ! reduce/reduce conflict for PLUSPLUS resolved using rule 12 (element -> class_definition .)
  ! reduce/reduce conflict for MINUSMINUS resolved using rule 12 (element -> class_definition .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 12 (element -> class_definition .)
  ! reduce/reduce conflict for VAR resolved using rule 12 (element -> class_definition .)
  ! reduce/reduce conflict for $end resolved using rule 12 (element -> class_definition .)
    LET             reduce using rule 12 (element -> class_definition .)
    FUNCTION        reduce using rule 12 (element -> class_definition .)
    CONST           reduce using rule 12 (element -> class_definition .)
    ASYNC           reduce using rule 12 (element -> class_definition .)
    ENUM            reduce using rule 12 (element -> class_definition .)
    IF              reduce using rule 12 (element -> class_definition .)
    SWITCH          reduce using rule 12 (element -> class_definition .)
    WHILE           reduce using rule 12 (element -> class_definition .)
    FOR             reduce using rule 12 (element -> class_definition .)
    CLASS           reduce using rule 12 (element -> class_definition .)
    LBRACE          reduce using rule 12 (element -> class_definition .)
    RETURN          reduce using rule 12 (element -> class_definition .)
    INTERFACE       reduce using rule 12 (element -> class_definition .)
    IDENTIFIER      reduce using rule 12 (element -> class_definition .)
    LBRACKET        reduce using rule 12 (element -> class_definition .)
    PROMPT          reduce using rule 12 (element -> class_definition .)
    NOT             reduce using rule 12 (element -> class_definition .)
    LPAREN          reduce using rule 12 (element -> class_definition .)
    NUMBER          reduce using rule 12 (element -> class_definition .)
    FLOAT           reduce using rule 12 (element -> class_definition .)
    STRING          reduce using rule 12 (element -> class_definition .)
    TRUE            reduce using rule 12 (element -> class_definition .)
    FALSE           reduce using rule 12 (element -> class_definition .)
    PLUSPLUS        reduce using rule 12 (element -> class_definition .)
    MINUSMINUS      reduce using rule 12 (element -> class_definition .)
    CONSOLE         reduce using rule 12 (element -> class_definition .)
    VAR             reduce using rule 12 (element -> class_definition .)
    $end            reduce using rule 12 (element -> class_definition .)

  ! LET             [ reduce using rule 108 (statement -> class_definition .) ]
  ! FUNCTION        [ reduce using rule 108 (statement -> class_definition .) ]
  ! CONST           [ reduce using rule 108 (statement -> class_definition .) ]
  ! ASYNC           [ reduce using rule 108 (statement -> class_definition .) ]
  ! ENUM            [ reduce using rule 108 (statement -> class_definition .) ]
  ! IF              [ reduce using rule 108 (statement -> class_definition .) ]
  ! SWITCH          [ reduce using rule 108 (statement -> class_definition .) ]
  ! WHILE           [ reduce using rule 108 (statement -> class_definition .) ]
  ! FOR             [ reduce using rule 108 (statement -> class_definition .) ]
  ! CLASS           [ reduce using rule 108 (statement -> class_definition .) ]
  ! LBRACE          [ reduce using rule 108 (statement -> class_definition .) ]
  ! RETURN          [ reduce using rule 108 (statement -> class_definition .) ]
  ! INTERFACE       [ reduce using rule 108 (statement -> class_definition .) ]
  ! IDENTIFIER      [ reduce using rule 108 (statement -> class_definition .) ]
  ! LBRACKET        [ reduce using rule 108 (statement -> class_definition .) ]
  ! PROMPT          [ reduce using rule 108 (statement -> class_definition .) ]
  ! NOT             [ reduce using rule 108 (statement -> class_definition .) ]
  ! LPAREN          [ reduce using rule 108 (statement -> class_definition .) ]
  ! NUMBER          [ reduce using rule 108 (statement -> class_definition .) ]
  ! FLOAT           [ reduce using rule 108 (statement -> class_definition .) ]
  ! STRING          [ reduce using rule 108 (statement -> class_definition .) ]
  ! TRUE            [ reduce using rule 108 (statement -> class_definition .) ]
  ! FALSE           [ reduce using rule 108 (statement -> class_definition .) ]
  ! PLUSPLUS        [ reduce using rule 108 (statement -> class_definition .) ]
  ! MINUSMINUS      [ reduce using rule 108 (statement -> class_definition .) ]
  ! CONSOLE         [ reduce using rule 108 (statement -> class_definition .) ]
  ! VAR             [ reduce using rule 108 (statement -> class_definition .) ]
  ! $end            [ reduce using rule 108 (statement -> class_definition .) ]


state 13

    (13) element -> statement .

    LET             reduce using rule 13 (element -> statement .)
    FUNCTION        reduce using rule 13 (element -> statement .)
    CONST           reduce using rule 13 (element -> statement .)
    ASYNC           reduce using rule 13 (element -> statement .)
    ENUM            reduce using rule 13 (element -> statement .)
    IF              reduce using rule 13 (element -> statement .)
    SWITCH          reduce using rule 13 (element -> statement .)
    WHILE           reduce using rule 13 (element -> statement .)
    FOR             reduce using rule 13 (element -> statement .)
    CLASS           reduce using rule 13 (element -> statement .)
    LBRACE          reduce using rule 13 (element -> statement .)
    RETURN          reduce using rule 13 (element -> statement .)
    INTERFACE       reduce using rule 13 (element -> statement .)
    IDENTIFIER      reduce using rule 13 (element -> statement .)
    LBRACKET        reduce using rule 13 (element -> statement .)
    PROMPT          reduce using rule 13 (element -> statement .)
    NOT             reduce using rule 13 (element -> statement .)
    LPAREN          reduce using rule 13 (element -> statement .)
    NUMBER          reduce using rule 13 (element -> statement .)
    FLOAT           reduce using rule 13 (element -> statement .)
    STRING          reduce using rule 13 (element -> statement .)
    TRUE            reduce using rule 13 (element -> statement .)
    FALSE           reduce using rule 13 (element -> statement .)
    PLUSPLUS        reduce using rule 13 (element -> statement .)
    MINUSMINUS      reduce using rule 13 (element -> statement .)
    CONSOLE         reduce using rule 13 (element -> statement .)
    VAR             reduce using rule 13 (element -> statement .)
    $end            reduce using rule 13 (element -> statement .)


state 14

    (14) element -> interface .

    LET             reduce using rule 14 (element -> interface .)
    FUNCTION        reduce using rule 14 (element -> interface .)
    CONST           reduce using rule 14 (element -> interface .)
    ASYNC           reduce using rule 14 (element -> interface .)
    ENUM            reduce using rule 14 (element -> interface .)
    IF              reduce using rule 14 (element -> interface .)
    SWITCH          reduce using rule 14 (element -> interface .)
    WHILE           reduce using rule 14 (element -> interface .)
    FOR             reduce using rule 14 (element -> interface .)
    CLASS           reduce using rule 14 (element -> interface .)
    LBRACE          reduce using rule 14 (element -> interface .)
    RETURN          reduce using rule 14 (element -> interface .)
    INTERFACE       reduce using rule 14 (element -> interface .)
    IDENTIFIER      reduce using rule 14 (element -> interface .)
    LBRACKET        reduce using rule 14 (element -> interface .)
    PROMPT          reduce using rule 14 (element -> interface .)
    NOT             reduce using rule 14 (element -> interface .)
    LPAREN          reduce using rule 14 (element -> interface .)
    NUMBER          reduce using rule 14 (element -> interface .)
    FLOAT           reduce using rule 14 (element -> interface .)
    STRING          reduce using rule 14 (element -> interface .)
    TRUE            reduce using rule 14 (element -> interface .)
    FALSE           reduce using rule 14 (element -> interface .)
    PLUSPLUS        reduce using rule 14 (element -> interface .)
    MINUSMINUS      reduce using rule 14 (element -> interface .)
    CONSOLE         reduce using rule 14 (element -> interface .)
    VAR             reduce using rule 14 (element -> interface .)
    $end            reduce using rule 14 (element -> interface .)


state 15

    (15) element -> assignment .

    LET             reduce using rule 15 (element -> assignment .)
    FUNCTION        reduce using rule 15 (element -> assignment .)
    CONST           reduce using rule 15 (element -> assignment .)
    ASYNC           reduce using rule 15 (element -> assignment .)
    ENUM            reduce using rule 15 (element -> assignment .)
    IF              reduce using rule 15 (element -> assignment .)
    SWITCH          reduce using rule 15 (element -> assignment .)
    WHILE           reduce using rule 15 (element -> assignment .)
    FOR             reduce using rule 15 (element -> assignment .)
    CLASS           reduce using rule 15 (element -> assignment .)
    LBRACE          reduce using rule 15 (element -> assignment .)
    RETURN          reduce using rule 15 (element -> assignment .)
    INTERFACE       reduce using rule 15 (element -> assignment .)
    IDENTIFIER      reduce using rule 15 (element -> assignment .)
    LBRACKET        reduce using rule 15 (element -> assignment .)
    PROMPT          reduce using rule 15 (element -> assignment .)
    NOT             reduce using rule 15 (element -> assignment .)
    LPAREN          reduce using rule 15 (element -> assignment .)
    NUMBER          reduce using rule 15 (element -> assignment .)
    FLOAT           reduce using rule 15 (element -> assignment .)
    STRING          reduce using rule 15 (element -> assignment .)
    TRUE            reduce using rule 15 (element -> assignment .)
    FALSE           reduce using rule 15 (element -> assignment .)
    PLUSPLUS        reduce using rule 15 (element -> assignment .)
    MINUSMINUS      reduce using rule 15 (element -> assignment .)
    CONSOLE         reduce using rule 15 (element -> assignment .)
    VAR             reduce using rule 15 (element -> assignment .)
    $end            reduce using rule 15 (element -> assignment .)


state 16

    (16) element -> expression . SEMICOLON
    (103) statement -> expression . SEMICOLON
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

    SEMICOLON       shift and go to state 47
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72


state 17

    (17) element -> consolelog .
    (102) statement -> consolelog .

  ! reduce/reduce conflict for LET resolved using rule 17 (element -> consolelog .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 17 (element -> consolelog .)
  ! reduce/reduce conflict for CONST resolved using rule 17 (element -> consolelog .)
  ! reduce/reduce conflict for ASYNC resolved using rule 17 (element -> consolelog .)
  ! reduce/reduce conflict for ENUM resolved using rule 17 (element -> consolelog .)
  ! reduce/reduce conflict for IF resolved using rule 17 (element -> consolelog .)
  ! reduce/reduce conflict for SWITCH resolved using rule 17 (element -> consolelog .)
  ! reduce/reduce conflict for WHILE resolved using rule 17 (element -> consolelog .)
  ! reduce/reduce conflict for FOR resolved using rule 17 (element -> consolelog .)
  ! reduce/reduce conflict for CLASS resolved using rule 17 (element -> consolelog .)
  ! reduce/reduce conflict for LBRACE resolved using rule 17 (element -> consolelog .)
  ! reduce/reduce conflict for RETURN resolved using rule 17 (element -> consolelog .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 17 (element -> consolelog .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 17 (element -> consolelog .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 17 (element -> consolelog .)
  ! reduce/reduce conflict for PROMPT resolved using rule 17 (element -> consolelog .)
  ! reduce/reduce conflict for NOT resolved using rule 17 (element -> consolelog .)
  ! reduce/reduce conflict for LPAREN resolved using rule 17 (element -> consolelog .)
  ! reduce/reduce conflict for NUMBER resolved using rule 17 (element -> consolelog .)
  ! reduce/reduce conflict for FLOAT resolved using rule 17 (element -> consolelog .)
  ! reduce/reduce conflict for STRING resolved using rule 17 (element -> consolelog .)
  ! reduce/reduce conflict for TRUE resolved using rule 17 (element -> consolelog .)
  ! reduce/reduce conflict for FALSE resolved using rule 17 (element -> consolelog .)
  ! reduce/reduce conflict for PLUSPLUS resolved using rule 17 (element -> consolelog .)
  ! reduce/reduce conflict for MINUSMINUS resolved using rule 17 (element -> consolelog .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 17 (element -> consolelog .)
  ! reduce/reduce conflict for VAR resolved using rule 17 (element -> consolelog .)
  ! reduce/reduce conflict for $end resolved using rule 17 (element -> consolelog .)
    LET             reduce using rule 17 (element -> consolelog .)
    FUNCTION        reduce using rule 17 (element -> consolelog .)
    CONST           reduce using rule 17 (element -> consolelog .)
    ASYNC           reduce using rule 17 (element -> consolelog .)
    ENUM            reduce using rule 17 (element -> consolelog .)
    IF              reduce using rule 17 (element -> consolelog .)
    SWITCH          reduce using rule 17 (element -> consolelog .)
    WHILE           reduce using rule 17 (element -> consolelog .)
    FOR             reduce using rule 17 (element -> consolelog .)
    CLASS           reduce using rule 17 (element -> consolelog .)
    LBRACE          reduce using rule 17 (element -> consolelog .)
    RETURN          reduce using rule 17 (element -> consolelog .)
    INTERFACE       reduce using rule 17 (element -> consolelog .)
    IDENTIFIER      reduce using rule 17 (element -> consolelog .)
    LBRACKET        reduce using rule 17 (element -> consolelog .)
    PROMPT          reduce using rule 17 (element -> consolelog .)
    NOT             reduce using rule 17 (element -> consolelog .)
    LPAREN          reduce using rule 17 (element -> consolelog .)
    NUMBER          reduce using rule 17 (element -> consolelog .)
    FLOAT           reduce using rule 17 (element -> consolelog .)
    STRING          reduce using rule 17 (element -> consolelog .)
    TRUE            reduce using rule 17 (element -> consolelog .)
    FALSE           reduce using rule 17 (element -> consolelog .)
    PLUSPLUS        reduce using rule 17 (element -> consolelog .)
    MINUSMINUS      reduce using rule 17 (element -> consolelog .)
    CONSOLE         reduce using rule 17 (element -> consolelog .)
    VAR             reduce using rule 17 (element -> consolelog .)
    $end            reduce using rule 17 (element -> consolelog .)

  ! LET             [ reduce using rule 102 (statement -> consolelog .) ]
  ! FUNCTION        [ reduce using rule 102 (statement -> consolelog .) ]
  ! CONST           [ reduce using rule 102 (statement -> consolelog .) ]
  ! ASYNC           [ reduce using rule 102 (statement -> consolelog .) ]
  ! ENUM            [ reduce using rule 102 (statement -> consolelog .) ]
  ! IF              [ reduce using rule 102 (statement -> consolelog .) ]
  ! SWITCH          [ reduce using rule 102 (statement -> consolelog .) ]
  ! WHILE           [ reduce using rule 102 (statement -> consolelog .) ]
  ! FOR             [ reduce using rule 102 (statement -> consolelog .) ]
  ! CLASS           [ reduce using rule 102 (statement -> consolelog .) ]
  ! LBRACE          [ reduce using rule 102 (statement -> consolelog .) ]
  ! RETURN          [ reduce using rule 102 (statement -> consolelog .) ]
  ! INTERFACE       [ reduce using rule 102 (statement -> consolelog .) ]
  ! IDENTIFIER      [ reduce using rule 102 (statement -> consolelog .) ]
  ! LBRACKET        [ reduce using rule 102 (statement -> consolelog .) ]
  ! PROMPT          [ reduce using rule 102 (statement -> consolelog .) ]
  ! NOT             [ reduce using rule 102 (statement -> consolelog .) ]
  ! LPAREN          [ reduce using rule 102 (statement -> consolelog .) ]
  ! NUMBER          [ reduce using rule 102 (statement -> consolelog .) ]
  ! FLOAT           [ reduce using rule 102 (statement -> consolelog .) ]
  ! STRING          [ reduce using rule 102 (statement -> consolelog .) ]
  ! TRUE            [ reduce using rule 102 (statement -> consolelog .) ]
  ! FALSE           [ reduce using rule 102 (statement -> consolelog .) ]
  ! PLUSPLUS        [ reduce using rule 102 (statement -> consolelog .) ]
  ! MINUSMINUS      [ reduce using rule 102 (statement -> consolelog .) ]
  ! CONSOLE         [ reduce using rule 102 (statement -> consolelog .) ]
  ! VAR             [ reduce using rule 102 (statement -> consolelog .) ]
  ! $end            [ reduce using rule 102 (statement -> consolelog .) ]


state 18

    (19) letAssignment -> LET . IDENTIFIER COLON type EQUAL expression SEMICOLON
    (20) letAssignment -> LET . IDENTIFIER EQUAL expression SEMICOLON
    (21) declaracion -> LET . IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON

    IDENTIFIER      shift and go to state 73


state 19

    (18) assignment -> IDENTIFIER . EQUAL expression SEMICOLON
    (78) expression -> IDENTIFIER . LPAREN lista_expresiones_opt RPAREN
    (82) expression -> IDENTIFIER .

    EQUAL           shift and go to state 74
    LPAREN          shift and go to state 75
    SEMICOLON       reduce using rule 82 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 82 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 82 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 82 (expression -> IDENTIFIER .)
    DIV             reduce using rule 82 (expression -> IDENTIFIER .)
    MOD             reduce using rule 82 (expression -> IDENTIFIER .)
    PLUS_ASSIGN     reduce using rule 82 (expression -> IDENTIFIER .)
    MINUS_ASSIGN    reduce using rule 82 (expression -> IDENTIFIER .)
    MULT_ASSIGN     reduce using rule 82 (expression -> IDENTIFIER .)
    DIV_ASSIGN      reduce using rule 82 (expression -> IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 82 (expression -> IDENTIFIER .)
    POT             reduce using rule 82 (expression -> IDENTIFIER .)
    AND             reduce using rule 82 (expression -> IDENTIFIER .)
    OR              reduce using rule 82 (expression -> IDENTIFIER .)
    EQ              reduce using rule 82 (expression -> IDENTIFIER .)
    NEQ             reduce using rule 82 (expression -> IDENTIFIER .)
    STRICT_EQ       reduce using rule 82 (expression -> IDENTIFIER .)
    STRICT_NEQ      reduce using rule 82 (expression -> IDENTIFIER .)
    LT              reduce using rule 82 (expression -> IDENTIFIER .)
    GT              reduce using rule 82 (expression -> IDENTIFIER .)
    LE              reduce using rule 82 (expression -> IDENTIFIER .)
    GE              reduce using rule 82 (expression -> IDENTIFIER .)
    DOT             reduce using rule 82 (expression -> IDENTIFIER .)
    LBRACKET        reduce using rule 82 (expression -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 82 (expression -> IDENTIFIER .)
    MINUSMINUS      reduce using rule 82 (expression -> IDENTIFIER .)


state 20

    (45) expression -> LBRACKET . expression COMMA expression RBRACKET
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 76

state 21

    (38) function -> FUNCTION . IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE

    IDENTIFIER      shift and go to state 79


state 22

    (75) expression -> LPAREN . expression RPAREN
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 80

state 23

    (94) statement -> LBRACE . instruction_list RBRACE
    (142) expression -> LBRACE . object_properties RBRACE
    (109) instruction_list -> . instruction_list statement
    (110) instruction_list -> . statement
    (111) instruction_list -> . empty
    (143) object_properties -> . object_property
    (144) object_properties -> . object_property COMMA object_properties
    (145) object_properties -> . empty
    (94) statement -> . LBRACE instruction_list RBRACE
    (95) statement -> . letAssignment
    (96) statement -> . varAssignment
    (97) statement -> . constAssignment
    (98) statement -> . declaracion
    (99) statement -> . function
    (100) statement -> . arrow_function
    (101) statement -> . async_function
    (102) statement -> . consolelog
    (103) statement -> . expression SEMICOLON
    (104) statement -> . controlEstructure
    (105) statement -> . RETURN expression SEMICOLON
    (106) statement -> . forEstructure
    (107) statement -> . RETURN SEMICOLON
    (108) statement -> . class_definition
    (112) empty -> .
    (146) object_property -> . IDENTIFIER COLON expression
    (19) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (20) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (134) varAssignment -> . VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
    (135) varAssignment -> . VAR IDENTIFIER EQUAL expression SEMICOLON
    (113) constAssignment -> . CONST IDENTIFIER COLON type EQUAL expression SEMICOLON
    (114) constAssignment -> . CONST IDENTIFIER EQUAL expression SEMICOLON
    (21) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (38) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (136) arrow_function -> . CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (132) async_function -> . ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (89) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE
    (90) controlEstructure -> . IF LPAREN expression RPAREN statement
    (91) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (92) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (93) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (123) controlEstructure -> . SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE
    (133) controlEstructure -> . WHILE LPAREN expression RPAREN statement
    (26) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (27) forEstructure -> . FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement
    (115) class_definition -> . CLASS IDENTIFIER LBRACE class_body RBRACE

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for CONST resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for ASYNC resolved as shift
  ! shift/reduce conflict for CONSOLE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PROMPT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
    LBRACE          shift and go to state 23
    RETURN          shift and go to state 33
    RBRACE          reduce using rule 112 (empty -> .)
    IDENTIFIER      shift and go to state 97
    LET             shift and go to state 18
    VAR             shift and go to state 45
    CONST           shift and go to state 98
    FUNCTION        shift and go to state 21
    ASYNC           shift and go to state 25
    CONSOLE         shift and go to state 44
    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    CLASS           shift and go to state 31

  ! LBRACE          [ reduce using rule 112 (empty -> .) ]
  ! RETURN          [ reduce using rule 112 (empty -> .) ]
  ! LET             [ reduce using rule 112 (empty -> .) ]
  ! VAR             [ reduce using rule 112 (empty -> .) ]
  ! CONST           [ reduce using rule 112 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 112 (empty -> .) ]
  ! ASYNC           [ reduce using rule 112 (empty -> .) ]
  ! CONSOLE         [ reduce using rule 112 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 112 (empty -> .) ]
  ! PROMPT          [ reduce using rule 112 (empty -> .) ]
  ! NOT             [ reduce using rule 112 (empty -> .) ]
  ! LPAREN          [ reduce using rule 112 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 112 (empty -> .) ]
  ! NUMBER          [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! TRUE            [ reduce using rule 112 (empty -> .) ]
  ! FALSE           [ reduce using rule 112 (empty -> .) ]
  ! PLUSPLUS        [ reduce using rule 112 (empty -> .) ]
  ! MINUSMINUS      [ reduce using rule 112 (empty -> .) ]
  ! IF              [ reduce using rule 112 (empty -> .) ]
  ! SWITCH          [ reduce using rule 112 (empty -> .) ]
  ! WHILE           [ reduce using rule 112 (empty -> .) ]
  ! FOR             [ reduce using rule 112 (empty -> .) ]
  ! CLASS           [ reduce using rule 112 (empty -> .) ]

    instruction_list               shift and go to state 81
    object_properties              shift and go to state 82
    statement                      shift and go to state 83
    empty                          shift and go to state 84
    object_property                shift and go to state 85
    letAssignment                  shift and go to state 86
    varAssignment                  shift and go to state 32
    constAssignment                shift and go to state 87
    declaracion                    shift and go to state 88
    function                       shift and go to state 89
    arrow_function                 shift and go to state 90
    async_function                 shift and go to state 91
    consolelog                     shift and go to state 92
    expression                     shift and go to state 93
    controlEstructure              shift and go to state 94
    forEstructure                  shift and go to state 95
    class_definition               shift and go to state 96

state 24

    (136) arrow_function -> CONST . IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (113) constAssignment -> CONST . IDENTIFIER COLON type EQUAL expression SEMICOLON
    (114) constAssignment -> CONST . IDENTIFIER EQUAL expression SEMICOLON

    IDENTIFIER      shift and go to state 99


state 25

    (132) async_function -> ASYNC . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE

    FUNCTION        shift and go to state 100


state 26

    (129) enum_definition -> ENUM . IDENTIFIER LBRACE enum_members RBRACE

    IDENTIFIER      shift and go to state 101


state 27

    (90) controlEstructure -> IF . LPAREN expression RPAREN statement
    (91) controlEstructure -> IF . LPAREN expression RPAREN statement ELSE statement
    (92) controlEstructure -> IF . LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (93) controlEstructure -> IF . LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement

    LPAREN          shift and go to state 102


state 28

    (123) controlEstructure -> SWITCH . LPAREN expression RPAREN LBRACE case_block RBRACE

    LPAREN          shift and go to state 103


state 29

    (133) controlEstructure -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 104


state 30

    (26) forEstructure -> FOR . LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (27) forEstructure -> FOR . LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement

    LPAREN          shift and go to state 105


state 31

    (115) class_definition -> CLASS . IDENTIFIER LBRACE class_body RBRACE

    IDENTIFIER      shift and go to state 106


state 32

    (96) statement -> varAssignment .

    LET             reduce using rule 96 (statement -> varAssignment .)
    FUNCTION        reduce using rule 96 (statement -> varAssignment .)
    CONST           reduce using rule 96 (statement -> varAssignment .)
    ASYNC           reduce using rule 96 (statement -> varAssignment .)
    ENUM            reduce using rule 96 (statement -> varAssignment .)
    IF              reduce using rule 96 (statement -> varAssignment .)
    SWITCH          reduce using rule 96 (statement -> varAssignment .)
    WHILE           reduce using rule 96 (statement -> varAssignment .)
    FOR             reduce using rule 96 (statement -> varAssignment .)
    CLASS           reduce using rule 96 (statement -> varAssignment .)
    LBRACE          reduce using rule 96 (statement -> varAssignment .)
    RETURN          reduce using rule 96 (statement -> varAssignment .)
    INTERFACE       reduce using rule 96 (statement -> varAssignment .)
    IDENTIFIER      reduce using rule 96 (statement -> varAssignment .)
    LBRACKET        reduce using rule 96 (statement -> varAssignment .)
    PROMPT          reduce using rule 96 (statement -> varAssignment .)
    NOT             reduce using rule 96 (statement -> varAssignment .)
    LPAREN          reduce using rule 96 (statement -> varAssignment .)
    NUMBER          reduce using rule 96 (statement -> varAssignment .)
    FLOAT           reduce using rule 96 (statement -> varAssignment .)
    STRING          reduce using rule 96 (statement -> varAssignment .)
    TRUE            reduce using rule 96 (statement -> varAssignment .)
    FALSE           reduce using rule 96 (statement -> varAssignment .)
    PLUSPLUS        reduce using rule 96 (statement -> varAssignment .)
    MINUSMINUS      reduce using rule 96 (statement -> varAssignment .)
    CONSOLE         reduce using rule 96 (statement -> varAssignment .)
    VAR             reduce using rule 96 (statement -> varAssignment .)
    $end            reduce using rule 96 (statement -> varAssignment .)
    RBRACE          reduce using rule 96 (statement -> varAssignment .)
    ELSE            reduce using rule 96 (statement -> varAssignment .)
    CASE            reduce using rule 96 (statement -> varAssignment .)
    DEFAULT         reduce using rule 96 (statement -> varAssignment .)


state 33

    (105) statement -> RETURN . expression SEMICOLON
    (107) statement -> RETURN . SEMICOLON
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    SEMICOLON       shift and go to state 108
    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 107

state 34

    (137) interface -> INTERFACE . IDENTIFIER LBRACE interface_body RBRACE

    IDENTIFIER      shift and go to state 109


state 35

    (73) expression -> PROMPT . LPAREN STRING RPAREN

    LPAREN          shift and go to state 110


state 36

    (81) expression -> STRING .

    SEMICOLON       reduce using rule 81 (expression -> STRING .)
    PLUS            reduce using rule 81 (expression -> STRING .)
    MINUS           reduce using rule 81 (expression -> STRING .)
    TIMES           reduce using rule 81 (expression -> STRING .)
    DIV             reduce using rule 81 (expression -> STRING .)
    MOD             reduce using rule 81 (expression -> STRING .)
    PLUS_ASSIGN     reduce using rule 81 (expression -> STRING .)
    MINUS_ASSIGN    reduce using rule 81 (expression -> STRING .)
    MULT_ASSIGN     reduce using rule 81 (expression -> STRING .)
    DIV_ASSIGN      reduce using rule 81 (expression -> STRING .)
    MOD_ASSIGN      reduce using rule 81 (expression -> STRING .)
    POT             reduce using rule 81 (expression -> STRING .)
    AND             reduce using rule 81 (expression -> STRING .)
    OR              reduce using rule 81 (expression -> STRING .)
    EQ              reduce using rule 81 (expression -> STRING .)
    NEQ             reduce using rule 81 (expression -> STRING .)
    STRICT_EQ       reduce using rule 81 (expression -> STRING .)
    STRICT_NEQ      reduce using rule 81 (expression -> STRING .)
    LT              reduce using rule 81 (expression -> STRING .)
    GT              reduce using rule 81 (expression -> STRING .)
    LE              reduce using rule 81 (expression -> STRING .)
    GE              reduce using rule 81 (expression -> STRING .)
    DOT             reduce using rule 81 (expression -> STRING .)
    LBRACKET        reduce using rule 81 (expression -> STRING .)
    PLUSPLUS        reduce using rule 81 (expression -> STRING .)
    MINUSMINUS      reduce using rule 81 (expression -> STRING .)
    COMMA           reduce using rule 81 (expression -> STRING .)
    RPAREN          reduce using rule 81 (expression -> STRING .)
    RBRACKET        reduce using rule 81 (expression -> STRING .)
    RBRACE          reduce using rule 81 (expression -> STRING .)
    COLON           reduce using rule 81 (expression -> STRING .)


state 37

    (74) expression -> NOT . expression
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 111

state 38

    (79) expression -> NUMBER .

    SEMICOLON       reduce using rule 79 (expression -> NUMBER .)
    PLUS            reduce using rule 79 (expression -> NUMBER .)
    MINUS           reduce using rule 79 (expression -> NUMBER .)
    TIMES           reduce using rule 79 (expression -> NUMBER .)
    DIV             reduce using rule 79 (expression -> NUMBER .)
    MOD             reduce using rule 79 (expression -> NUMBER .)
    PLUS_ASSIGN     reduce using rule 79 (expression -> NUMBER .)
    MINUS_ASSIGN    reduce using rule 79 (expression -> NUMBER .)
    MULT_ASSIGN     reduce using rule 79 (expression -> NUMBER .)
    DIV_ASSIGN      reduce using rule 79 (expression -> NUMBER .)
    MOD_ASSIGN      reduce using rule 79 (expression -> NUMBER .)
    POT             reduce using rule 79 (expression -> NUMBER .)
    AND             reduce using rule 79 (expression -> NUMBER .)
    OR              reduce using rule 79 (expression -> NUMBER .)
    EQ              reduce using rule 79 (expression -> NUMBER .)
    NEQ             reduce using rule 79 (expression -> NUMBER .)
    STRICT_EQ       reduce using rule 79 (expression -> NUMBER .)
    STRICT_NEQ      reduce using rule 79 (expression -> NUMBER .)
    LT              reduce using rule 79 (expression -> NUMBER .)
    GT              reduce using rule 79 (expression -> NUMBER .)
    LE              reduce using rule 79 (expression -> NUMBER .)
    GE              reduce using rule 79 (expression -> NUMBER .)
    DOT             reduce using rule 79 (expression -> NUMBER .)
    LBRACKET        reduce using rule 79 (expression -> NUMBER .)
    PLUSPLUS        reduce using rule 79 (expression -> NUMBER .)
    MINUSMINUS      reduce using rule 79 (expression -> NUMBER .)
    COMMA           reduce using rule 79 (expression -> NUMBER .)
    RPAREN          reduce using rule 79 (expression -> NUMBER .)
    RBRACKET        reduce using rule 79 (expression -> NUMBER .)
    RBRACE          reduce using rule 79 (expression -> NUMBER .)
    COLON           reduce using rule 79 (expression -> NUMBER .)


state 39

    (80) expression -> FLOAT .

    SEMICOLON       reduce using rule 80 (expression -> FLOAT .)
    PLUS            reduce using rule 80 (expression -> FLOAT .)
    MINUS           reduce using rule 80 (expression -> FLOAT .)
    TIMES           reduce using rule 80 (expression -> FLOAT .)
    DIV             reduce using rule 80 (expression -> FLOAT .)
    MOD             reduce using rule 80 (expression -> FLOAT .)
    PLUS_ASSIGN     reduce using rule 80 (expression -> FLOAT .)
    MINUS_ASSIGN    reduce using rule 80 (expression -> FLOAT .)
    MULT_ASSIGN     reduce using rule 80 (expression -> FLOAT .)
    DIV_ASSIGN      reduce using rule 80 (expression -> FLOAT .)
    MOD_ASSIGN      reduce using rule 80 (expression -> FLOAT .)
    POT             reduce using rule 80 (expression -> FLOAT .)
    AND             reduce using rule 80 (expression -> FLOAT .)
    OR              reduce using rule 80 (expression -> FLOAT .)
    EQ              reduce using rule 80 (expression -> FLOAT .)
    NEQ             reduce using rule 80 (expression -> FLOAT .)
    STRICT_EQ       reduce using rule 80 (expression -> FLOAT .)
    STRICT_NEQ      reduce using rule 80 (expression -> FLOAT .)
    LT              reduce using rule 80 (expression -> FLOAT .)
    GT              reduce using rule 80 (expression -> FLOAT .)
    LE              reduce using rule 80 (expression -> FLOAT .)
    GE              reduce using rule 80 (expression -> FLOAT .)
    DOT             reduce using rule 80 (expression -> FLOAT .)
    LBRACKET        reduce using rule 80 (expression -> FLOAT .)
    PLUSPLUS        reduce using rule 80 (expression -> FLOAT .)
    MINUSMINUS      reduce using rule 80 (expression -> FLOAT .)
    COMMA           reduce using rule 80 (expression -> FLOAT .)
    RPAREN          reduce using rule 80 (expression -> FLOAT .)
    RBRACKET        reduce using rule 80 (expression -> FLOAT .)
    RBRACE          reduce using rule 80 (expression -> FLOAT .)
    COLON           reduce using rule 80 (expression -> FLOAT .)


state 40

    (83) expression -> TRUE .

    SEMICOLON       reduce using rule 83 (expression -> TRUE .)
    PLUS            reduce using rule 83 (expression -> TRUE .)
    MINUS           reduce using rule 83 (expression -> TRUE .)
    TIMES           reduce using rule 83 (expression -> TRUE .)
    DIV             reduce using rule 83 (expression -> TRUE .)
    MOD             reduce using rule 83 (expression -> TRUE .)
    PLUS_ASSIGN     reduce using rule 83 (expression -> TRUE .)
    MINUS_ASSIGN    reduce using rule 83 (expression -> TRUE .)
    MULT_ASSIGN     reduce using rule 83 (expression -> TRUE .)
    DIV_ASSIGN      reduce using rule 83 (expression -> TRUE .)
    MOD_ASSIGN      reduce using rule 83 (expression -> TRUE .)
    POT             reduce using rule 83 (expression -> TRUE .)
    AND             reduce using rule 83 (expression -> TRUE .)
    OR              reduce using rule 83 (expression -> TRUE .)
    EQ              reduce using rule 83 (expression -> TRUE .)
    NEQ             reduce using rule 83 (expression -> TRUE .)
    STRICT_EQ       reduce using rule 83 (expression -> TRUE .)
    STRICT_NEQ      reduce using rule 83 (expression -> TRUE .)
    LT              reduce using rule 83 (expression -> TRUE .)
    GT              reduce using rule 83 (expression -> TRUE .)
    LE              reduce using rule 83 (expression -> TRUE .)
    GE              reduce using rule 83 (expression -> TRUE .)
    DOT             reduce using rule 83 (expression -> TRUE .)
    LBRACKET        reduce using rule 83 (expression -> TRUE .)
    PLUSPLUS        reduce using rule 83 (expression -> TRUE .)
    MINUSMINUS      reduce using rule 83 (expression -> TRUE .)
    COMMA           reduce using rule 83 (expression -> TRUE .)
    RPAREN          reduce using rule 83 (expression -> TRUE .)
    RBRACKET        reduce using rule 83 (expression -> TRUE .)
    RBRACE          reduce using rule 83 (expression -> TRUE .)
    COLON           reduce using rule 83 (expression -> TRUE .)


state 41

    (84) expression -> FALSE .

    SEMICOLON       reduce using rule 84 (expression -> FALSE .)
    PLUS            reduce using rule 84 (expression -> FALSE .)
    MINUS           reduce using rule 84 (expression -> FALSE .)
    TIMES           reduce using rule 84 (expression -> FALSE .)
    DIV             reduce using rule 84 (expression -> FALSE .)
    MOD             reduce using rule 84 (expression -> FALSE .)
    PLUS_ASSIGN     reduce using rule 84 (expression -> FALSE .)
    MINUS_ASSIGN    reduce using rule 84 (expression -> FALSE .)
    MULT_ASSIGN     reduce using rule 84 (expression -> FALSE .)
    DIV_ASSIGN      reduce using rule 84 (expression -> FALSE .)
    MOD_ASSIGN      reduce using rule 84 (expression -> FALSE .)
    POT             reduce using rule 84 (expression -> FALSE .)
    AND             reduce using rule 84 (expression -> FALSE .)
    OR              reduce using rule 84 (expression -> FALSE .)
    EQ              reduce using rule 84 (expression -> FALSE .)
    NEQ             reduce using rule 84 (expression -> FALSE .)
    STRICT_EQ       reduce using rule 84 (expression -> FALSE .)
    STRICT_NEQ      reduce using rule 84 (expression -> FALSE .)
    LT              reduce using rule 84 (expression -> FALSE .)
    GT              reduce using rule 84 (expression -> FALSE .)
    LE              reduce using rule 84 (expression -> FALSE .)
    GE              reduce using rule 84 (expression -> FALSE .)
    DOT             reduce using rule 84 (expression -> FALSE .)
    LBRACKET        reduce using rule 84 (expression -> FALSE .)
    PLUSPLUS        reduce using rule 84 (expression -> FALSE .)
    MINUSMINUS      reduce using rule 84 (expression -> FALSE .)
    COMMA           reduce using rule 84 (expression -> FALSE .)
    RPAREN          reduce using rule 84 (expression -> FALSE .)
    RBRACKET        reduce using rule 84 (expression -> FALSE .)
    RBRACE          reduce using rule 84 (expression -> FALSE .)
    COLON           reduce using rule 84 (expression -> FALSE .)


state 42

    (87) expression -> PLUSPLUS . expression
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 112

state 43

    (88) expression -> MINUSMINUS . expression
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 113

state 44

    (89) consolelog -> CONSOLE . DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON

    DOT             shift and go to state 114


state 45

    (134) varAssignment -> VAR . IDENTIFIER COLON type EQUAL expression SEMICOLON
    (135) varAssignment -> VAR . IDENTIFIER EQUAL expression SEMICOLON

    IDENTIFIER      shift and go to state 115


state 46

    (1) program -> program element .

    LET             reduce using rule 1 (program -> program element .)
    FUNCTION        reduce using rule 1 (program -> program element .)
    CONST           reduce using rule 1 (program -> program element .)
    ASYNC           reduce using rule 1 (program -> program element .)
    ENUM            reduce using rule 1 (program -> program element .)
    IF              reduce using rule 1 (program -> program element .)
    SWITCH          reduce using rule 1 (program -> program element .)
    WHILE           reduce using rule 1 (program -> program element .)
    FOR             reduce using rule 1 (program -> program element .)
    CLASS           reduce using rule 1 (program -> program element .)
    LBRACE          reduce using rule 1 (program -> program element .)
    RETURN          reduce using rule 1 (program -> program element .)
    INTERFACE       reduce using rule 1 (program -> program element .)
    IDENTIFIER      reduce using rule 1 (program -> program element .)
    LBRACKET        reduce using rule 1 (program -> program element .)
    PROMPT          reduce using rule 1 (program -> program element .)
    NOT             reduce using rule 1 (program -> program element .)
    LPAREN          reduce using rule 1 (program -> program element .)
    NUMBER          reduce using rule 1 (program -> program element .)
    FLOAT           reduce using rule 1 (program -> program element .)
    STRING          reduce using rule 1 (program -> program element .)
    TRUE            reduce using rule 1 (program -> program element .)
    FALSE           reduce using rule 1 (program -> program element .)
    PLUSPLUS        reduce using rule 1 (program -> program element .)
    MINUSMINUS      reduce using rule 1 (program -> program element .)
    CONSOLE         reduce using rule 1 (program -> program element .)
    VAR             reduce using rule 1 (program -> program element .)
    $end            reduce using rule 1 (program -> program element .)


state 47

    (16) element -> expression SEMICOLON .
    (103) statement -> expression SEMICOLON .

  ! reduce/reduce conflict for LET resolved using rule 16 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 16 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for CONST resolved using rule 16 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for ASYNC resolved using rule 16 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for ENUM resolved using rule 16 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for IF resolved using rule 16 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for SWITCH resolved using rule 16 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for WHILE resolved using rule 16 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for FOR resolved using rule 16 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for CLASS resolved using rule 16 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for LBRACE resolved using rule 16 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for RETURN resolved using rule 16 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 16 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 16 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 16 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for PROMPT resolved using rule 16 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for NOT resolved using rule 16 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for LPAREN resolved using rule 16 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for NUMBER resolved using rule 16 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for FLOAT resolved using rule 16 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for STRING resolved using rule 16 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for TRUE resolved using rule 16 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for FALSE resolved using rule 16 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for PLUSPLUS resolved using rule 16 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for MINUSMINUS resolved using rule 16 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 16 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for VAR resolved using rule 16 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for $end resolved using rule 16 (element -> expression SEMICOLON .)
    LET             reduce using rule 16 (element -> expression SEMICOLON .)
    FUNCTION        reduce using rule 16 (element -> expression SEMICOLON .)
    CONST           reduce using rule 16 (element -> expression SEMICOLON .)
    ASYNC           reduce using rule 16 (element -> expression SEMICOLON .)
    ENUM            reduce using rule 16 (element -> expression SEMICOLON .)
    IF              reduce using rule 16 (element -> expression SEMICOLON .)
    SWITCH          reduce using rule 16 (element -> expression SEMICOLON .)
    WHILE           reduce using rule 16 (element -> expression SEMICOLON .)
    FOR             reduce using rule 16 (element -> expression SEMICOLON .)
    CLASS           reduce using rule 16 (element -> expression SEMICOLON .)
    LBRACE          reduce using rule 16 (element -> expression SEMICOLON .)
    RETURN          reduce using rule 16 (element -> expression SEMICOLON .)
    INTERFACE       reduce using rule 16 (element -> expression SEMICOLON .)
    IDENTIFIER      reduce using rule 16 (element -> expression SEMICOLON .)
    LBRACKET        reduce using rule 16 (element -> expression SEMICOLON .)
    PROMPT          reduce using rule 16 (element -> expression SEMICOLON .)
    NOT             reduce using rule 16 (element -> expression SEMICOLON .)
    LPAREN          reduce using rule 16 (element -> expression SEMICOLON .)
    NUMBER          reduce using rule 16 (element -> expression SEMICOLON .)
    FLOAT           reduce using rule 16 (element -> expression SEMICOLON .)
    STRING          reduce using rule 16 (element -> expression SEMICOLON .)
    TRUE            reduce using rule 16 (element -> expression SEMICOLON .)
    FALSE           reduce using rule 16 (element -> expression SEMICOLON .)
    PLUSPLUS        reduce using rule 16 (element -> expression SEMICOLON .)
    MINUSMINUS      reduce using rule 16 (element -> expression SEMICOLON .)
    CONSOLE         reduce using rule 16 (element -> expression SEMICOLON .)
    VAR             reduce using rule 16 (element -> expression SEMICOLON .)
    $end            reduce using rule 16 (element -> expression SEMICOLON .)

  ! LET             [ reduce using rule 103 (statement -> expression SEMICOLON .) ]
  ! FUNCTION        [ reduce using rule 103 (statement -> expression SEMICOLON .) ]
  ! CONST           [ reduce using rule 103 (statement -> expression SEMICOLON .) ]
  ! ASYNC           [ reduce using rule 103 (statement -> expression SEMICOLON .) ]
  ! ENUM            [ reduce using rule 103 (statement -> expression SEMICOLON .) ]
  ! IF              [ reduce using rule 103 (statement -> expression SEMICOLON .) ]
  ! SWITCH          [ reduce using rule 103 (statement -> expression SEMICOLON .) ]
  ! WHILE           [ reduce using rule 103 (statement -> expression SEMICOLON .) ]
  ! FOR             [ reduce using rule 103 (statement -> expression SEMICOLON .) ]
  ! CLASS           [ reduce using rule 103 (statement -> expression SEMICOLON .) ]
  ! LBRACE          [ reduce using rule 103 (statement -> expression SEMICOLON .) ]
  ! RETURN          [ reduce using rule 103 (statement -> expression SEMICOLON .) ]
  ! INTERFACE       [ reduce using rule 103 (statement -> expression SEMICOLON .) ]
  ! IDENTIFIER      [ reduce using rule 103 (statement -> expression SEMICOLON .) ]
  ! LBRACKET        [ reduce using rule 103 (statement -> expression SEMICOLON .) ]
  ! PROMPT          [ reduce using rule 103 (statement -> expression SEMICOLON .) ]
  ! NOT             [ reduce using rule 103 (statement -> expression SEMICOLON .) ]
  ! LPAREN          [ reduce using rule 103 (statement -> expression SEMICOLON .) ]
  ! NUMBER          [ reduce using rule 103 (statement -> expression SEMICOLON .) ]
  ! FLOAT           [ reduce using rule 103 (statement -> expression SEMICOLON .) ]
  ! STRING          [ reduce using rule 103 (statement -> expression SEMICOLON .) ]
  ! TRUE            [ reduce using rule 103 (statement -> expression SEMICOLON .) ]
  ! FALSE           [ reduce using rule 103 (statement -> expression SEMICOLON .) ]
  ! PLUSPLUS        [ reduce using rule 103 (statement -> expression SEMICOLON .) ]
  ! MINUSMINUS      [ reduce using rule 103 (statement -> expression SEMICOLON .) ]
  ! CONSOLE         [ reduce using rule 103 (statement -> expression SEMICOLON .) ]
  ! VAR             [ reduce using rule 103 (statement -> expression SEMICOLON .) ]
  ! $end            [ reduce using rule 103 (statement -> expression SEMICOLON .) ]


state 48

    (52) expression -> expression PLUS . expression
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 116

state 49

    (53) expression -> expression MINUS . expression
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 117

state 50

    (54) expression -> expression TIMES . expression
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 118

state 51

    (55) expression -> expression DIV . expression
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 119

state 52

    (56) expression -> expression MOD . expression
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 120

state 53

    (57) expression -> expression PLUS_ASSIGN . expression
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 121

state 54

    (58) expression -> expression MINUS_ASSIGN . expression
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 122

state 55

    (59) expression -> expression MULT_ASSIGN . expression
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 123

state 56

    (60) expression -> expression DIV_ASSIGN . expression
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 124

state 57

    (61) expression -> expression MOD_ASSIGN . expression
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 125

state 58

    (62) expression -> expression POT . expression
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 126

state 59

    (63) expression -> expression AND . expression
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 127

state 60

    (64) expression -> expression OR . expression
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 128

state 61

    (65) expression -> expression EQ . expression
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 129

state 62

    (66) expression -> expression NEQ . expression
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 130

state 63

    (67) expression -> expression STRICT_EQ . expression
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 131

state 64

    (68) expression -> expression STRICT_NEQ . expression
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 132

state 65

    (69) expression -> expression LT . expression
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 133

state 66

    (70) expression -> expression GT . expression
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 134

state 67

    (71) expression -> expression LE . expression
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 135

state 68

    (72) expression -> expression GE . expression
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 136

state 69

    (76) expression -> expression DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 137


state 70

    (77) expression -> expression LBRACKET . expression RBRACKET
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 138

state 71

    (85) expression -> expression PLUSPLUS .

    SEMICOLON       reduce using rule 85 (expression -> expression PLUSPLUS .)
    PLUS            reduce using rule 85 (expression -> expression PLUSPLUS .)
    MINUS           reduce using rule 85 (expression -> expression PLUSPLUS .)
    TIMES           reduce using rule 85 (expression -> expression PLUSPLUS .)
    DIV             reduce using rule 85 (expression -> expression PLUSPLUS .)
    MOD             reduce using rule 85 (expression -> expression PLUSPLUS .)
    PLUS_ASSIGN     reduce using rule 85 (expression -> expression PLUSPLUS .)
    MINUS_ASSIGN    reduce using rule 85 (expression -> expression PLUSPLUS .)
    MULT_ASSIGN     reduce using rule 85 (expression -> expression PLUSPLUS .)
    DIV_ASSIGN      reduce using rule 85 (expression -> expression PLUSPLUS .)
    MOD_ASSIGN      reduce using rule 85 (expression -> expression PLUSPLUS .)
    POT             reduce using rule 85 (expression -> expression PLUSPLUS .)
    AND             reduce using rule 85 (expression -> expression PLUSPLUS .)
    OR              reduce using rule 85 (expression -> expression PLUSPLUS .)
    EQ              reduce using rule 85 (expression -> expression PLUSPLUS .)
    NEQ             reduce using rule 85 (expression -> expression PLUSPLUS .)
    STRICT_EQ       reduce using rule 85 (expression -> expression PLUSPLUS .)
    STRICT_NEQ      reduce using rule 85 (expression -> expression PLUSPLUS .)
    LT              reduce using rule 85 (expression -> expression PLUSPLUS .)
    GT              reduce using rule 85 (expression -> expression PLUSPLUS .)
    LE              reduce using rule 85 (expression -> expression PLUSPLUS .)
    GE              reduce using rule 85 (expression -> expression PLUSPLUS .)
    DOT             reduce using rule 85 (expression -> expression PLUSPLUS .)
    LBRACKET        reduce using rule 85 (expression -> expression PLUSPLUS .)
    PLUSPLUS        reduce using rule 85 (expression -> expression PLUSPLUS .)
    MINUSMINUS      reduce using rule 85 (expression -> expression PLUSPLUS .)
    COMMA           reduce using rule 85 (expression -> expression PLUSPLUS .)
    RPAREN          reduce using rule 85 (expression -> expression PLUSPLUS .)
    RBRACKET        reduce using rule 85 (expression -> expression PLUSPLUS .)
    RBRACE          reduce using rule 85 (expression -> expression PLUSPLUS .)
    COLON           reduce using rule 85 (expression -> expression PLUSPLUS .)


state 72

    (86) expression -> expression MINUSMINUS .

    SEMICOLON       reduce using rule 86 (expression -> expression MINUSMINUS .)
    PLUS            reduce using rule 86 (expression -> expression MINUSMINUS .)
    MINUS           reduce using rule 86 (expression -> expression MINUSMINUS .)
    TIMES           reduce using rule 86 (expression -> expression MINUSMINUS .)
    DIV             reduce using rule 86 (expression -> expression MINUSMINUS .)
    MOD             reduce using rule 86 (expression -> expression MINUSMINUS .)
    PLUS_ASSIGN     reduce using rule 86 (expression -> expression MINUSMINUS .)
    MINUS_ASSIGN    reduce using rule 86 (expression -> expression MINUSMINUS .)
    MULT_ASSIGN     reduce using rule 86 (expression -> expression MINUSMINUS .)
    DIV_ASSIGN      reduce using rule 86 (expression -> expression MINUSMINUS .)
    MOD_ASSIGN      reduce using rule 86 (expression -> expression MINUSMINUS .)
    POT             reduce using rule 86 (expression -> expression MINUSMINUS .)
    AND             reduce using rule 86 (expression -> expression MINUSMINUS .)
    OR              reduce using rule 86 (expression -> expression MINUSMINUS .)
    EQ              reduce using rule 86 (expression -> expression MINUSMINUS .)
    NEQ             reduce using rule 86 (expression -> expression MINUSMINUS .)
    STRICT_EQ       reduce using rule 86 (expression -> expression MINUSMINUS .)
    STRICT_NEQ      reduce using rule 86 (expression -> expression MINUSMINUS .)
    LT              reduce using rule 86 (expression -> expression MINUSMINUS .)
    GT              reduce using rule 86 (expression -> expression MINUSMINUS .)
    LE              reduce using rule 86 (expression -> expression MINUSMINUS .)
    GE              reduce using rule 86 (expression -> expression MINUSMINUS .)
    DOT             reduce using rule 86 (expression -> expression MINUSMINUS .)
    LBRACKET        reduce using rule 86 (expression -> expression MINUSMINUS .)
    PLUSPLUS        reduce using rule 86 (expression -> expression MINUSMINUS .)
    MINUSMINUS      reduce using rule 86 (expression -> expression MINUSMINUS .)
    COMMA           reduce using rule 86 (expression -> expression MINUSMINUS .)
    RPAREN          reduce using rule 86 (expression -> expression MINUSMINUS .)
    RBRACKET        reduce using rule 86 (expression -> expression MINUSMINUS .)
    RBRACE          reduce using rule 86 (expression -> expression MINUSMINUS .)
    COLON           reduce using rule 86 (expression -> expression MINUSMINUS .)


state 73

    (19) letAssignment -> LET IDENTIFIER . COLON type EQUAL expression SEMICOLON
    (20) letAssignment -> LET IDENTIFIER . EQUAL expression SEMICOLON
    (21) declaracion -> LET IDENTIFIER . COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON

    COLON           shift and go to state 139
    EQUAL           shift and go to state 140


state 74

    (18) assignment -> IDENTIFIER EQUAL . expression SEMICOLON
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 141

state 75

    (78) expression -> IDENTIFIER LPAREN . lista_expresiones_opt RPAREN
    (22) lista_expresiones_opt -> . lista_expresiones
    (23) lista_expresiones_opt -> . empty
    (24) lista_expresiones -> . expression
    (25) lista_expresiones -> . expression COMMA lista_expresiones
    (112) empty -> .
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    RPAREN          reduce using rule 112 (empty -> .)
    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    lista_expresiones_opt          shift and go to state 142
    lista_expresiones              shift and go to state 143
    empty                          shift and go to state 144
    expression                     shift and go to state 145

state 76

    (45) expression -> LBRACKET expression . COMMA expression RBRACKET
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

    COMMA           shift and go to state 146
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72


state 77

    (78) expression -> IDENTIFIER . LPAREN lista_expresiones_opt RPAREN
    (82) expression -> IDENTIFIER .

    LPAREN          shift and go to state 75
    COMMA           reduce using rule 82 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 82 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 82 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 82 (expression -> IDENTIFIER .)
    DIV             reduce using rule 82 (expression -> IDENTIFIER .)
    MOD             reduce using rule 82 (expression -> IDENTIFIER .)
    PLUS_ASSIGN     reduce using rule 82 (expression -> IDENTIFIER .)
    MINUS_ASSIGN    reduce using rule 82 (expression -> IDENTIFIER .)
    MULT_ASSIGN     reduce using rule 82 (expression -> IDENTIFIER .)
    DIV_ASSIGN      reduce using rule 82 (expression -> IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 82 (expression -> IDENTIFIER .)
    POT             reduce using rule 82 (expression -> IDENTIFIER .)
    AND             reduce using rule 82 (expression -> IDENTIFIER .)
    OR              reduce using rule 82 (expression -> IDENTIFIER .)
    EQ              reduce using rule 82 (expression -> IDENTIFIER .)
    NEQ             reduce using rule 82 (expression -> IDENTIFIER .)
    STRICT_EQ       reduce using rule 82 (expression -> IDENTIFIER .)
    STRICT_NEQ      reduce using rule 82 (expression -> IDENTIFIER .)
    LT              reduce using rule 82 (expression -> IDENTIFIER .)
    GT              reduce using rule 82 (expression -> IDENTIFIER .)
    LE              reduce using rule 82 (expression -> IDENTIFIER .)
    GE              reduce using rule 82 (expression -> IDENTIFIER .)
    DOT             reduce using rule 82 (expression -> IDENTIFIER .)
    LBRACKET        reduce using rule 82 (expression -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 82 (expression -> IDENTIFIER .)
    MINUSMINUS      reduce using rule 82 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 82 (expression -> IDENTIFIER .)
    SEMICOLON       reduce using rule 82 (expression -> IDENTIFIER .)
    RBRACKET        reduce using rule 82 (expression -> IDENTIFIER .)
    RBRACE          reduce using rule 82 (expression -> IDENTIFIER .)
    COLON           reduce using rule 82 (expression -> IDENTIFIER .)


state 78

    (142) expression -> LBRACE . object_properties RBRACE
    (143) object_properties -> . object_property
    (144) object_properties -> . object_property COMMA object_properties
    (145) object_properties -> . empty
    (146) object_property -> . IDENTIFIER COLON expression
    (112) empty -> .

    IDENTIFIER      shift and go to state 148
    RBRACE          reduce using rule 112 (empty -> .)

    object_properties              shift and go to state 82
    object_property                shift and go to state 85
    empty                          shift and go to state 147

state 79

    (38) function -> FUNCTION IDENTIFIER . LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE

    LPAREN          shift and go to state 149


state 80

    (75) expression -> LPAREN expression . RPAREN
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

    RPAREN          shift and go to state 150
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72


state 81

    (94) statement -> LBRACE instruction_list . RBRACE
    (109) instruction_list -> instruction_list . statement
    (94) statement -> . LBRACE instruction_list RBRACE
    (95) statement -> . letAssignment
    (96) statement -> . varAssignment
    (97) statement -> . constAssignment
    (98) statement -> . declaracion
    (99) statement -> . function
    (100) statement -> . arrow_function
    (101) statement -> . async_function
    (102) statement -> . consolelog
    (103) statement -> . expression SEMICOLON
    (104) statement -> . controlEstructure
    (105) statement -> . RETURN expression SEMICOLON
    (106) statement -> . forEstructure
    (107) statement -> . RETURN SEMICOLON
    (108) statement -> . class_definition
    (19) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (20) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (134) varAssignment -> . VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
    (135) varAssignment -> . VAR IDENTIFIER EQUAL expression SEMICOLON
    (113) constAssignment -> . CONST IDENTIFIER COLON type EQUAL expression SEMICOLON
    (114) constAssignment -> . CONST IDENTIFIER EQUAL expression SEMICOLON
    (21) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (38) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (136) arrow_function -> . CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (132) async_function -> . ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (89) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE
    (90) controlEstructure -> . IF LPAREN expression RPAREN statement
    (91) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (92) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (93) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (123) controlEstructure -> . SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE
    (133) controlEstructure -> . WHILE LPAREN expression RPAREN statement
    (26) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (27) forEstructure -> . FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement
    (115) class_definition -> . CLASS IDENTIFIER LBRACE class_body RBRACE

    RBRACE          shift and go to state 151
    LBRACE          shift and go to state 23
    RETURN          shift and go to state 33
    LET             shift and go to state 18
    VAR             shift and go to state 45
    CONST           shift and go to state 98
    FUNCTION        shift and go to state 21
    ASYNC           shift and go to state 25
    CONSOLE         shift and go to state 44
    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    CLASS           shift and go to state 31

    statement                      shift and go to state 152
    letAssignment                  shift and go to state 86
    varAssignment                  shift and go to state 32
    constAssignment                shift and go to state 87
    declaracion                    shift and go to state 88
    function                       shift and go to state 89
    arrow_function                 shift and go to state 90
    async_function                 shift and go to state 91
    consolelog                     shift and go to state 92
    expression                     shift and go to state 93
    controlEstructure              shift and go to state 94
    forEstructure                  shift and go to state 95
    class_definition               shift and go to state 96

state 82

    (142) expression -> LBRACE object_properties . RBRACE

    RBRACE          shift and go to state 153


state 83

    (110) instruction_list -> statement .

    RBRACE          reduce using rule 110 (instruction_list -> statement .)
    LBRACE          reduce using rule 110 (instruction_list -> statement .)
    RETURN          reduce using rule 110 (instruction_list -> statement .)
    LET             reduce using rule 110 (instruction_list -> statement .)
    VAR             reduce using rule 110 (instruction_list -> statement .)
    CONST           reduce using rule 110 (instruction_list -> statement .)
    FUNCTION        reduce using rule 110 (instruction_list -> statement .)
    ASYNC           reduce using rule 110 (instruction_list -> statement .)
    CONSOLE         reduce using rule 110 (instruction_list -> statement .)
    LBRACKET        reduce using rule 110 (instruction_list -> statement .)
    PROMPT          reduce using rule 110 (instruction_list -> statement .)
    NOT             reduce using rule 110 (instruction_list -> statement .)
    LPAREN          reduce using rule 110 (instruction_list -> statement .)
    IDENTIFIER      reduce using rule 110 (instruction_list -> statement .)
    NUMBER          reduce using rule 110 (instruction_list -> statement .)
    FLOAT           reduce using rule 110 (instruction_list -> statement .)
    STRING          reduce using rule 110 (instruction_list -> statement .)
    TRUE            reduce using rule 110 (instruction_list -> statement .)
    FALSE           reduce using rule 110 (instruction_list -> statement .)
    PLUSPLUS        reduce using rule 110 (instruction_list -> statement .)
    MINUSMINUS      reduce using rule 110 (instruction_list -> statement .)
    IF              reduce using rule 110 (instruction_list -> statement .)
    SWITCH          reduce using rule 110 (instruction_list -> statement .)
    WHILE           reduce using rule 110 (instruction_list -> statement .)
    FOR             reduce using rule 110 (instruction_list -> statement .)
    CLASS           reduce using rule 110 (instruction_list -> statement .)
    CASE            reduce using rule 110 (instruction_list -> statement .)
    DEFAULT         reduce using rule 110 (instruction_list -> statement .)


state 84

    (111) instruction_list -> empty .
    (145) object_properties -> empty .

  ! reduce/reduce conflict for RBRACE resolved using rule 111 (instruction_list -> empty .)
    RBRACE          reduce using rule 111 (instruction_list -> empty .)
    LBRACE          reduce using rule 111 (instruction_list -> empty .)
    RETURN          reduce using rule 111 (instruction_list -> empty .)
    LET             reduce using rule 111 (instruction_list -> empty .)
    VAR             reduce using rule 111 (instruction_list -> empty .)
    CONST           reduce using rule 111 (instruction_list -> empty .)
    FUNCTION        reduce using rule 111 (instruction_list -> empty .)
    ASYNC           reduce using rule 111 (instruction_list -> empty .)
    CONSOLE         reduce using rule 111 (instruction_list -> empty .)
    LBRACKET        reduce using rule 111 (instruction_list -> empty .)
    PROMPT          reduce using rule 111 (instruction_list -> empty .)
    NOT             reduce using rule 111 (instruction_list -> empty .)
    LPAREN          reduce using rule 111 (instruction_list -> empty .)
    IDENTIFIER      reduce using rule 111 (instruction_list -> empty .)
    NUMBER          reduce using rule 111 (instruction_list -> empty .)
    FLOAT           reduce using rule 111 (instruction_list -> empty .)
    STRING          reduce using rule 111 (instruction_list -> empty .)
    TRUE            reduce using rule 111 (instruction_list -> empty .)
    FALSE           reduce using rule 111 (instruction_list -> empty .)
    PLUSPLUS        reduce using rule 111 (instruction_list -> empty .)
    MINUSMINUS      reduce using rule 111 (instruction_list -> empty .)
    IF              reduce using rule 111 (instruction_list -> empty .)
    SWITCH          reduce using rule 111 (instruction_list -> empty .)
    WHILE           reduce using rule 111 (instruction_list -> empty .)
    FOR             reduce using rule 111 (instruction_list -> empty .)
    CLASS           reduce using rule 111 (instruction_list -> empty .)

  ! RBRACE          [ reduce using rule 145 (object_properties -> empty .) ]


state 85

    (143) object_properties -> object_property .
    (144) object_properties -> object_property . COMMA object_properties

    RBRACE          reduce using rule 143 (object_properties -> object_property .)
    COMMA           shift and go to state 154


state 86

    (95) statement -> letAssignment .

    RBRACE          reduce using rule 95 (statement -> letAssignment .)
    LBRACE          reduce using rule 95 (statement -> letAssignment .)
    RETURN          reduce using rule 95 (statement -> letAssignment .)
    LET             reduce using rule 95 (statement -> letAssignment .)
    VAR             reduce using rule 95 (statement -> letAssignment .)
    CONST           reduce using rule 95 (statement -> letAssignment .)
    FUNCTION        reduce using rule 95 (statement -> letAssignment .)
    ASYNC           reduce using rule 95 (statement -> letAssignment .)
    CONSOLE         reduce using rule 95 (statement -> letAssignment .)
    LBRACKET        reduce using rule 95 (statement -> letAssignment .)
    PROMPT          reduce using rule 95 (statement -> letAssignment .)
    NOT             reduce using rule 95 (statement -> letAssignment .)
    LPAREN          reduce using rule 95 (statement -> letAssignment .)
    IDENTIFIER      reduce using rule 95 (statement -> letAssignment .)
    NUMBER          reduce using rule 95 (statement -> letAssignment .)
    FLOAT           reduce using rule 95 (statement -> letAssignment .)
    STRING          reduce using rule 95 (statement -> letAssignment .)
    TRUE            reduce using rule 95 (statement -> letAssignment .)
    FALSE           reduce using rule 95 (statement -> letAssignment .)
    PLUSPLUS        reduce using rule 95 (statement -> letAssignment .)
    MINUSMINUS      reduce using rule 95 (statement -> letAssignment .)
    IF              reduce using rule 95 (statement -> letAssignment .)
    SWITCH          reduce using rule 95 (statement -> letAssignment .)
    WHILE           reduce using rule 95 (statement -> letAssignment .)
    FOR             reduce using rule 95 (statement -> letAssignment .)
    CLASS           reduce using rule 95 (statement -> letAssignment .)
    ELSE            reduce using rule 95 (statement -> letAssignment .)
    ENUM            reduce using rule 95 (statement -> letAssignment .)
    INTERFACE       reduce using rule 95 (statement -> letAssignment .)
    $end            reduce using rule 95 (statement -> letAssignment .)
    CASE            reduce using rule 95 (statement -> letAssignment .)
    DEFAULT         reduce using rule 95 (statement -> letAssignment .)


state 87

    (97) statement -> constAssignment .

    RBRACE          reduce using rule 97 (statement -> constAssignment .)
    LBRACE          reduce using rule 97 (statement -> constAssignment .)
    RETURN          reduce using rule 97 (statement -> constAssignment .)
    LET             reduce using rule 97 (statement -> constAssignment .)
    VAR             reduce using rule 97 (statement -> constAssignment .)
    CONST           reduce using rule 97 (statement -> constAssignment .)
    FUNCTION        reduce using rule 97 (statement -> constAssignment .)
    ASYNC           reduce using rule 97 (statement -> constAssignment .)
    CONSOLE         reduce using rule 97 (statement -> constAssignment .)
    LBRACKET        reduce using rule 97 (statement -> constAssignment .)
    PROMPT          reduce using rule 97 (statement -> constAssignment .)
    NOT             reduce using rule 97 (statement -> constAssignment .)
    LPAREN          reduce using rule 97 (statement -> constAssignment .)
    IDENTIFIER      reduce using rule 97 (statement -> constAssignment .)
    NUMBER          reduce using rule 97 (statement -> constAssignment .)
    FLOAT           reduce using rule 97 (statement -> constAssignment .)
    STRING          reduce using rule 97 (statement -> constAssignment .)
    TRUE            reduce using rule 97 (statement -> constAssignment .)
    FALSE           reduce using rule 97 (statement -> constAssignment .)
    PLUSPLUS        reduce using rule 97 (statement -> constAssignment .)
    MINUSMINUS      reduce using rule 97 (statement -> constAssignment .)
    IF              reduce using rule 97 (statement -> constAssignment .)
    SWITCH          reduce using rule 97 (statement -> constAssignment .)
    WHILE           reduce using rule 97 (statement -> constAssignment .)
    FOR             reduce using rule 97 (statement -> constAssignment .)
    CLASS           reduce using rule 97 (statement -> constAssignment .)
    ELSE            reduce using rule 97 (statement -> constAssignment .)
    ENUM            reduce using rule 97 (statement -> constAssignment .)
    INTERFACE       reduce using rule 97 (statement -> constAssignment .)
    $end            reduce using rule 97 (statement -> constAssignment .)
    CASE            reduce using rule 97 (statement -> constAssignment .)
    DEFAULT         reduce using rule 97 (statement -> constAssignment .)


state 88

    (98) statement -> declaracion .

    RBRACE          reduce using rule 98 (statement -> declaracion .)
    LBRACE          reduce using rule 98 (statement -> declaracion .)
    RETURN          reduce using rule 98 (statement -> declaracion .)
    LET             reduce using rule 98 (statement -> declaracion .)
    VAR             reduce using rule 98 (statement -> declaracion .)
    CONST           reduce using rule 98 (statement -> declaracion .)
    FUNCTION        reduce using rule 98 (statement -> declaracion .)
    ASYNC           reduce using rule 98 (statement -> declaracion .)
    CONSOLE         reduce using rule 98 (statement -> declaracion .)
    LBRACKET        reduce using rule 98 (statement -> declaracion .)
    PROMPT          reduce using rule 98 (statement -> declaracion .)
    NOT             reduce using rule 98 (statement -> declaracion .)
    LPAREN          reduce using rule 98 (statement -> declaracion .)
    IDENTIFIER      reduce using rule 98 (statement -> declaracion .)
    NUMBER          reduce using rule 98 (statement -> declaracion .)
    FLOAT           reduce using rule 98 (statement -> declaracion .)
    STRING          reduce using rule 98 (statement -> declaracion .)
    TRUE            reduce using rule 98 (statement -> declaracion .)
    FALSE           reduce using rule 98 (statement -> declaracion .)
    PLUSPLUS        reduce using rule 98 (statement -> declaracion .)
    MINUSMINUS      reduce using rule 98 (statement -> declaracion .)
    IF              reduce using rule 98 (statement -> declaracion .)
    SWITCH          reduce using rule 98 (statement -> declaracion .)
    WHILE           reduce using rule 98 (statement -> declaracion .)
    FOR             reduce using rule 98 (statement -> declaracion .)
    CLASS           reduce using rule 98 (statement -> declaracion .)
    ELSE            reduce using rule 98 (statement -> declaracion .)
    ENUM            reduce using rule 98 (statement -> declaracion .)
    INTERFACE       reduce using rule 98 (statement -> declaracion .)
    $end            reduce using rule 98 (statement -> declaracion .)
    CASE            reduce using rule 98 (statement -> declaracion .)
    DEFAULT         reduce using rule 98 (statement -> declaracion .)


state 89

    (99) statement -> function .

    RBRACE          reduce using rule 99 (statement -> function .)
    LBRACE          reduce using rule 99 (statement -> function .)
    RETURN          reduce using rule 99 (statement -> function .)
    LET             reduce using rule 99 (statement -> function .)
    VAR             reduce using rule 99 (statement -> function .)
    CONST           reduce using rule 99 (statement -> function .)
    FUNCTION        reduce using rule 99 (statement -> function .)
    ASYNC           reduce using rule 99 (statement -> function .)
    CONSOLE         reduce using rule 99 (statement -> function .)
    LBRACKET        reduce using rule 99 (statement -> function .)
    PROMPT          reduce using rule 99 (statement -> function .)
    NOT             reduce using rule 99 (statement -> function .)
    LPAREN          reduce using rule 99 (statement -> function .)
    IDENTIFIER      reduce using rule 99 (statement -> function .)
    NUMBER          reduce using rule 99 (statement -> function .)
    FLOAT           reduce using rule 99 (statement -> function .)
    STRING          reduce using rule 99 (statement -> function .)
    TRUE            reduce using rule 99 (statement -> function .)
    FALSE           reduce using rule 99 (statement -> function .)
    PLUSPLUS        reduce using rule 99 (statement -> function .)
    MINUSMINUS      reduce using rule 99 (statement -> function .)
    IF              reduce using rule 99 (statement -> function .)
    SWITCH          reduce using rule 99 (statement -> function .)
    WHILE           reduce using rule 99 (statement -> function .)
    FOR             reduce using rule 99 (statement -> function .)
    CLASS           reduce using rule 99 (statement -> function .)
    ELSE            reduce using rule 99 (statement -> function .)
    ENUM            reduce using rule 99 (statement -> function .)
    INTERFACE       reduce using rule 99 (statement -> function .)
    $end            reduce using rule 99 (statement -> function .)
    CASE            reduce using rule 99 (statement -> function .)
    DEFAULT         reduce using rule 99 (statement -> function .)


state 90

    (100) statement -> arrow_function .

    RBRACE          reduce using rule 100 (statement -> arrow_function .)
    LBRACE          reduce using rule 100 (statement -> arrow_function .)
    RETURN          reduce using rule 100 (statement -> arrow_function .)
    LET             reduce using rule 100 (statement -> arrow_function .)
    VAR             reduce using rule 100 (statement -> arrow_function .)
    CONST           reduce using rule 100 (statement -> arrow_function .)
    FUNCTION        reduce using rule 100 (statement -> arrow_function .)
    ASYNC           reduce using rule 100 (statement -> arrow_function .)
    CONSOLE         reduce using rule 100 (statement -> arrow_function .)
    LBRACKET        reduce using rule 100 (statement -> arrow_function .)
    PROMPT          reduce using rule 100 (statement -> arrow_function .)
    NOT             reduce using rule 100 (statement -> arrow_function .)
    LPAREN          reduce using rule 100 (statement -> arrow_function .)
    IDENTIFIER      reduce using rule 100 (statement -> arrow_function .)
    NUMBER          reduce using rule 100 (statement -> arrow_function .)
    FLOAT           reduce using rule 100 (statement -> arrow_function .)
    STRING          reduce using rule 100 (statement -> arrow_function .)
    TRUE            reduce using rule 100 (statement -> arrow_function .)
    FALSE           reduce using rule 100 (statement -> arrow_function .)
    PLUSPLUS        reduce using rule 100 (statement -> arrow_function .)
    MINUSMINUS      reduce using rule 100 (statement -> arrow_function .)
    IF              reduce using rule 100 (statement -> arrow_function .)
    SWITCH          reduce using rule 100 (statement -> arrow_function .)
    WHILE           reduce using rule 100 (statement -> arrow_function .)
    FOR             reduce using rule 100 (statement -> arrow_function .)
    CLASS           reduce using rule 100 (statement -> arrow_function .)
    ELSE            reduce using rule 100 (statement -> arrow_function .)
    ENUM            reduce using rule 100 (statement -> arrow_function .)
    INTERFACE       reduce using rule 100 (statement -> arrow_function .)
    $end            reduce using rule 100 (statement -> arrow_function .)
    CASE            reduce using rule 100 (statement -> arrow_function .)
    DEFAULT         reduce using rule 100 (statement -> arrow_function .)


state 91

    (101) statement -> async_function .

    RBRACE          reduce using rule 101 (statement -> async_function .)
    LBRACE          reduce using rule 101 (statement -> async_function .)
    RETURN          reduce using rule 101 (statement -> async_function .)
    LET             reduce using rule 101 (statement -> async_function .)
    VAR             reduce using rule 101 (statement -> async_function .)
    CONST           reduce using rule 101 (statement -> async_function .)
    FUNCTION        reduce using rule 101 (statement -> async_function .)
    ASYNC           reduce using rule 101 (statement -> async_function .)
    CONSOLE         reduce using rule 101 (statement -> async_function .)
    LBRACKET        reduce using rule 101 (statement -> async_function .)
    PROMPT          reduce using rule 101 (statement -> async_function .)
    NOT             reduce using rule 101 (statement -> async_function .)
    LPAREN          reduce using rule 101 (statement -> async_function .)
    IDENTIFIER      reduce using rule 101 (statement -> async_function .)
    NUMBER          reduce using rule 101 (statement -> async_function .)
    FLOAT           reduce using rule 101 (statement -> async_function .)
    STRING          reduce using rule 101 (statement -> async_function .)
    TRUE            reduce using rule 101 (statement -> async_function .)
    FALSE           reduce using rule 101 (statement -> async_function .)
    PLUSPLUS        reduce using rule 101 (statement -> async_function .)
    MINUSMINUS      reduce using rule 101 (statement -> async_function .)
    IF              reduce using rule 101 (statement -> async_function .)
    SWITCH          reduce using rule 101 (statement -> async_function .)
    WHILE           reduce using rule 101 (statement -> async_function .)
    FOR             reduce using rule 101 (statement -> async_function .)
    CLASS           reduce using rule 101 (statement -> async_function .)
    ELSE            reduce using rule 101 (statement -> async_function .)
    ENUM            reduce using rule 101 (statement -> async_function .)
    INTERFACE       reduce using rule 101 (statement -> async_function .)
    $end            reduce using rule 101 (statement -> async_function .)
    CASE            reduce using rule 101 (statement -> async_function .)
    DEFAULT         reduce using rule 101 (statement -> async_function .)


state 92

    (102) statement -> consolelog .

    RBRACE          reduce using rule 102 (statement -> consolelog .)
    LBRACE          reduce using rule 102 (statement -> consolelog .)
    RETURN          reduce using rule 102 (statement -> consolelog .)
    LET             reduce using rule 102 (statement -> consolelog .)
    VAR             reduce using rule 102 (statement -> consolelog .)
    CONST           reduce using rule 102 (statement -> consolelog .)
    FUNCTION        reduce using rule 102 (statement -> consolelog .)
    ASYNC           reduce using rule 102 (statement -> consolelog .)
    CONSOLE         reduce using rule 102 (statement -> consolelog .)
    LBRACKET        reduce using rule 102 (statement -> consolelog .)
    PROMPT          reduce using rule 102 (statement -> consolelog .)
    NOT             reduce using rule 102 (statement -> consolelog .)
    LPAREN          reduce using rule 102 (statement -> consolelog .)
    IDENTIFIER      reduce using rule 102 (statement -> consolelog .)
    NUMBER          reduce using rule 102 (statement -> consolelog .)
    FLOAT           reduce using rule 102 (statement -> consolelog .)
    STRING          reduce using rule 102 (statement -> consolelog .)
    TRUE            reduce using rule 102 (statement -> consolelog .)
    FALSE           reduce using rule 102 (statement -> consolelog .)
    PLUSPLUS        reduce using rule 102 (statement -> consolelog .)
    MINUSMINUS      reduce using rule 102 (statement -> consolelog .)
    IF              reduce using rule 102 (statement -> consolelog .)
    SWITCH          reduce using rule 102 (statement -> consolelog .)
    WHILE           reduce using rule 102 (statement -> consolelog .)
    FOR             reduce using rule 102 (statement -> consolelog .)
    CLASS           reduce using rule 102 (statement -> consolelog .)
    ELSE            reduce using rule 102 (statement -> consolelog .)
    ENUM            reduce using rule 102 (statement -> consolelog .)
    INTERFACE       reduce using rule 102 (statement -> consolelog .)
    $end            reduce using rule 102 (statement -> consolelog .)
    CASE            reduce using rule 102 (statement -> consolelog .)
    DEFAULT         reduce using rule 102 (statement -> consolelog .)


state 93

    (103) statement -> expression . SEMICOLON
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

    SEMICOLON       shift and go to state 155
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72


state 94

    (104) statement -> controlEstructure .

    RBRACE          reduce using rule 104 (statement -> controlEstructure .)
    LBRACE          reduce using rule 104 (statement -> controlEstructure .)
    RETURN          reduce using rule 104 (statement -> controlEstructure .)
    LET             reduce using rule 104 (statement -> controlEstructure .)
    VAR             reduce using rule 104 (statement -> controlEstructure .)
    CONST           reduce using rule 104 (statement -> controlEstructure .)
    FUNCTION        reduce using rule 104 (statement -> controlEstructure .)
    ASYNC           reduce using rule 104 (statement -> controlEstructure .)
    CONSOLE         reduce using rule 104 (statement -> controlEstructure .)
    LBRACKET        reduce using rule 104 (statement -> controlEstructure .)
    PROMPT          reduce using rule 104 (statement -> controlEstructure .)
    NOT             reduce using rule 104 (statement -> controlEstructure .)
    LPAREN          reduce using rule 104 (statement -> controlEstructure .)
    IDENTIFIER      reduce using rule 104 (statement -> controlEstructure .)
    NUMBER          reduce using rule 104 (statement -> controlEstructure .)
    FLOAT           reduce using rule 104 (statement -> controlEstructure .)
    STRING          reduce using rule 104 (statement -> controlEstructure .)
    TRUE            reduce using rule 104 (statement -> controlEstructure .)
    FALSE           reduce using rule 104 (statement -> controlEstructure .)
    PLUSPLUS        reduce using rule 104 (statement -> controlEstructure .)
    MINUSMINUS      reduce using rule 104 (statement -> controlEstructure .)
    IF              reduce using rule 104 (statement -> controlEstructure .)
    SWITCH          reduce using rule 104 (statement -> controlEstructure .)
    WHILE           reduce using rule 104 (statement -> controlEstructure .)
    FOR             reduce using rule 104 (statement -> controlEstructure .)
    CLASS           reduce using rule 104 (statement -> controlEstructure .)
    ELSE            reduce using rule 104 (statement -> controlEstructure .)
    ENUM            reduce using rule 104 (statement -> controlEstructure .)
    INTERFACE       reduce using rule 104 (statement -> controlEstructure .)
    $end            reduce using rule 104 (statement -> controlEstructure .)
    CASE            reduce using rule 104 (statement -> controlEstructure .)
    DEFAULT         reduce using rule 104 (statement -> controlEstructure .)


state 95

    (106) statement -> forEstructure .

    RBRACE          reduce using rule 106 (statement -> forEstructure .)
    LBRACE          reduce using rule 106 (statement -> forEstructure .)
    RETURN          reduce using rule 106 (statement -> forEstructure .)
    LET             reduce using rule 106 (statement -> forEstructure .)
    VAR             reduce using rule 106 (statement -> forEstructure .)
    CONST           reduce using rule 106 (statement -> forEstructure .)
    FUNCTION        reduce using rule 106 (statement -> forEstructure .)
    ASYNC           reduce using rule 106 (statement -> forEstructure .)
    CONSOLE         reduce using rule 106 (statement -> forEstructure .)
    LBRACKET        reduce using rule 106 (statement -> forEstructure .)
    PROMPT          reduce using rule 106 (statement -> forEstructure .)
    NOT             reduce using rule 106 (statement -> forEstructure .)
    LPAREN          reduce using rule 106 (statement -> forEstructure .)
    IDENTIFIER      reduce using rule 106 (statement -> forEstructure .)
    NUMBER          reduce using rule 106 (statement -> forEstructure .)
    FLOAT           reduce using rule 106 (statement -> forEstructure .)
    STRING          reduce using rule 106 (statement -> forEstructure .)
    TRUE            reduce using rule 106 (statement -> forEstructure .)
    FALSE           reduce using rule 106 (statement -> forEstructure .)
    PLUSPLUS        reduce using rule 106 (statement -> forEstructure .)
    MINUSMINUS      reduce using rule 106 (statement -> forEstructure .)
    IF              reduce using rule 106 (statement -> forEstructure .)
    SWITCH          reduce using rule 106 (statement -> forEstructure .)
    WHILE           reduce using rule 106 (statement -> forEstructure .)
    FOR             reduce using rule 106 (statement -> forEstructure .)
    CLASS           reduce using rule 106 (statement -> forEstructure .)
    ELSE            reduce using rule 106 (statement -> forEstructure .)
    ENUM            reduce using rule 106 (statement -> forEstructure .)
    INTERFACE       reduce using rule 106 (statement -> forEstructure .)
    $end            reduce using rule 106 (statement -> forEstructure .)
    CASE            reduce using rule 106 (statement -> forEstructure .)
    DEFAULT         reduce using rule 106 (statement -> forEstructure .)


state 96

    (108) statement -> class_definition .

    RBRACE          reduce using rule 108 (statement -> class_definition .)
    LBRACE          reduce using rule 108 (statement -> class_definition .)
    RETURN          reduce using rule 108 (statement -> class_definition .)
    LET             reduce using rule 108 (statement -> class_definition .)
    VAR             reduce using rule 108 (statement -> class_definition .)
    CONST           reduce using rule 108 (statement -> class_definition .)
    FUNCTION        reduce using rule 108 (statement -> class_definition .)
    ASYNC           reduce using rule 108 (statement -> class_definition .)
    CONSOLE         reduce using rule 108 (statement -> class_definition .)
    LBRACKET        reduce using rule 108 (statement -> class_definition .)
    PROMPT          reduce using rule 108 (statement -> class_definition .)
    NOT             reduce using rule 108 (statement -> class_definition .)
    LPAREN          reduce using rule 108 (statement -> class_definition .)
    IDENTIFIER      reduce using rule 108 (statement -> class_definition .)
    NUMBER          reduce using rule 108 (statement -> class_definition .)
    FLOAT           reduce using rule 108 (statement -> class_definition .)
    STRING          reduce using rule 108 (statement -> class_definition .)
    TRUE            reduce using rule 108 (statement -> class_definition .)
    FALSE           reduce using rule 108 (statement -> class_definition .)
    PLUSPLUS        reduce using rule 108 (statement -> class_definition .)
    MINUSMINUS      reduce using rule 108 (statement -> class_definition .)
    IF              reduce using rule 108 (statement -> class_definition .)
    SWITCH          reduce using rule 108 (statement -> class_definition .)
    WHILE           reduce using rule 108 (statement -> class_definition .)
    FOR             reduce using rule 108 (statement -> class_definition .)
    CLASS           reduce using rule 108 (statement -> class_definition .)
    ELSE            reduce using rule 108 (statement -> class_definition .)
    ENUM            reduce using rule 108 (statement -> class_definition .)
    INTERFACE       reduce using rule 108 (statement -> class_definition .)
    $end            reduce using rule 108 (statement -> class_definition .)
    CASE            reduce using rule 108 (statement -> class_definition .)
    DEFAULT         reduce using rule 108 (statement -> class_definition .)


state 97

    (146) object_property -> IDENTIFIER . COLON expression
    (78) expression -> IDENTIFIER . LPAREN lista_expresiones_opt RPAREN
    (82) expression -> IDENTIFIER .

    COLON           shift and go to state 156
    LPAREN          shift and go to state 75
    SEMICOLON       reduce using rule 82 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 82 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 82 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 82 (expression -> IDENTIFIER .)
    DIV             reduce using rule 82 (expression -> IDENTIFIER .)
    MOD             reduce using rule 82 (expression -> IDENTIFIER .)
    PLUS_ASSIGN     reduce using rule 82 (expression -> IDENTIFIER .)
    MINUS_ASSIGN    reduce using rule 82 (expression -> IDENTIFIER .)
    MULT_ASSIGN     reduce using rule 82 (expression -> IDENTIFIER .)
    DIV_ASSIGN      reduce using rule 82 (expression -> IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 82 (expression -> IDENTIFIER .)
    POT             reduce using rule 82 (expression -> IDENTIFIER .)
    AND             reduce using rule 82 (expression -> IDENTIFIER .)
    OR              reduce using rule 82 (expression -> IDENTIFIER .)
    EQ              reduce using rule 82 (expression -> IDENTIFIER .)
    NEQ             reduce using rule 82 (expression -> IDENTIFIER .)
    STRICT_EQ       reduce using rule 82 (expression -> IDENTIFIER .)
    STRICT_NEQ      reduce using rule 82 (expression -> IDENTIFIER .)
    LT              reduce using rule 82 (expression -> IDENTIFIER .)
    GT              reduce using rule 82 (expression -> IDENTIFIER .)
    LE              reduce using rule 82 (expression -> IDENTIFIER .)
    GE              reduce using rule 82 (expression -> IDENTIFIER .)
    DOT             reduce using rule 82 (expression -> IDENTIFIER .)
    LBRACKET        reduce using rule 82 (expression -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 82 (expression -> IDENTIFIER .)
    MINUSMINUS      reduce using rule 82 (expression -> IDENTIFIER .)


state 98

    (113) constAssignment -> CONST . IDENTIFIER COLON type EQUAL expression SEMICOLON
    (114) constAssignment -> CONST . IDENTIFIER EQUAL expression SEMICOLON
    (136) arrow_function -> CONST . IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON

    IDENTIFIER      shift and go to state 157


state 99

    (136) arrow_function -> CONST IDENTIFIER . EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (113) constAssignment -> CONST IDENTIFIER . COLON type EQUAL expression SEMICOLON
    (114) constAssignment -> CONST IDENTIFIER . EQUAL expression SEMICOLON

    EQUAL           shift and go to state 158
    COLON           shift and go to state 159


state 100

    (132) async_function -> ASYNC FUNCTION . IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE

    IDENTIFIER      shift and go to state 160


state 101

    (129) enum_definition -> ENUM IDENTIFIER . LBRACE enum_members RBRACE

    LBRACE          shift and go to state 161


state 102

    (90) controlEstructure -> IF LPAREN . expression RPAREN statement
    (91) controlEstructure -> IF LPAREN . expression RPAREN statement ELSE statement
    (92) controlEstructure -> IF LPAREN . expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (93) controlEstructure -> IF LPAREN . expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 162

state 103

    (123) controlEstructure -> SWITCH LPAREN . expression RPAREN LBRACE case_block RBRACE
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 163

state 104

    (133) controlEstructure -> WHILE LPAREN . expression RPAREN statement
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 164

state 105

    (26) forEstructure -> FOR LPAREN . for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (27) forEstructure -> FOR LPAREN . CONST IDENTIFIER OF IDENTIFIER RPAREN statement
    (28) for_init -> . LET IDENTIFIER EQUAL expression
    (29) for_init -> . LET IDENTIFIER COLON type EQUAL expression
    (30) for_init -> . expression
    (31) for_init -> . empty
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE
    (112) empty -> .

    CONST           shift and go to state 167
    LET             shift and go to state 168
    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78
    SEMICOLON       reduce using rule 112 (empty -> .)

    for_init                       shift and go to state 165
    expression                     shift and go to state 166
    empty                          shift and go to state 169

state 106

    (115) class_definition -> CLASS IDENTIFIER . LBRACE class_body RBRACE

    LBRACE          shift and go to state 170


state 107

    (105) statement -> RETURN expression . SEMICOLON
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

    SEMICOLON       shift and go to state 171
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72


state 108

    (107) statement -> RETURN SEMICOLON .

    LET             reduce using rule 107 (statement -> RETURN SEMICOLON .)
    FUNCTION        reduce using rule 107 (statement -> RETURN SEMICOLON .)
    CONST           reduce using rule 107 (statement -> RETURN SEMICOLON .)
    ASYNC           reduce using rule 107 (statement -> RETURN SEMICOLON .)
    ENUM            reduce using rule 107 (statement -> RETURN SEMICOLON .)
    IF              reduce using rule 107 (statement -> RETURN SEMICOLON .)
    SWITCH          reduce using rule 107 (statement -> RETURN SEMICOLON .)
    WHILE           reduce using rule 107 (statement -> RETURN SEMICOLON .)
    FOR             reduce using rule 107 (statement -> RETURN SEMICOLON .)
    CLASS           reduce using rule 107 (statement -> RETURN SEMICOLON .)
    LBRACE          reduce using rule 107 (statement -> RETURN SEMICOLON .)
    RETURN          reduce using rule 107 (statement -> RETURN SEMICOLON .)
    INTERFACE       reduce using rule 107 (statement -> RETURN SEMICOLON .)
    IDENTIFIER      reduce using rule 107 (statement -> RETURN SEMICOLON .)
    LBRACKET        reduce using rule 107 (statement -> RETURN SEMICOLON .)
    PROMPT          reduce using rule 107 (statement -> RETURN SEMICOLON .)
    NOT             reduce using rule 107 (statement -> RETURN SEMICOLON .)
    LPAREN          reduce using rule 107 (statement -> RETURN SEMICOLON .)
    NUMBER          reduce using rule 107 (statement -> RETURN SEMICOLON .)
    FLOAT           reduce using rule 107 (statement -> RETURN SEMICOLON .)
    STRING          reduce using rule 107 (statement -> RETURN SEMICOLON .)
    TRUE            reduce using rule 107 (statement -> RETURN SEMICOLON .)
    FALSE           reduce using rule 107 (statement -> RETURN SEMICOLON .)
    PLUSPLUS        reduce using rule 107 (statement -> RETURN SEMICOLON .)
    MINUSMINUS      reduce using rule 107 (statement -> RETURN SEMICOLON .)
    CONSOLE         reduce using rule 107 (statement -> RETURN SEMICOLON .)
    VAR             reduce using rule 107 (statement -> RETURN SEMICOLON .)
    $end            reduce using rule 107 (statement -> RETURN SEMICOLON .)
    RBRACE          reduce using rule 107 (statement -> RETURN SEMICOLON .)
    ELSE            reduce using rule 107 (statement -> RETURN SEMICOLON .)
    CASE            reduce using rule 107 (statement -> RETURN SEMICOLON .)
    DEFAULT         reduce using rule 107 (statement -> RETURN SEMICOLON .)


state 109

    (137) interface -> INTERFACE IDENTIFIER . LBRACE interface_body RBRACE

    LBRACE          shift and go to state 172


state 110

    (73) expression -> PROMPT LPAREN . STRING RPAREN

    STRING          shift and go to state 173


state 111

    (74) expression -> NOT expression .
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 74 (expression -> NOT expression .)
    COMMA           reduce using rule 74 (expression -> NOT expression .)
    RPAREN          reduce using rule 74 (expression -> NOT expression .)
    RBRACKET        reduce using rule 74 (expression -> NOT expression .)
    RBRACE          reduce using rule 74 (expression -> NOT expression .)
    COLON           reduce using rule 74 (expression -> NOT expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72

  ! PLUS            [ reduce using rule 74 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 74 (expression -> NOT expression .) ]
  ! TIMES           [ reduce using rule 74 (expression -> NOT expression .) ]
  ! DIV             [ reduce using rule 74 (expression -> NOT expression .) ]
  ! MOD             [ reduce using rule 74 (expression -> NOT expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 74 (expression -> NOT expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 74 (expression -> NOT expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 74 (expression -> NOT expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 74 (expression -> NOT expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 74 (expression -> NOT expression .) ]
  ! POT             [ reduce using rule 74 (expression -> NOT expression .) ]
  ! AND             [ reduce using rule 74 (expression -> NOT expression .) ]
  ! OR              [ reduce using rule 74 (expression -> NOT expression .) ]
  ! EQ              [ reduce using rule 74 (expression -> NOT expression .) ]
  ! NEQ             [ reduce using rule 74 (expression -> NOT expression .) ]
  ! STRICT_EQ       [ reduce using rule 74 (expression -> NOT expression .) ]
  ! STRICT_NEQ      [ reduce using rule 74 (expression -> NOT expression .) ]
  ! LT              [ reduce using rule 74 (expression -> NOT expression .) ]
  ! GT              [ reduce using rule 74 (expression -> NOT expression .) ]
  ! LE              [ reduce using rule 74 (expression -> NOT expression .) ]
  ! GE              [ reduce using rule 74 (expression -> NOT expression .) ]
  ! DOT             [ reduce using rule 74 (expression -> NOT expression .) ]
  ! LBRACKET        [ reduce using rule 74 (expression -> NOT expression .) ]
  ! PLUSPLUS        [ reduce using rule 74 (expression -> NOT expression .) ]
  ! MINUSMINUS      [ reduce using rule 74 (expression -> NOT expression .) ]


state 112

    (87) expression -> PLUSPLUS expression .
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 87 (expression -> PLUSPLUS expression .)
    COMMA           reduce using rule 87 (expression -> PLUSPLUS expression .)
    RPAREN          reduce using rule 87 (expression -> PLUSPLUS expression .)
    RBRACKET        reduce using rule 87 (expression -> PLUSPLUS expression .)
    RBRACE          reduce using rule 87 (expression -> PLUSPLUS expression .)
    COLON           reduce using rule 87 (expression -> PLUSPLUS expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72

  ! PLUS            [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! MINUS           [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! TIMES           [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! DIV             [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! MOD             [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! POT             [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! AND             [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! OR              [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! EQ              [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! NEQ             [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! STRICT_EQ       [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! STRICT_NEQ      [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! LT              [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! GT              [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! LE              [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! GE              [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! DOT             [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! LBRACKET        [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! PLUSPLUS        [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! MINUSMINUS      [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]


state 113

    (88) expression -> MINUSMINUS expression .
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 88 (expression -> MINUSMINUS expression .)
    COMMA           reduce using rule 88 (expression -> MINUSMINUS expression .)
    RPAREN          reduce using rule 88 (expression -> MINUSMINUS expression .)
    RBRACKET        reduce using rule 88 (expression -> MINUSMINUS expression .)
    RBRACE          reduce using rule 88 (expression -> MINUSMINUS expression .)
    COLON           reduce using rule 88 (expression -> MINUSMINUS expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72

  ! PLUS            [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! MINUS           [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! TIMES           [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! DIV             [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! MOD             [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! POT             [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! AND             [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! OR              [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! EQ              [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! NEQ             [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! STRICT_EQ       [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! STRICT_NEQ      [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! LT              [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! GT              [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! LE              [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! GE              [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! DOT             [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! LBRACKET        [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! PLUSPLUS        [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! MINUSMINUS      [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]


state 114

    (89) consolelog -> CONSOLE DOT . LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON

    LOG             shift and go to state 174


state 115

    (134) varAssignment -> VAR IDENTIFIER . COLON type EQUAL expression SEMICOLON
    (135) varAssignment -> VAR IDENTIFIER . EQUAL expression SEMICOLON

    COLON           shift and go to state 175
    EQUAL           shift and go to state 176


state 116

    (52) expression -> expression PLUS expression .
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 52 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 52 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 52 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 52 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 52 (expression -> expression PLUS expression .)
    COLON           reduce using rule 52 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72

  ! PLUS            [ reduce using rule 52 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 52 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 52 (expression -> expression PLUS expression .) ]
  ! DIV             [ reduce using rule 52 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 52 (expression -> expression PLUS expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 52 (expression -> expression PLUS expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 52 (expression -> expression PLUS expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 52 (expression -> expression PLUS expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 52 (expression -> expression PLUS expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 52 (expression -> expression PLUS expression .) ]
  ! POT             [ reduce using rule 52 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 52 (expression -> expression PLUS expression .) ]
  ! OR              [ reduce using rule 52 (expression -> expression PLUS expression .) ]
  ! EQ              [ reduce using rule 52 (expression -> expression PLUS expression .) ]
  ! NEQ             [ reduce using rule 52 (expression -> expression PLUS expression .) ]
  ! STRICT_EQ       [ reduce using rule 52 (expression -> expression PLUS expression .) ]
  ! STRICT_NEQ      [ reduce using rule 52 (expression -> expression PLUS expression .) ]
  ! LT              [ reduce using rule 52 (expression -> expression PLUS expression .) ]
  ! GT              [ reduce using rule 52 (expression -> expression PLUS expression .) ]
  ! LE              [ reduce using rule 52 (expression -> expression PLUS expression .) ]
  ! GE              [ reduce using rule 52 (expression -> expression PLUS expression .) ]
  ! DOT             [ reduce using rule 52 (expression -> expression PLUS expression .) ]
  ! LBRACKET        [ reduce using rule 52 (expression -> expression PLUS expression .) ]
  ! PLUSPLUS        [ reduce using rule 52 (expression -> expression PLUS expression .) ]
  ! MINUSMINUS      [ reduce using rule 52 (expression -> expression PLUS expression .) ]


state 117

    (53) expression -> expression MINUS expression .
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 53 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 53 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 53 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 53 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 53 (expression -> expression MINUS expression .)
    COLON           reduce using rule 53 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72

  ! PLUS            [ reduce using rule 53 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 53 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 53 (expression -> expression MINUS expression .) ]
  ! DIV             [ reduce using rule 53 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 53 (expression -> expression MINUS expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 53 (expression -> expression MINUS expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 53 (expression -> expression MINUS expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 53 (expression -> expression MINUS expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 53 (expression -> expression MINUS expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 53 (expression -> expression MINUS expression .) ]
  ! POT             [ reduce using rule 53 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 53 (expression -> expression MINUS expression .) ]
  ! OR              [ reduce using rule 53 (expression -> expression MINUS expression .) ]
  ! EQ              [ reduce using rule 53 (expression -> expression MINUS expression .) ]
  ! NEQ             [ reduce using rule 53 (expression -> expression MINUS expression .) ]
  ! STRICT_EQ       [ reduce using rule 53 (expression -> expression MINUS expression .) ]
  ! STRICT_NEQ      [ reduce using rule 53 (expression -> expression MINUS expression .) ]
  ! LT              [ reduce using rule 53 (expression -> expression MINUS expression .) ]
  ! GT              [ reduce using rule 53 (expression -> expression MINUS expression .) ]
  ! LE              [ reduce using rule 53 (expression -> expression MINUS expression .) ]
  ! GE              [ reduce using rule 53 (expression -> expression MINUS expression .) ]
  ! DOT             [ reduce using rule 53 (expression -> expression MINUS expression .) ]
  ! LBRACKET        [ reduce using rule 53 (expression -> expression MINUS expression .) ]
  ! PLUSPLUS        [ reduce using rule 53 (expression -> expression MINUS expression .) ]
  ! MINUSMINUS      [ reduce using rule 53 (expression -> expression MINUS expression .) ]


state 118

    (54) expression -> expression TIMES expression .
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 54 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 54 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 54 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 54 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 54 (expression -> expression TIMES expression .)
    COLON           reduce using rule 54 (expression -> expression TIMES expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72

  ! PLUS            [ reduce using rule 54 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 54 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 54 (expression -> expression TIMES expression .) ]
  ! DIV             [ reduce using rule 54 (expression -> expression TIMES expression .) ]
  ! MOD             [ reduce using rule 54 (expression -> expression TIMES expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 54 (expression -> expression TIMES expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 54 (expression -> expression TIMES expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 54 (expression -> expression TIMES expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 54 (expression -> expression TIMES expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 54 (expression -> expression TIMES expression .) ]
  ! POT             [ reduce using rule 54 (expression -> expression TIMES expression .) ]
  ! AND             [ reduce using rule 54 (expression -> expression TIMES expression .) ]
  ! OR              [ reduce using rule 54 (expression -> expression TIMES expression .) ]
  ! EQ              [ reduce using rule 54 (expression -> expression TIMES expression .) ]
  ! NEQ             [ reduce using rule 54 (expression -> expression TIMES expression .) ]
  ! STRICT_EQ       [ reduce using rule 54 (expression -> expression TIMES expression .) ]
  ! STRICT_NEQ      [ reduce using rule 54 (expression -> expression TIMES expression .) ]
  ! LT              [ reduce using rule 54 (expression -> expression TIMES expression .) ]
  ! GT              [ reduce using rule 54 (expression -> expression TIMES expression .) ]
  ! LE              [ reduce using rule 54 (expression -> expression TIMES expression .) ]
  ! GE              [ reduce using rule 54 (expression -> expression TIMES expression .) ]
  ! DOT             [ reduce using rule 54 (expression -> expression TIMES expression .) ]
  ! LBRACKET        [ reduce using rule 54 (expression -> expression TIMES expression .) ]
  ! PLUSPLUS        [ reduce using rule 54 (expression -> expression TIMES expression .) ]
  ! MINUSMINUS      [ reduce using rule 54 (expression -> expression TIMES expression .) ]


state 119

    (55) expression -> expression DIV expression .
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 55 (expression -> expression DIV expression .)
    COMMA           reduce using rule 55 (expression -> expression DIV expression .)
    RPAREN          reduce using rule 55 (expression -> expression DIV expression .)
    RBRACKET        reduce using rule 55 (expression -> expression DIV expression .)
    RBRACE          reduce using rule 55 (expression -> expression DIV expression .)
    COLON           reduce using rule 55 (expression -> expression DIV expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72

  ! PLUS            [ reduce using rule 55 (expression -> expression DIV expression .) ]
  ! MINUS           [ reduce using rule 55 (expression -> expression DIV expression .) ]
  ! TIMES           [ reduce using rule 55 (expression -> expression DIV expression .) ]
  ! DIV             [ reduce using rule 55 (expression -> expression DIV expression .) ]
  ! MOD             [ reduce using rule 55 (expression -> expression DIV expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 55 (expression -> expression DIV expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 55 (expression -> expression DIV expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 55 (expression -> expression DIV expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 55 (expression -> expression DIV expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 55 (expression -> expression DIV expression .) ]
  ! POT             [ reduce using rule 55 (expression -> expression DIV expression .) ]
  ! AND             [ reduce using rule 55 (expression -> expression DIV expression .) ]
  ! OR              [ reduce using rule 55 (expression -> expression DIV expression .) ]
  ! EQ              [ reduce using rule 55 (expression -> expression DIV expression .) ]
  ! NEQ             [ reduce using rule 55 (expression -> expression DIV expression .) ]
  ! STRICT_EQ       [ reduce using rule 55 (expression -> expression DIV expression .) ]
  ! STRICT_NEQ      [ reduce using rule 55 (expression -> expression DIV expression .) ]
  ! LT              [ reduce using rule 55 (expression -> expression DIV expression .) ]
  ! GT              [ reduce using rule 55 (expression -> expression DIV expression .) ]
  ! LE              [ reduce using rule 55 (expression -> expression DIV expression .) ]
  ! GE              [ reduce using rule 55 (expression -> expression DIV expression .) ]
  ! DOT             [ reduce using rule 55 (expression -> expression DIV expression .) ]
  ! LBRACKET        [ reduce using rule 55 (expression -> expression DIV expression .) ]
  ! PLUSPLUS        [ reduce using rule 55 (expression -> expression DIV expression .) ]
  ! MINUSMINUS      [ reduce using rule 55 (expression -> expression DIV expression .) ]


state 120

    (56) expression -> expression MOD expression .
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 56 (expression -> expression MOD expression .)
    COMMA           reduce using rule 56 (expression -> expression MOD expression .)
    RPAREN          reduce using rule 56 (expression -> expression MOD expression .)
    RBRACKET        reduce using rule 56 (expression -> expression MOD expression .)
    RBRACE          reduce using rule 56 (expression -> expression MOD expression .)
    COLON           reduce using rule 56 (expression -> expression MOD expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72

  ! PLUS            [ reduce using rule 56 (expression -> expression MOD expression .) ]
  ! MINUS           [ reduce using rule 56 (expression -> expression MOD expression .) ]
  ! TIMES           [ reduce using rule 56 (expression -> expression MOD expression .) ]
  ! DIV             [ reduce using rule 56 (expression -> expression MOD expression .) ]
  ! MOD             [ reduce using rule 56 (expression -> expression MOD expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 56 (expression -> expression MOD expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 56 (expression -> expression MOD expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 56 (expression -> expression MOD expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 56 (expression -> expression MOD expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 56 (expression -> expression MOD expression .) ]
  ! POT             [ reduce using rule 56 (expression -> expression MOD expression .) ]
  ! AND             [ reduce using rule 56 (expression -> expression MOD expression .) ]
  ! OR              [ reduce using rule 56 (expression -> expression MOD expression .) ]
  ! EQ              [ reduce using rule 56 (expression -> expression MOD expression .) ]
  ! NEQ             [ reduce using rule 56 (expression -> expression MOD expression .) ]
  ! STRICT_EQ       [ reduce using rule 56 (expression -> expression MOD expression .) ]
  ! STRICT_NEQ      [ reduce using rule 56 (expression -> expression MOD expression .) ]
  ! LT              [ reduce using rule 56 (expression -> expression MOD expression .) ]
  ! GT              [ reduce using rule 56 (expression -> expression MOD expression .) ]
  ! LE              [ reduce using rule 56 (expression -> expression MOD expression .) ]
  ! GE              [ reduce using rule 56 (expression -> expression MOD expression .) ]
  ! DOT             [ reduce using rule 56 (expression -> expression MOD expression .) ]
  ! LBRACKET        [ reduce using rule 56 (expression -> expression MOD expression .) ]
  ! PLUSPLUS        [ reduce using rule 56 (expression -> expression MOD expression .) ]
  ! MINUSMINUS      [ reduce using rule 56 (expression -> expression MOD expression .) ]


state 121

    (57) expression -> expression PLUS_ASSIGN expression .
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 57 (expression -> expression PLUS_ASSIGN expression .)
    COMMA           reduce using rule 57 (expression -> expression PLUS_ASSIGN expression .)
    RPAREN          reduce using rule 57 (expression -> expression PLUS_ASSIGN expression .)
    RBRACKET        reduce using rule 57 (expression -> expression PLUS_ASSIGN expression .)
    RBRACE          reduce using rule 57 (expression -> expression PLUS_ASSIGN expression .)
    COLON           reduce using rule 57 (expression -> expression PLUS_ASSIGN expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72

  ! PLUS            [ reduce using rule 57 (expression -> expression PLUS_ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 57 (expression -> expression PLUS_ASSIGN expression .) ]
  ! TIMES           [ reduce using rule 57 (expression -> expression PLUS_ASSIGN expression .) ]
  ! DIV             [ reduce using rule 57 (expression -> expression PLUS_ASSIGN expression .) ]
  ! MOD             [ reduce using rule 57 (expression -> expression PLUS_ASSIGN expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 57 (expression -> expression PLUS_ASSIGN expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 57 (expression -> expression PLUS_ASSIGN expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 57 (expression -> expression PLUS_ASSIGN expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 57 (expression -> expression PLUS_ASSIGN expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 57 (expression -> expression PLUS_ASSIGN expression .) ]
  ! POT             [ reduce using rule 57 (expression -> expression PLUS_ASSIGN expression .) ]
  ! AND             [ reduce using rule 57 (expression -> expression PLUS_ASSIGN expression .) ]
  ! OR              [ reduce using rule 57 (expression -> expression PLUS_ASSIGN expression .) ]
  ! EQ              [ reduce using rule 57 (expression -> expression PLUS_ASSIGN expression .) ]
  ! NEQ             [ reduce using rule 57 (expression -> expression PLUS_ASSIGN expression .) ]
  ! STRICT_EQ       [ reduce using rule 57 (expression -> expression PLUS_ASSIGN expression .) ]
  ! STRICT_NEQ      [ reduce using rule 57 (expression -> expression PLUS_ASSIGN expression .) ]
  ! LT              [ reduce using rule 57 (expression -> expression PLUS_ASSIGN expression .) ]
  ! GT              [ reduce using rule 57 (expression -> expression PLUS_ASSIGN expression .) ]
  ! LE              [ reduce using rule 57 (expression -> expression PLUS_ASSIGN expression .) ]
  ! GE              [ reduce using rule 57 (expression -> expression PLUS_ASSIGN expression .) ]
  ! DOT             [ reduce using rule 57 (expression -> expression PLUS_ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 57 (expression -> expression PLUS_ASSIGN expression .) ]
  ! PLUSPLUS        [ reduce using rule 57 (expression -> expression PLUS_ASSIGN expression .) ]
  ! MINUSMINUS      [ reduce using rule 57 (expression -> expression PLUS_ASSIGN expression .) ]


state 122

    (58) expression -> expression MINUS_ASSIGN expression .
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 58 (expression -> expression MINUS_ASSIGN expression .)
    COMMA           reduce using rule 58 (expression -> expression MINUS_ASSIGN expression .)
    RPAREN          reduce using rule 58 (expression -> expression MINUS_ASSIGN expression .)
    RBRACKET        reduce using rule 58 (expression -> expression MINUS_ASSIGN expression .)
    RBRACE          reduce using rule 58 (expression -> expression MINUS_ASSIGN expression .)
    COLON           reduce using rule 58 (expression -> expression MINUS_ASSIGN expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72

  ! PLUS            [ reduce using rule 58 (expression -> expression MINUS_ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 58 (expression -> expression MINUS_ASSIGN expression .) ]
  ! TIMES           [ reduce using rule 58 (expression -> expression MINUS_ASSIGN expression .) ]
  ! DIV             [ reduce using rule 58 (expression -> expression MINUS_ASSIGN expression .) ]
  ! MOD             [ reduce using rule 58 (expression -> expression MINUS_ASSIGN expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 58 (expression -> expression MINUS_ASSIGN expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 58 (expression -> expression MINUS_ASSIGN expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 58 (expression -> expression MINUS_ASSIGN expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 58 (expression -> expression MINUS_ASSIGN expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 58 (expression -> expression MINUS_ASSIGN expression .) ]
  ! POT             [ reduce using rule 58 (expression -> expression MINUS_ASSIGN expression .) ]
  ! AND             [ reduce using rule 58 (expression -> expression MINUS_ASSIGN expression .) ]
  ! OR              [ reduce using rule 58 (expression -> expression MINUS_ASSIGN expression .) ]
  ! EQ              [ reduce using rule 58 (expression -> expression MINUS_ASSIGN expression .) ]
  ! NEQ             [ reduce using rule 58 (expression -> expression MINUS_ASSIGN expression .) ]
  ! STRICT_EQ       [ reduce using rule 58 (expression -> expression MINUS_ASSIGN expression .) ]
  ! STRICT_NEQ      [ reduce using rule 58 (expression -> expression MINUS_ASSIGN expression .) ]
  ! LT              [ reduce using rule 58 (expression -> expression MINUS_ASSIGN expression .) ]
  ! GT              [ reduce using rule 58 (expression -> expression MINUS_ASSIGN expression .) ]
  ! LE              [ reduce using rule 58 (expression -> expression MINUS_ASSIGN expression .) ]
  ! GE              [ reduce using rule 58 (expression -> expression MINUS_ASSIGN expression .) ]
  ! DOT             [ reduce using rule 58 (expression -> expression MINUS_ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 58 (expression -> expression MINUS_ASSIGN expression .) ]
  ! PLUSPLUS        [ reduce using rule 58 (expression -> expression MINUS_ASSIGN expression .) ]
  ! MINUSMINUS      [ reduce using rule 58 (expression -> expression MINUS_ASSIGN expression .) ]


state 123

    (59) expression -> expression MULT_ASSIGN expression .
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 59 (expression -> expression MULT_ASSIGN expression .)
    COMMA           reduce using rule 59 (expression -> expression MULT_ASSIGN expression .)
    RPAREN          reduce using rule 59 (expression -> expression MULT_ASSIGN expression .)
    RBRACKET        reduce using rule 59 (expression -> expression MULT_ASSIGN expression .)
    RBRACE          reduce using rule 59 (expression -> expression MULT_ASSIGN expression .)
    COLON           reduce using rule 59 (expression -> expression MULT_ASSIGN expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72

  ! PLUS            [ reduce using rule 59 (expression -> expression MULT_ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 59 (expression -> expression MULT_ASSIGN expression .) ]
  ! TIMES           [ reduce using rule 59 (expression -> expression MULT_ASSIGN expression .) ]
  ! DIV             [ reduce using rule 59 (expression -> expression MULT_ASSIGN expression .) ]
  ! MOD             [ reduce using rule 59 (expression -> expression MULT_ASSIGN expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 59 (expression -> expression MULT_ASSIGN expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 59 (expression -> expression MULT_ASSIGN expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 59 (expression -> expression MULT_ASSIGN expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 59 (expression -> expression MULT_ASSIGN expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 59 (expression -> expression MULT_ASSIGN expression .) ]
  ! POT             [ reduce using rule 59 (expression -> expression MULT_ASSIGN expression .) ]
  ! AND             [ reduce using rule 59 (expression -> expression MULT_ASSIGN expression .) ]
  ! OR              [ reduce using rule 59 (expression -> expression MULT_ASSIGN expression .) ]
  ! EQ              [ reduce using rule 59 (expression -> expression MULT_ASSIGN expression .) ]
  ! NEQ             [ reduce using rule 59 (expression -> expression MULT_ASSIGN expression .) ]
  ! STRICT_EQ       [ reduce using rule 59 (expression -> expression MULT_ASSIGN expression .) ]
  ! STRICT_NEQ      [ reduce using rule 59 (expression -> expression MULT_ASSIGN expression .) ]
  ! LT              [ reduce using rule 59 (expression -> expression MULT_ASSIGN expression .) ]
  ! GT              [ reduce using rule 59 (expression -> expression MULT_ASSIGN expression .) ]
  ! LE              [ reduce using rule 59 (expression -> expression MULT_ASSIGN expression .) ]
  ! GE              [ reduce using rule 59 (expression -> expression MULT_ASSIGN expression .) ]
  ! DOT             [ reduce using rule 59 (expression -> expression MULT_ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 59 (expression -> expression MULT_ASSIGN expression .) ]
  ! PLUSPLUS        [ reduce using rule 59 (expression -> expression MULT_ASSIGN expression .) ]
  ! MINUSMINUS      [ reduce using rule 59 (expression -> expression MULT_ASSIGN expression .) ]


state 124

    (60) expression -> expression DIV_ASSIGN expression .
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 60 (expression -> expression DIV_ASSIGN expression .)
    COMMA           reduce using rule 60 (expression -> expression DIV_ASSIGN expression .)
    RPAREN          reduce using rule 60 (expression -> expression DIV_ASSIGN expression .)
    RBRACKET        reduce using rule 60 (expression -> expression DIV_ASSIGN expression .)
    RBRACE          reduce using rule 60 (expression -> expression DIV_ASSIGN expression .)
    COLON           reduce using rule 60 (expression -> expression DIV_ASSIGN expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72

  ! PLUS            [ reduce using rule 60 (expression -> expression DIV_ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 60 (expression -> expression DIV_ASSIGN expression .) ]
  ! TIMES           [ reduce using rule 60 (expression -> expression DIV_ASSIGN expression .) ]
  ! DIV             [ reduce using rule 60 (expression -> expression DIV_ASSIGN expression .) ]
  ! MOD             [ reduce using rule 60 (expression -> expression DIV_ASSIGN expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 60 (expression -> expression DIV_ASSIGN expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 60 (expression -> expression DIV_ASSIGN expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 60 (expression -> expression DIV_ASSIGN expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 60 (expression -> expression DIV_ASSIGN expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 60 (expression -> expression DIV_ASSIGN expression .) ]
  ! POT             [ reduce using rule 60 (expression -> expression DIV_ASSIGN expression .) ]
  ! AND             [ reduce using rule 60 (expression -> expression DIV_ASSIGN expression .) ]
  ! OR              [ reduce using rule 60 (expression -> expression DIV_ASSIGN expression .) ]
  ! EQ              [ reduce using rule 60 (expression -> expression DIV_ASSIGN expression .) ]
  ! NEQ             [ reduce using rule 60 (expression -> expression DIV_ASSIGN expression .) ]
  ! STRICT_EQ       [ reduce using rule 60 (expression -> expression DIV_ASSIGN expression .) ]
  ! STRICT_NEQ      [ reduce using rule 60 (expression -> expression DIV_ASSIGN expression .) ]
  ! LT              [ reduce using rule 60 (expression -> expression DIV_ASSIGN expression .) ]
  ! GT              [ reduce using rule 60 (expression -> expression DIV_ASSIGN expression .) ]
  ! LE              [ reduce using rule 60 (expression -> expression DIV_ASSIGN expression .) ]
  ! GE              [ reduce using rule 60 (expression -> expression DIV_ASSIGN expression .) ]
  ! DOT             [ reduce using rule 60 (expression -> expression DIV_ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 60 (expression -> expression DIV_ASSIGN expression .) ]
  ! PLUSPLUS        [ reduce using rule 60 (expression -> expression DIV_ASSIGN expression .) ]
  ! MINUSMINUS      [ reduce using rule 60 (expression -> expression DIV_ASSIGN expression .) ]


state 125

    (61) expression -> expression MOD_ASSIGN expression .
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 61 (expression -> expression MOD_ASSIGN expression .)
    COMMA           reduce using rule 61 (expression -> expression MOD_ASSIGN expression .)
    RPAREN          reduce using rule 61 (expression -> expression MOD_ASSIGN expression .)
    RBRACKET        reduce using rule 61 (expression -> expression MOD_ASSIGN expression .)
    RBRACE          reduce using rule 61 (expression -> expression MOD_ASSIGN expression .)
    COLON           reduce using rule 61 (expression -> expression MOD_ASSIGN expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72

  ! PLUS            [ reduce using rule 61 (expression -> expression MOD_ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 61 (expression -> expression MOD_ASSIGN expression .) ]
  ! TIMES           [ reduce using rule 61 (expression -> expression MOD_ASSIGN expression .) ]
  ! DIV             [ reduce using rule 61 (expression -> expression MOD_ASSIGN expression .) ]
  ! MOD             [ reduce using rule 61 (expression -> expression MOD_ASSIGN expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 61 (expression -> expression MOD_ASSIGN expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 61 (expression -> expression MOD_ASSIGN expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 61 (expression -> expression MOD_ASSIGN expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 61 (expression -> expression MOD_ASSIGN expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 61 (expression -> expression MOD_ASSIGN expression .) ]
  ! POT             [ reduce using rule 61 (expression -> expression MOD_ASSIGN expression .) ]
  ! AND             [ reduce using rule 61 (expression -> expression MOD_ASSIGN expression .) ]
  ! OR              [ reduce using rule 61 (expression -> expression MOD_ASSIGN expression .) ]
  ! EQ              [ reduce using rule 61 (expression -> expression MOD_ASSIGN expression .) ]
  ! NEQ             [ reduce using rule 61 (expression -> expression MOD_ASSIGN expression .) ]
  ! STRICT_EQ       [ reduce using rule 61 (expression -> expression MOD_ASSIGN expression .) ]
  ! STRICT_NEQ      [ reduce using rule 61 (expression -> expression MOD_ASSIGN expression .) ]
  ! LT              [ reduce using rule 61 (expression -> expression MOD_ASSIGN expression .) ]
  ! GT              [ reduce using rule 61 (expression -> expression MOD_ASSIGN expression .) ]
  ! LE              [ reduce using rule 61 (expression -> expression MOD_ASSIGN expression .) ]
  ! GE              [ reduce using rule 61 (expression -> expression MOD_ASSIGN expression .) ]
  ! DOT             [ reduce using rule 61 (expression -> expression MOD_ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 61 (expression -> expression MOD_ASSIGN expression .) ]
  ! PLUSPLUS        [ reduce using rule 61 (expression -> expression MOD_ASSIGN expression .) ]
  ! MINUSMINUS      [ reduce using rule 61 (expression -> expression MOD_ASSIGN expression .) ]


state 126

    (62) expression -> expression POT expression .
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 62 (expression -> expression POT expression .)
    COMMA           reduce using rule 62 (expression -> expression POT expression .)
    RPAREN          reduce using rule 62 (expression -> expression POT expression .)
    RBRACKET        reduce using rule 62 (expression -> expression POT expression .)
    RBRACE          reduce using rule 62 (expression -> expression POT expression .)
    COLON           reduce using rule 62 (expression -> expression POT expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72

  ! PLUS            [ reduce using rule 62 (expression -> expression POT expression .) ]
  ! MINUS           [ reduce using rule 62 (expression -> expression POT expression .) ]
  ! TIMES           [ reduce using rule 62 (expression -> expression POT expression .) ]
  ! DIV             [ reduce using rule 62 (expression -> expression POT expression .) ]
  ! MOD             [ reduce using rule 62 (expression -> expression POT expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 62 (expression -> expression POT expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 62 (expression -> expression POT expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 62 (expression -> expression POT expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 62 (expression -> expression POT expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 62 (expression -> expression POT expression .) ]
  ! POT             [ reduce using rule 62 (expression -> expression POT expression .) ]
  ! AND             [ reduce using rule 62 (expression -> expression POT expression .) ]
  ! OR              [ reduce using rule 62 (expression -> expression POT expression .) ]
  ! EQ              [ reduce using rule 62 (expression -> expression POT expression .) ]
  ! NEQ             [ reduce using rule 62 (expression -> expression POT expression .) ]
  ! STRICT_EQ       [ reduce using rule 62 (expression -> expression POT expression .) ]
  ! STRICT_NEQ      [ reduce using rule 62 (expression -> expression POT expression .) ]
  ! LT              [ reduce using rule 62 (expression -> expression POT expression .) ]
  ! GT              [ reduce using rule 62 (expression -> expression POT expression .) ]
  ! LE              [ reduce using rule 62 (expression -> expression POT expression .) ]
  ! GE              [ reduce using rule 62 (expression -> expression POT expression .) ]
  ! DOT             [ reduce using rule 62 (expression -> expression POT expression .) ]
  ! LBRACKET        [ reduce using rule 62 (expression -> expression POT expression .) ]
  ! PLUSPLUS        [ reduce using rule 62 (expression -> expression POT expression .) ]
  ! MINUSMINUS      [ reduce using rule 62 (expression -> expression POT expression .) ]


state 127

    (63) expression -> expression AND expression .
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 63 (expression -> expression AND expression .)
    COMMA           reduce using rule 63 (expression -> expression AND expression .)
    RPAREN          reduce using rule 63 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 63 (expression -> expression AND expression .)
    RBRACE          reduce using rule 63 (expression -> expression AND expression .)
    COLON           reduce using rule 63 (expression -> expression AND expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72

  ! PLUS            [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! DIV             [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! MOD             [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! POT             [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! EQ              [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! NEQ             [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! STRICT_EQ       [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! STRICT_NEQ      [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! LE              [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! GE              [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! DOT             [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! LBRACKET        [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! PLUSPLUS        [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! MINUSMINUS      [ reduce using rule 63 (expression -> expression AND expression .) ]


state 128

    (64) expression -> expression OR expression .
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 64 (expression -> expression OR expression .)
    COMMA           reduce using rule 64 (expression -> expression OR expression .)
    RPAREN          reduce using rule 64 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 64 (expression -> expression OR expression .)
    RBRACE          reduce using rule 64 (expression -> expression OR expression .)
    COLON           reduce using rule 64 (expression -> expression OR expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72

  ! PLUS            [ reduce using rule 64 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 64 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 64 (expression -> expression OR expression .) ]
  ! DIV             [ reduce using rule 64 (expression -> expression OR expression .) ]
  ! MOD             [ reduce using rule 64 (expression -> expression OR expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 64 (expression -> expression OR expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 64 (expression -> expression OR expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 64 (expression -> expression OR expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 64 (expression -> expression OR expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 64 (expression -> expression OR expression .) ]
  ! POT             [ reduce using rule 64 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 64 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 64 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 64 (expression -> expression OR expression .) ]
  ! NEQ             [ reduce using rule 64 (expression -> expression OR expression .) ]
  ! STRICT_EQ       [ reduce using rule 64 (expression -> expression OR expression .) ]
  ! STRICT_NEQ      [ reduce using rule 64 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 64 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 64 (expression -> expression OR expression .) ]
  ! LE              [ reduce using rule 64 (expression -> expression OR expression .) ]
  ! GE              [ reduce using rule 64 (expression -> expression OR expression .) ]
  ! DOT             [ reduce using rule 64 (expression -> expression OR expression .) ]
  ! LBRACKET        [ reduce using rule 64 (expression -> expression OR expression .) ]
  ! PLUSPLUS        [ reduce using rule 64 (expression -> expression OR expression .) ]
  ! MINUSMINUS      [ reduce using rule 64 (expression -> expression OR expression .) ]


state 129

    (65) expression -> expression EQ expression .
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 65 (expression -> expression EQ expression .)
    COMMA           reduce using rule 65 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 65 (expression -> expression EQ expression .)
    RBRACKET        reduce using rule 65 (expression -> expression EQ expression .)
    RBRACE          reduce using rule 65 (expression -> expression EQ expression .)
    COLON           reduce using rule 65 (expression -> expression EQ expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72

  ! PLUS            [ reduce using rule 65 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 65 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 65 (expression -> expression EQ expression .) ]
  ! DIV             [ reduce using rule 65 (expression -> expression EQ expression .) ]
  ! MOD             [ reduce using rule 65 (expression -> expression EQ expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 65 (expression -> expression EQ expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 65 (expression -> expression EQ expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 65 (expression -> expression EQ expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 65 (expression -> expression EQ expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 65 (expression -> expression EQ expression .) ]
  ! POT             [ reduce using rule 65 (expression -> expression EQ expression .) ]
  ! AND             [ reduce using rule 65 (expression -> expression EQ expression .) ]
  ! OR              [ reduce using rule 65 (expression -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 65 (expression -> expression EQ expression .) ]
  ! NEQ             [ reduce using rule 65 (expression -> expression EQ expression .) ]
  ! STRICT_EQ       [ reduce using rule 65 (expression -> expression EQ expression .) ]
  ! STRICT_NEQ      [ reduce using rule 65 (expression -> expression EQ expression .) ]
  ! LT              [ reduce using rule 65 (expression -> expression EQ expression .) ]
  ! GT              [ reduce using rule 65 (expression -> expression EQ expression .) ]
  ! LE              [ reduce using rule 65 (expression -> expression EQ expression .) ]
  ! GE              [ reduce using rule 65 (expression -> expression EQ expression .) ]
  ! DOT             [ reduce using rule 65 (expression -> expression EQ expression .) ]
  ! LBRACKET        [ reduce using rule 65 (expression -> expression EQ expression .) ]
  ! PLUSPLUS        [ reduce using rule 65 (expression -> expression EQ expression .) ]
  ! MINUSMINUS      [ reduce using rule 65 (expression -> expression EQ expression .) ]


state 130

    (66) expression -> expression NEQ expression .
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 66 (expression -> expression NEQ expression .)
    COMMA           reduce using rule 66 (expression -> expression NEQ expression .)
    RPAREN          reduce using rule 66 (expression -> expression NEQ expression .)
    RBRACKET        reduce using rule 66 (expression -> expression NEQ expression .)
    RBRACE          reduce using rule 66 (expression -> expression NEQ expression .)
    COLON           reduce using rule 66 (expression -> expression NEQ expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72

  ! PLUS            [ reduce using rule 66 (expression -> expression NEQ expression .) ]
  ! MINUS           [ reduce using rule 66 (expression -> expression NEQ expression .) ]
  ! TIMES           [ reduce using rule 66 (expression -> expression NEQ expression .) ]
  ! DIV             [ reduce using rule 66 (expression -> expression NEQ expression .) ]
  ! MOD             [ reduce using rule 66 (expression -> expression NEQ expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 66 (expression -> expression NEQ expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 66 (expression -> expression NEQ expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 66 (expression -> expression NEQ expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 66 (expression -> expression NEQ expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 66 (expression -> expression NEQ expression .) ]
  ! POT             [ reduce using rule 66 (expression -> expression NEQ expression .) ]
  ! AND             [ reduce using rule 66 (expression -> expression NEQ expression .) ]
  ! OR              [ reduce using rule 66 (expression -> expression NEQ expression .) ]
  ! EQ              [ reduce using rule 66 (expression -> expression NEQ expression .) ]
  ! NEQ             [ reduce using rule 66 (expression -> expression NEQ expression .) ]
  ! STRICT_EQ       [ reduce using rule 66 (expression -> expression NEQ expression .) ]
  ! STRICT_NEQ      [ reduce using rule 66 (expression -> expression NEQ expression .) ]
  ! LT              [ reduce using rule 66 (expression -> expression NEQ expression .) ]
  ! GT              [ reduce using rule 66 (expression -> expression NEQ expression .) ]
  ! LE              [ reduce using rule 66 (expression -> expression NEQ expression .) ]
  ! GE              [ reduce using rule 66 (expression -> expression NEQ expression .) ]
  ! DOT             [ reduce using rule 66 (expression -> expression NEQ expression .) ]
  ! LBRACKET        [ reduce using rule 66 (expression -> expression NEQ expression .) ]
  ! PLUSPLUS        [ reduce using rule 66 (expression -> expression NEQ expression .) ]
  ! MINUSMINUS      [ reduce using rule 66 (expression -> expression NEQ expression .) ]


state 131

    (67) expression -> expression STRICT_EQ expression .
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 67 (expression -> expression STRICT_EQ expression .)
    COMMA           reduce using rule 67 (expression -> expression STRICT_EQ expression .)
    RPAREN          reduce using rule 67 (expression -> expression STRICT_EQ expression .)
    RBRACKET        reduce using rule 67 (expression -> expression STRICT_EQ expression .)
    RBRACE          reduce using rule 67 (expression -> expression STRICT_EQ expression .)
    COLON           reduce using rule 67 (expression -> expression STRICT_EQ expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72

  ! PLUS            [ reduce using rule 67 (expression -> expression STRICT_EQ expression .) ]
  ! MINUS           [ reduce using rule 67 (expression -> expression STRICT_EQ expression .) ]
  ! TIMES           [ reduce using rule 67 (expression -> expression STRICT_EQ expression .) ]
  ! DIV             [ reduce using rule 67 (expression -> expression STRICT_EQ expression .) ]
  ! MOD             [ reduce using rule 67 (expression -> expression STRICT_EQ expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 67 (expression -> expression STRICT_EQ expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 67 (expression -> expression STRICT_EQ expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 67 (expression -> expression STRICT_EQ expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 67 (expression -> expression STRICT_EQ expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 67 (expression -> expression STRICT_EQ expression .) ]
  ! POT             [ reduce using rule 67 (expression -> expression STRICT_EQ expression .) ]
  ! AND             [ reduce using rule 67 (expression -> expression STRICT_EQ expression .) ]
  ! OR              [ reduce using rule 67 (expression -> expression STRICT_EQ expression .) ]
  ! EQ              [ reduce using rule 67 (expression -> expression STRICT_EQ expression .) ]
  ! NEQ             [ reduce using rule 67 (expression -> expression STRICT_EQ expression .) ]
  ! STRICT_EQ       [ reduce using rule 67 (expression -> expression STRICT_EQ expression .) ]
  ! STRICT_NEQ      [ reduce using rule 67 (expression -> expression STRICT_EQ expression .) ]
  ! LT              [ reduce using rule 67 (expression -> expression STRICT_EQ expression .) ]
  ! GT              [ reduce using rule 67 (expression -> expression STRICT_EQ expression .) ]
  ! LE              [ reduce using rule 67 (expression -> expression STRICT_EQ expression .) ]
  ! GE              [ reduce using rule 67 (expression -> expression STRICT_EQ expression .) ]
  ! DOT             [ reduce using rule 67 (expression -> expression STRICT_EQ expression .) ]
  ! LBRACKET        [ reduce using rule 67 (expression -> expression STRICT_EQ expression .) ]
  ! PLUSPLUS        [ reduce using rule 67 (expression -> expression STRICT_EQ expression .) ]
  ! MINUSMINUS      [ reduce using rule 67 (expression -> expression STRICT_EQ expression .) ]


state 132

    (68) expression -> expression STRICT_NEQ expression .
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 68 (expression -> expression STRICT_NEQ expression .)
    COMMA           reduce using rule 68 (expression -> expression STRICT_NEQ expression .)
    RPAREN          reduce using rule 68 (expression -> expression STRICT_NEQ expression .)
    RBRACKET        reduce using rule 68 (expression -> expression STRICT_NEQ expression .)
    RBRACE          reduce using rule 68 (expression -> expression STRICT_NEQ expression .)
    COLON           reduce using rule 68 (expression -> expression STRICT_NEQ expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72

  ! PLUS            [ reduce using rule 68 (expression -> expression STRICT_NEQ expression .) ]
  ! MINUS           [ reduce using rule 68 (expression -> expression STRICT_NEQ expression .) ]
  ! TIMES           [ reduce using rule 68 (expression -> expression STRICT_NEQ expression .) ]
  ! DIV             [ reduce using rule 68 (expression -> expression STRICT_NEQ expression .) ]
  ! MOD             [ reduce using rule 68 (expression -> expression STRICT_NEQ expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 68 (expression -> expression STRICT_NEQ expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 68 (expression -> expression STRICT_NEQ expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 68 (expression -> expression STRICT_NEQ expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 68 (expression -> expression STRICT_NEQ expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 68 (expression -> expression STRICT_NEQ expression .) ]
  ! POT             [ reduce using rule 68 (expression -> expression STRICT_NEQ expression .) ]
  ! AND             [ reduce using rule 68 (expression -> expression STRICT_NEQ expression .) ]
  ! OR              [ reduce using rule 68 (expression -> expression STRICT_NEQ expression .) ]
  ! EQ              [ reduce using rule 68 (expression -> expression STRICT_NEQ expression .) ]
  ! NEQ             [ reduce using rule 68 (expression -> expression STRICT_NEQ expression .) ]
  ! STRICT_EQ       [ reduce using rule 68 (expression -> expression STRICT_NEQ expression .) ]
  ! STRICT_NEQ      [ reduce using rule 68 (expression -> expression STRICT_NEQ expression .) ]
  ! LT              [ reduce using rule 68 (expression -> expression STRICT_NEQ expression .) ]
  ! GT              [ reduce using rule 68 (expression -> expression STRICT_NEQ expression .) ]
  ! LE              [ reduce using rule 68 (expression -> expression STRICT_NEQ expression .) ]
  ! GE              [ reduce using rule 68 (expression -> expression STRICT_NEQ expression .) ]
  ! DOT             [ reduce using rule 68 (expression -> expression STRICT_NEQ expression .) ]
  ! LBRACKET        [ reduce using rule 68 (expression -> expression STRICT_NEQ expression .) ]
  ! PLUSPLUS        [ reduce using rule 68 (expression -> expression STRICT_NEQ expression .) ]
  ! MINUSMINUS      [ reduce using rule 68 (expression -> expression STRICT_NEQ expression .) ]


state 133

    (69) expression -> expression LT expression .
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 69 (expression -> expression LT expression .)
    COMMA           reduce using rule 69 (expression -> expression LT expression .)
    RPAREN          reduce using rule 69 (expression -> expression LT expression .)
    RBRACKET        reduce using rule 69 (expression -> expression LT expression .)
    RBRACE          reduce using rule 69 (expression -> expression LT expression .)
    COLON           reduce using rule 69 (expression -> expression LT expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72

  ! PLUS            [ reduce using rule 69 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 69 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 69 (expression -> expression LT expression .) ]
  ! DIV             [ reduce using rule 69 (expression -> expression LT expression .) ]
  ! MOD             [ reduce using rule 69 (expression -> expression LT expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 69 (expression -> expression LT expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 69 (expression -> expression LT expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 69 (expression -> expression LT expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 69 (expression -> expression LT expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 69 (expression -> expression LT expression .) ]
  ! POT             [ reduce using rule 69 (expression -> expression LT expression .) ]
  ! AND             [ reduce using rule 69 (expression -> expression LT expression .) ]
  ! OR              [ reduce using rule 69 (expression -> expression LT expression .) ]
  ! EQ              [ reduce using rule 69 (expression -> expression LT expression .) ]
  ! NEQ             [ reduce using rule 69 (expression -> expression LT expression .) ]
  ! STRICT_EQ       [ reduce using rule 69 (expression -> expression LT expression .) ]
  ! STRICT_NEQ      [ reduce using rule 69 (expression -> expression LT expression .) ]
  ! LT              [ reduce using rule 69 (expression -> expression LT expression .) ]
  ! GT              [ reduce using rule 69 (expression -> expression LT expression .) ]
  ! LE              [ reduce using rule 69 (expression -> expression LT expression .) ]
  ! GE              [ reduce using rule 69 (expression -> expression LT expression .) ]
  ! DOT             [ reduce using rule 69 (expression -> expression LT expression .) ]
  ! LBRACKET        [ reduce using rule 69 (expression -> expression LT expression .) ]
  ! PLUSPLUS        [ reduce using rule 69 (expression -> expression LT expression .) ]
  ! MINUSMINUS      [ reduce using rule 69 (expression -> expression LT expression .) ]


state 134

    (70) expression -> expression GT expression .
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 70 (expression -> expression GT expression .)
    COMMA           reduce using rule 70 (expression -> expression GT expression .)
    RPAREN          reduce using rule 70 (expression -> expression GT expression .)
    RBRACKET        reduce using rule 70 (expression -> expression GT expression .)
    RBRACE          reduce using rule 70 (expression -> expression GT expression .)
    COLON           reduce using rule 70 (expression -> expression GT expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72

  ! PLUS            [ reduce using rule 70 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 70 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 70 (expression -> expression GT expression .) ]
  ! DIV             [ reduce using rule 70 (expression -> expression GT expression .) ]
  ! MOD             [ reduce using rule 70 (expression -> expression GT expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 70 (expression -> expression GT expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 70 (expression -> expression GT expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 70 (expression -> expression GT expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 70 (expression -> expression GT expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 70 (expression -> expression GT expression .) ]
  ! POT             [ reduce using rule 70 (expression -> expression GT expression .) ]
  ! AND             [ reduce using rule 70 (expression -> expression GT expression .) ]
  ! OR              [ reduce using rule 70 (expression -> expression GT expression .) ]
  ! EQ              [ reduce using rule 70 (expression -> expression GT expression .) ]
  ! NEQ             [ reduce using rule 70 (expression -> expression GT expression .) ]
  ! STRICT_EQ       [ reduce using rule 70 (expression -> expression GT expression .) ]
  ! STRICT_NEQ      [ reduce using rule 70 (expression -> expression GT expression .) ]
  ! LT              [ reduce using rule 70 (expression -> expression GT expression .) ]
  ! GT              [ reduce using rule 70 (expression -> expression GT expression .) ]
  ! LE              [ reduce using rule 70 (expression -> expression GT expression .) ]
  ! GE              [ reduce using rule 70 (expression -> expression GT expression .) ]
  ! DOT             [ reduce using rule 70 (expression -> expression GT expression .) ]
  ! LBRACKET        [ reduce using rule 70 (expression -> expression GT expression .) ]
  ! PLUSPLUS        [ reduce using rule 70 (expression -> expression GT expression .) ]
  ! MINUSMINUS      [ reduce using rule 70 (expression -> expression GT expression .) ]


state 135

    (71) expression -> expression LE expression .
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 71 (expression -> expression LE expression .)
    COMMA           reduce using rule 71 (expression -> expression LE expression .)
    RPAREN          reduce using rule 71 (expression -> expression LE expression .)
    RBRACKET        reduce using rule 71 (expression -> expression LE expression .)
    RBRACE          reduce using rule 71 (expression -> expression LE expression .)
    COLON           reduce using rule 71 (expression -> expression LE expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72

  ! PLUS            [ reduce using rule 71 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 71 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 71 (expression -> expression LE expression .) ]
  ! DIV             [ reduce using rule 71 (expression -> expression LE expression .) ]
  ! MOD             [ reduce using rule 71 (expression -> expression LE expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 71 (expression -> expression LE expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 71 (expression -> expression LE expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 71 (expression -> expression LE expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 71 (expression -> expression LE expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 71 (expression -> expression LE expression .) ]
  ! POT             [ reduce using rule 71 (expression -> expression LE expression .) ]
  ! AND             [ reduce using rule 71 (expression -> expression LE expression .) ]
  ! OR              [ reduce using rule 71 (expression -> expression LE expression .) ]
  ! EQ              [ reduce using rule 71 (expression -> expression LE expression .) ]
  ! NEQ             [ reduce using rule 71 (expression -> expression LE expression .) ]
  ! STRICT_EQ       [ reduce using rule 71 (expression -> expression LE expression .) ]
  ! STRICT_NEQ      [ reduce using rule 71 (expression -> expression LE expression .) ]
  ! LT              [ reduce using rule 71 (expression -> expression LE expression .) ]
  ! GT              [ reduce using rule 71 (expression -> expression LE expression .) ]
  ! LE              [ reduce using rule 71 (expression -> expression LE expression .) ]
  ! GE              [ reduce using rule 71 (expression -> expression LE expression .) ]
  ! DOT             [ reduce using rule 71 (expression -> expression LE expression .) ]
  ! LBRACKET        [ reduce using rule 71 (expression -> expression LE expression .) ]
  ! PLUSPLUS        [ reduce using rule 71 (expression -> expression LE expression .) ]
  ! MINUSMINUS      [ reduce using rule 71 (expression -> expression LE expression .) ]


state 136

    (72) expression -> expression GE expression .
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 72 (expression -> expression GE expression .)
    COMMA           reduce using rule 72 (expression -> expression GE expression .)
    RPAREN          reduce using rule 72 (expression -> expression GE expression .)
    RBRACKET        reduce using rule 72 (expression -> expression GE expression .)
    RBRACE          reduce using rule 72 (expression -> expression GE expression .)
    COLON           reduce using rule 72 (expression -> expression GE expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72

  ! PLUS            [ reduce using rule 72 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 72 (expression -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 72 (expression -> expression GE expression .) ]
  ! DIV             [ reduce using rule 72 (expression -> expression GE expression .) ]
  ! MOD             [ reduce using rule 72 (expression -> expression GE expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 72 (expression -> expression GE expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 72 (expression -> expression GE expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 72 (expression -> expression GE expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 72 (expression -> expression GE expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 72 (expression -> expression GE expression .) ]
  ! POT             [ reduce using rule 72 (expression -> expression GE expression .) ]
  ! AND             [ reduce using rule 72 (expression -> expression GE expression .) ]
  ! OR              [ reduce using rule 72 (expression -> expression GE expression .) ]
  ! EQ              [ reduce using rule 72 (expression -> expression GE expression .) ]
  ! NEQ             [ reduce using rule 72 (expression -> expression GE expression .) ]
  ! STRICT_EQ       [ reduce using rule 72 (expression -> expression GE expression .) ]
  ! STRICT_NEQ      [ reduce using rule 72 (expression -> expression GE expression .) ]
  ! LT              [ reduce using rule 72 (expression -> expression GE expression .) ]
  ! GT              [ reduce using rule 72 (expression -> expression GE expression .) ]
  ! LE              [ reduce using rule 72 (expression -> expression GE expression .) ]
  ! GE              [ reduce using rule 72 (expression -> expression GE expression .) ]
  ! DOT             [ reduce using rule 72 (expression -> expression GE expression .) ]
  ! LBRACKET        [ reduce using rule 72 (expression -> expression GE expression .) ]
  ! PLUSPLUS        [ reduce using rule 72 (expression -> expression GE expression .) ]
  ! MINUSMINUS      [ reduce using rule 72 (expression -> expression GE expression .) ]


state 137

    (76) expression -> expression DOT IDENTIFIER .

    SEMICOLON       reduce using rule 76 (expression -> expression DOT IDENTIFIER .)
    PLUS            reduce using rule 76 (expression -> expression DOT IDENTIFIER .)
    MINUS           reduce using rule 76 (expression -> expression DOT IDENTIFIER .)
    TIMES           reduce using rule 76 (expression -> expression DOT IDENTIFIER .)
    DIV             reduce using rule 76 (expression -> expression DOT IDENTIFIER .)
    MOD             reduce using rule 76 (expression -> expression DOT IDENTIFIER .)
    PLUS_ASSIGN     reduce using rule 76 (expression -> expression DOT IDENTIFIER .)
    MINUS_ASSIGN    reduce using rule 76 (expression -> expression DOT IDENTIFIER .)
    MULT_ASSIGN     reduce using rule 76 (expression -> expression DOT IDENTIFIER .)
    DIV_ASSIGN      reduce using rule 76 (expression -> expression DOT IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 76 (expression -> expression DOT IDENTIFIER .)
    POT             reduce using rule 76 (expression -> expression DOT IDENTIFIER .)
    AND             reduce using rule 76 (expression -> expression DOT IDENTIFIER .)
    OR              reduce using rule 76 (expression -> expression DOT IDENTIFIER .)
    EQ              reduce using rule 76 (expression -> expression DOT IDENTIFIER .)
    NEQ             reduce using rule 76 (expression -> expression DOT IDENTIFIER .)
    STRICT_EQ       reduce using rule 76 (expression -> expression DOT IDENTIFIER .)
    STRICT_NEQ      reduce using rule 76 (expression -> expression DOT IDENTIFIER .)
    LT              reduce using rule 76 (expression -> expression DOT IDENTIFIER .)
    GT              reduce using rule 76 (expression -> expression DOT IDENTIFIER .)
    LE              reduce using rule 76 (expression -> expression DOT IDENTIFIER .)
    GE              reduce using rule 76 (expression -> expression DOT IDENTIFIER .)
    DOT             reduce using rule 76 (expression -> expression DOT IDENTIFIER .)
    LBRACKET        reduce using rule 76 (expression -> expression DOT IDENTIFIER .)
    PLUSPLUS        reduce using rule 76 (expression -> expression DOT IDENTIFIER .)
    MINUSMINUS      reduce using rule 76 (expression -> expression DOT IDENTIFIER .)
    COMMA           reduce using rule 76 (expression -> expression DOT IDENTIFIER .)
    RPAREN          reduce using rule 76 (expression -> expression DOT IDENTIFIER .)
    RBRACKET        reduce using rule 76 (expression -> expression DOT IDENTIFIER .)
    RBRACE          reduce using rule 76 (expression -> expression DOT IDENTIFIER .)
    COLON           reduce using rule 76 (expression -> expression DOT IDENTIFIER .)


state 138

    (77) expression -> expression LBRACKET expression . RBRACKET
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

    RBRACKET        shift and go to state 177
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72


state 139

    (19) letAssignment -> LET IDENTIFIER COLON . type EQUAL expression SEMICOLON
    (21) declaracion -> LET IDENTIFIER COLON . type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (44) type -> . LBRACKET type COMMA type RBRACKET
    (46) type -> . NUMBER_TYPE
    (47) type -> . STRING_TYPE
    (48) type -> . BOOLEAN_TYPE
    (49) type -> . IDENTIFIER
    (50) type -> . VOID
    (51) type -> . type LBRACKET RBRACKET

    LBRACKET        shift and go to state 180
    NUMBER_TYPE     shift and go to state 181
    STRING_TYPE     shift and go to state 182
    BOOLEAN_TYPE    shift and go to state 183
    IDENTIFIER      shift and go to state 178
    VOID            shift and go to state 184

    type                           shift and go to state 179

state 140

    (20) letAssignment -> LET IDENTIFIER EQUAL . expression SEMICOLON
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 185

state 141

    (18) assignment -> IDENTIFIER EQUAL expression . SEMICOLON
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

    SEMICOLON       shift and go to state 186
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72


state 142

    (78) expression -> IDENTIFIER LPAREN lista_expresiones_opt . RPAREN

    RPAREN          shift and go to state 187


state 143

    (22) lista_expresiones_opt -> lista_expresiones .

    RPAREN          reduce using rule 22 (lista_expresiones_opt -> lista_expresiones .)
    RBRACKET        reduce using rule 22 (lista_expresiones_opt -> lista_expresiones .)


state 144

    (23) lista_expresiones_opt -> empty .

    RPAREN          reduce using rule 23 (lista_expresiones_opt -> empty .)
    RBRACKET        reduce using rule 23 (lista_expresiones_opt -> empty .)


state 145

    (24) lista_expresiones -> expression .
    (25) lista_expresiones -> expression . COMMA lista_expresiones
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

    RPAREN          reduce using rule 24 (lista_expresiones -> expression .)
    RBRACKET        reduce using rule 24 (lista_expresiones -> expression .)
    COMMA           shift and go to state 188
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72


state 146

    (45) expression -> LBRACKET expression COMMA . expression RBRACKET
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 189

state 147

    (145) object_properties -> empty .

    RBRACE          reduce using rule 145 (object_properties -> empty .)


state 148

    (146) object_property -> IDENTIFIER . COLON expression

    COLON           shift and go to state 156


state 149

    (38) function -> FUNCTION IDENTIFIER LPAREN . parameters RPAREN COLON type LBRACE body_function RBRACE
    (39) parameters -> . IDENTIFIER COLON type
    (40) parameters -> . IDENTIFIER COLON type COMMA parameters
    (41) parameters -> . empty
    (112) empty -> .

    IDENTIFIER      shift and go to state 190
    RPAREN          reduce using rule 112 (empty -> .)

    parameters                     shift and go to state 191
    empty                          shift and go to state 192

state 150

    (75) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 75 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 75 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 75 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 75 (expression -> LPAREN expression RPAREN .)
    DIV             reduce using rule 75 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 75 (expression -> LPAREN expression RPAREN .)
    PLUS_ASSIGN     reduce using rule 75 (expression -> LPAREN expression RPAREN .)
    MINUS_ASSIGN    reduce using rule 75 (expression -> LPAREN expression RPAREN .)
    MULT_ASSIGN     reduce using rule 75 (expression -> LPAREN expression RPAREN .)
    DIV_ASSIGN      reduce using rule 75 (expression -> LPAREN expression RPAREN .)
    MOD_ASSIGN      reduce using rule 75 (expression -> LPAREN expression RPAREN .)
    POT             reduce using rule 75 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 75 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 75 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 75 (expression -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 75 (expression -> LPAREN expression RPAREN .)
    STRICT_EQ       reduce using rule 75 (expression -> LPAREN expression RPAREN .)
    STRICT_NEQ      reduce using rule 75 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 75 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 75 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 75 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 75 (expression -> LPAREN expression RPAREN .)
    DOT             reduce using rule 75 (expression -> LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 75 (expression -> LPAREN expression RPAREN .)
    PLUSPLUS        reduce using rule 75 (expression -> LPAREN expression RPAREN .)
    MINUSMINUS      reduce using rule 75 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 75 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 75 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 75 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 75 (expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 75 (expression -> LPAREN expression RPAREN .)


state 151

    (94) statement -> LBRACE instruction_list RBRACE .

    LET             reduce using rule 94 (statement -> LBRACE instruction_list RBRACE .)
    FUNCTION        reduce using rule 94 (statement -> LBRACE instruction_list RBRACE .)
    CONST           reduce using rule 94 (statement -> LBRACE instruction_list RBRACE .)
    ASYNC           reduce using rule 94 (statement -> LBRACE instruction_list RBRACE .)
    ENUM            reduce using rule 94 (statement -> LBRACE instruction_list RBRACE .)
    IF              reduce using rule 94 (statement -> LBRACE instruction_list RBRACE .)
    SWITCH          reduce using rule 94 (statement -> LBRACE instruction_list RBRACE .)
    WHILE           reduce using rule 94 (statement -> LBRACE instruction_list RBRACE .)
    FOR             reduce using rule 94 (statement -> LBRACE instruction_list RBRACE .)
    CLASS           reduce using rule 94 (statement -> LBRACE instruction_list RBRACE .)
    LBRACE          reduce using rule 94 (statement -> LBRACE instruction_list RBRACE .)
    RETURN          reduce using rule 94 (statement -> LBRACE instruction_list RBRACE .)
    INTERFACE       reduce using rule 94 (statement -> LBRACE instruction_list RBRACE .)
    IDENTIFIER      reduce using rule 94 (statement -> LBRACE instruction_list RBRACE .)
    LBRACKET        reduce using rule 94 (statement -> LBRACE instruction_list RBRACE .)
    PROMPT          reduce using rule 94 (statement -> LBRACE instruction_list RBRACE .)
    NOT             reduce using rule 94 (statement -> LBRACE instruction_list RBRACE .)
    LPAREN          reduce using rule 94 (statement -> LBRACE instruction_list RBRACE .)
    NUMBER          reduce using rule 94 (statement -> LBRACE instruction_list RBRACE .)
    FLOAT           reduce using rule 94 (statement -> LBRACE instruction_list RBRACE .)
    STRING          reduce using rule 94 (statement -> LBRACE instruction_list RBRACE .)
    TRUE            reduce using rule 94 (statement -> LBRACE instruction_list RBRACE .)
    FALSE           reduce using rule 94 (statement -> LBRACE instruction_list RBRACE .)
    PLUSPLUS        reduce using rule 94 (statement -> LBRACE instruction_list RBRACE .)
    MINUSMINUS      reduce using rule 94 (statement -> LBRACE instruction_list RBRACE .)
    CONSOLE         reduce using rule 94 (statement -> LBRACE instruction_list RBRACE .)
    VAR             reduce using rule 94 (statement -> LBRACE instruction_list RBRACE .)
    $end            reduce using rule 94 (statement -> LBRACE instruction_list RBRACE .)
    RBRACE          reduce using rule 94 (statement -> LBRACE instruction_list RBRACE .)
    ELSE            reduce using rule 94 (statement -> LBRACE instruction_list RBRACE .)
    CASE            reduce using rule 94 (statement -> LBRACE instruction_list RBRACE .)
    DEFAULT         reduce using rule 94 (statement -> LBRACE instruction_list RBRACE .)


state 152

    (109) instruction_list -> instruction_list statement .

    RBRACE          reduce using rule 109 (instruction_list -> instruction_list statement .)
    LBRACE          reduce using rule 109 (instruction_list -> instruction_list statement .)
    RETURN          reduce using rule 109 (instruction_list -> instruction_list statement .)
    LET             reduce using rule 109 (instruction_list -> instruction_list statement .)
    VAR             reduce using rule 109 (instruction_list -> instruction_list statement .)
    CONST           reduce using rule 109 (instruction_list -> instruction_list statement .)
    FUNCTION        reduce using rule 109 (instruction_list -> instruction_list statement .)
    ASYNC           reduce using rule 109 (instruction_list -> instruction_list statement .)
    CONSOLE         reduce using rule 109 (instruction_list -> instruction_list statement .)
    LBRACKET        reduce using rule 109 (instruction_list -> instruction_list statement .)
    PROMPT          reduce using rule 109 (instruction_list -> instruction_list statement .)
    NOT             reduce using rule 109 (instruction_list -> instruction_list statement .)
    LPAREN          reduce using rule 109 (instruction_list -> instruction_list statement .)
    IDENTIFIER      reduce using rule 109 (instruction_list -> instruction_list statement .)
    NUMBER          reduce using rule 109 (instruction_list -> instruction_list statement .)
    FLOAT           reduce using rule 109 (instruction_list -> instruction_list statement .)
    STRING          reduce using rule 109 (instruction_list -> instruction_list statement .)
    TRUE            reduce using rule 109 (instruction_list -> instruction_list statement .)
    FALSE           reduce using rule 109 (instruction_list -> instruction_list statement .)
    PLUSPLUS        reduce using rule 109 (instruction_list -> instruction_list statement .)
    MINUSMINUS      reduce using rule 109 (instruction_list -> instruction_list statement .)
    IF              reduce using rule 109 (instruction_list -> instruction_list statement .)
    SWITCH          reduce using rule 109 (instruction_list -> instruction_list statement .)
    WHILE           reduce using rule 109 (instruction_list -> instruction_list statement .)
    FOR             reduce using rule 109 (instruction_list -> instruction_list statement .)
    CLASS           reduce using rule 109 (instruction_list -> instruction_list statement .)
    CASE            reduce using rule 109 (instruction_list -> instruction_list statement .)
    DEFAULT         reduce using rule 109 (instruction_list -> instruction_list statement .)


state 153

    (142) expression -> LBRACE object_properties RBRACE .

    SEMICOLON       reduce using rule 142 (expression -> LBRACE object_properties RBRACE .)
    PLUS            reduce using rule 142 (expression -> LBRACE object_properties RBRACE .)
    MINUS           reduce using rule 142 (expression -> LBRACE object_properties RBRACE .)
    TIMES           reduce using rule 142 (expression -> LBRACE object_properties RBRACE .)
    DIV             reduce using rule 142 (expression -> LBRACE object_properties RBRACE .)
    MOD             reduce using rule 142 (expression -> LBRACE object_properties RBRACE .)
    PLUS_ASSIGN     reduce using rule 142 (expression -> LBRACE object_properties RBRACE .)
    MINUS_ASSIGN    reduce using rule 142 (expression -> LBRACE object_properties RBRACE .)
    MULT_ASSIGN     reduce using rule 142 (expression -> LBRACE object_properties RBRACE .)
    DIV_ASSIGN      reduce using rule 142 (expression -> LBRACE object_properties RBRACE .)
    MOD_ASSIGN      reduce using rule 142 (expression -> LBRACE object_properties RBRACE .)
    POT             reduce using rule 142 (expression -> LBRACE object_properties RBRACE .)
    AND             reduce using rule 142 (expression -> LBRACE object_properties RBRACE .)
    OR              reduce using rule 142 (expression -> LBRACE object_properties RBRACE .)
    EQ              reduce using rule 142 (expression -> LBRACE object_properties RBRACE .)
    NEQ             reduce using rule 142 (expression -> LBRACE object_properties RBRACE .)
    STRICT_EQ       reduce using rule 142 (expression -> LBRACE object_properties RBRACE .)
    STRICT_NEQ      reduce using rule 142 (expression -> LBRACE object_properties RBRACE .)
    LT              reduce using rule 142 (expression -> LBRACE object_properties RBRACE .)
    GT              reduce using rule 142 (expression -> LBRACE object_properties RBRACE .)
    LE              reduce using rule 142 (expression -> LBRACE object_properties RBRACE .)
    GE              reduce using rule 142 (expression -> LBRACE object_properties RBRACE .)
    DOT             reduce using rule 142 (expression -> LBRACE object_properties RBRACE .)
    LBRACKET        reduce using rule 142 (expression -> LBRACE object_properties RBRACE .)
    PLUSPLUS        reduce using rule 142 (expression -> LBRACE object_properties RBRACE .)
    MINUSMINUS      reduce using rule 142 (expression -> LBRACE object_properties RBRACE .)
    COMMA           reduce using rule 142 (expression -> LBRACE object_properties RBRACE .)
    RPAREN          reduce using rule 142 (expression -> LBRACE object_properties RBRACE .)
    RBRACKET        reduce using rule 142 (expression -> LBRACE object_properties RBRACE .)
    RBRACE          reduce using rule 142 (expression -> LBRACE object_properties RBRACE .)
    COLON           reduce using rule 142 (expression -> LBRACE object_properties RBRACE .)


state 154

    (144) object_properties -> object_property COMMA . object_properties
    (143) object_properties -> . object_property
    (144) object_properties -> . object_property COMMA object_properties
    (145) object_properties -> . empty
    (146) object_property -> . IDENTIFIER COLON expression
    (112) empty -> .

    IDENTIFIER      shift and go to state 148
    RBRACE          reduce using rule 112 (empty -> .)

    object_property                shift and go to state 85
    object_properties              shift and go to state 193
    empty                          shift and go to state 147

state 155

    (103) statement -> expression SEMICOLON .

    RBRACE          reduce using rule 103 (statement -> expression SEMICOLON .)
    LBRACE          reduce using rule 103 (statement -> expression SEMICOLON .)
    RETURN          reduce using rule 103 (statement -> expression SEMICOLON .)
    LET             reduce using rule 103 (statement -> expression SEMICOLON .)
    VAR             reduce using rule 103 (statement -> expression SEMICOLON .)
    CONST           reduce using rule 103 (statement -> expression SEMICOLON .)
    FUNCTION        reduce using rule 103 (statement -> expression SEMICOLON .)
    ASYNC           reduce using rule 103 (statement -> expression SEMICOLON .)
    CONSOLE         reduce using rule 103 (statement -> expression SEMICOLON .)
    LBRACKET        reduce using rule 103 (statement -> expression SEMICOLON .)
    PROMPT          reduce using rule 103 (statement -> expression SEMICOLON .)
    NOT             reduce using rule 103 (statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 103 (statement -> expression SEMICOLON .)
    IDENTIFIER      reduce using rule 103 (statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 103 (statement -> expression SEMICOLON .)
    FLOAT           reduce using rule 103 (statement -> expression SEMICOLON .)
    STRING          reduce using rule 103 (statement -> expression SEMICOLON .)
    TRUE            reduce using rule 103 (statement -> expression SEMICOLON .)
    FALSE           reduce using rule 103 (statement -> expression SEMICOLON .)
    PLUSPLUS        reduce using rule 103 (statement -> expression SEMICOLON .)
    MINUSMINUS      reduce using rule 103 (statement -> expression SEMICOLON .)
    IF              reduce using rule 103 (statement -> expression SEMICOLON .)
    SWITCH          reduce using rule 103 (statement -> expression SEMICOLON .)
    WHILE           reduce using rule 103 (statement -> expression SEMICOLON .)
    FOR             reduce using rule 103 (statement -> expression SEMICOLON .)
    CLASS           reduce using rule 103 (statement -> expression SEMICOLON .)
    ELSE            reduce using rule 103 (statement -> expression SEMICOLON .)
    ENUM            reduce using rule 103 (statement -> expression SEMICOLON .)
    INTERFACE       reduce using rule 103 (statement -> expression SEMICOLON .)
    $end            reduce using rule 103 (statement -> expression SEMICOLON .)
    CASE            reduce using rule 103 (statement -> expression SEMICOLON .)
    DEFAULT         reduce using rule 103 (statement -> expression SEMICOLON .)


state 156

    (146) object_property -> IDENTIFIER COLON . expression
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 194

state 157

    (113) constAssignment -> CONST IDENTIFIER . COLON type EQUAL expression SEMICOLON
    (114) constAssignment -> CONST IDENTIFIER . EQUAL expression SEMICOLON
    (136) arrow_function -> CONST IDENTIFIER . EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON

    COLON           shift and go to state 159
    EQUAL           shift and go to state 195


state 158

    (136) arrow_function -> CONST IDENTIFIER EQUAL . LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (114) constAssignment -> CONST IDENTIFIER EQUAL . expression SEMICOLON
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LPAREN          shift and go to state 196
    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 197

state 159

    (113) constAssignment -> CONST IDENTIFIER COLON . type EQUAL expression SEMICOLON
    (44) type -> . LBRACKET type COMMA type RBRACKET
    (46) type -> . NUMBER_TYPE
    (47) type -> . STRING_TYPE
    (48) type -> . BOOLEAN_TYPE
    (49) type -> . IDENTIFIER
    (50) type -> . VOID
    (51) type -> . type LBRACKET RBRACKET

    LBRACKET        shift and go to state 180
    NUMBER_TYPE     shift and go to state 181
    STRING_TYPE     shift and go to state 182
    BOOLEAN_TYPE    shift and go to state 183
    IDENTIFIER      shift and go to state 178
    VOID            shift and go to state 184

    type                           shift and go to state 198

state 160

    (132) async_function -> ASYNC FUNCTION IDENTIFIER . LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE

    LPAREN          shift and go to state 199


state 161

    (129) enum_definition -> ENUM IDENTIFIER LBRACE . enum_members RBRACE
    (130) enum_members -> . IDENTIFIER
    (131) enum_members -> . IDENTIFIER COMMA enum_members

    IDENTIFIER      shift and go to state 200

    enum_members                   shift and go to state 201

state 162

    (90) controlEstructure -> IF LPAREN expression . RPAREN statement
    (91) controlEstructure -> IF LPAREN expression . RPAREN statement ELSE statement
    (92) controlEstructure -> IF LPAREN expression . RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (93) controlEstructure -> IF LPAREN expression . RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

    RPAREN          shift and go to state 202
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72


state 163

    (123) controlEstructure -> SWITCH LPAREN expression . RPAREN LBRACE case_block RBRACE
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

    RPAREN          shift and go to state 203
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72


state 164

    (133) controlEstructure -> WHILE LPAREN expression . RPAREN statement
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

    RPAREN          shift and go to state 204
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72


state 165

    (26) forEstructure -> FOR LPAREN for_init . SEMICOLON expression SEMICOLON for_update RPAREN statement

    SEMICOLON       shift and go to state 205


state 166

    (30) for_init -> expression .
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

    SEMICOLON       reduce using rule 30 (for_init -> expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72


state 167

    (27) forEstructure -> FOR LPAREN CONST . IDENTIFIER OF IDENTIFIER RPAREN statement

    IDENTIFIER      shift and go to state 206


state 168

    (28) for_init -> LET . IDENTIFIER EQUAL expression
    (29) for_init -> LET . IDENTIFIER COLON type EQUAL expression

    IDENTIFIER      shift and go to state 207


state 169

    (31) for_init -> empty .

    SEMICOLON       reduce using rule 31 (for_init -> empty .)


state 170

    (115) class_definition -> CLASS IDENTIFIER LBRACE . class_body RBRACE
    (116) class_body -> . class_body class_element
    (117) class_body -> . class_element
    (118) class_body -> . empty
    (119) class_element -> . function
    (120) class_element -> . letAssignment
    (121) class_element -> . varAssignment
    (122) class_element -> . constAssignment
    (112) empty -> .
    (38) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (19) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (20) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (134) varAssignment -> . VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
    (135) varAssignment -> . VAR IDENTIFIER EQUAL expression SEMICOLON
    (113) constAssignment -> . CONST IDENTIFIER COLON type EQUAL expression SEMICOLON
    (114) constAssignment -> . CONST IDENTIFIER EQUAL expression SEMICOLON

  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for CONST resolved as shift
    RBRACE          reduce using rule 112 (empty -> .)
    FUNCTION        shift and go to state 21
    LET             shift and go to state 215
    VAR             shift and go to state 45
    CONST           shift and go to state 216

  ! FUNCTION        [ reduce using rule 112 (empty -> .) ]
  ! LET             [ reduce using rule 112 (empty -> .) ]
  ! VAR             [ reduce using rule 112 (empty -> .) ]
  ! CONST           [ reduce using rule 112 (empty -> .) ]

    class_body                     shift and go to state 208
    class_element                  shift and go to state 209
    empty                          shift and go to state 210
    function                       shift and go to state 211
    letAssignment                  shift and go to state 212
    varAssignment                  shift and go to state 213
    constAssignment                shift and go to state 214

state 171

    (105) statement -> RETURN expression SEMICOLON .

    LET             reduce using rule 105 (statement -> RETURN expression SEMICOLON .)
    FUNCTION        reduce using rule 105 (statement -> RETURN expression SEMICOLON .)
    CONST           reduce using rule 105 (statement -> RETURN expression SEMICOLON .)
    ASYNC           reduce using rule 105 (statement -> RETURN expression SEMICOLON .)
    ENUM            reduce using rule 105 (statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 105 (statement -> RETURN expression SEMICOLON .)
    SWITCH          reduce using rule 105 (statement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 105 (statement -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 105 (statement -> RETURN expression SEMICOLON .)
    CLASS           reduce using rule 105 (statement -> RETURN expression SEMICOLON .)
    LBRACE          reduce using rule 105 (statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 105 (statement -> RETURN expression SEMICOLON .)
    INTERFACE       reduce using rule 105 (statement -> RETURN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 105 (statement -> RETURN expression SEMICOLON .)
    LBRACKET        reduce using rule 105 (statement -> RETURN expression SEMICOLON .)
    PROMPT          reduce using rule 105 (statement -> RETURN expression SEMICOLON .)
    NOT             reduce using rule 105 (statement -> RETURN expression SEMICOLON .)
    LPAREN          reduce using rule 105 (statement -> RETURN expression SEMICOLON .)
    NUMBER          reduce using rule 105 (statement -> RETURN expression SEMICOLON .)
    FLOAT           reduce using rule 105 (statement -> RETURN expression SEMICOLON .)
    STRING          reduce using rule 105 (statement -> RETURN expression SEMICOLON .)
    TRUE            reduce using rule 105 (statement -> RETURN expression SEMICOLON .)
    FALSE           reduce using rule 105 (statement -> RETURN expression SEMICOLON .)
    PLUSPLUS        reduce using rule 105 (statement -> RETURN expression SEMICOLON .)
    MINUSMINUS      reduce using rule 105 (statement -> RETURN expression SEMICOLON .)
    CONSOLE         reduce using rule 105 (statement -> RETURN expression SEMICOLON .)
    VAR             reduce using rule 105 (statement -> RETURN expression SEMICOLON .)
    $end            reduce using rule 105 (statement -> RETURN expression SEMICOLON .)
    RBRACE          reduce using rule 105 (statement -> RETURN expression SEMICOLON .)
    ELSE            reduce using rule 105 (statement -> RETURN expression SEMICOLON .)
    CASE            reduce using rule 105 (statement -> RETURN expression SEMICOLON .)
    DEFAULT         reduce using rule 105 (statement -> RETURN expression SEMICOLON .)


state 172

    (137) interface -> INTERFACE IDENTIFIER LBRACE . interface_body RBRACE
    (138) interface_body -> . interface_body interface_property
    (139) interface_body -> . interface_property
    (140) interface_body -> . empty
    (141) interface_property -> . IDENTIFIER COLON type SEMICOLON
    (112) empty -> .

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    IDENTIFIER      shift and go to state 217
    RBRACE          reduce using rule 112 (empty -> .)

  ! IDENTIFIER      [ reduce using rule 112 (empty -> .) ]

    interface_body                 shift and go to state 218
    interface_property             shift and go to state 219
    empty                          shift and go to state 220

state 173

    (73) expression -> PROMPT LPAREN STRING . RPAREN

    RPAREN          shift and go to state 221


state 174

    (89) consolelog -> CONSOLE DOT LOG . LPAREN lista_expresiones_opt RPAREN SEMICOLON

    LPAREN          shift and go to state 222


state 175

    (134) varAssignment -> VAR IDENTIFIER COLON . type EQUAL expression SEMICOLON
    (44) type -> . LBRACKET type COMMA type RBRACKET
    (46) type -> . NUMBER_TYPE
    (47) type -> . STRING_TYPE
    (48) type -> . BOOLEAN_TYPE
    (49) type -> . IDENTIFIER
    (50) type -> . VOID
    (51) type -> . type LBRACKET RBRACKET

    LBRACKET        shift and go to state 180
    NUMBER_TYPE     shift and go to state 181
    STRING_TYPE     shift and go to state 182
    BOOLEAN_TYPE    shift and go to state 183
    IDENTIFIER      shift and go to state 178
    VOID            shift and go to state 184

    type                           shift and go to state 223

state 176

    (135) varAssignment -> VAR IDENTIFIER EQUAL . expression SEMICOLON
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 224

state 177

    (77) expression -> expression LBRACKET expression RBRACKET .

    SEMICOLON       reduce using rule 77 (expression -> expression LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 77 (expression -> expression LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 77 (expression -> expression LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 77 (expression -> expression LBRACKET expression RBRACKET .)
    DIV             reduce using rule 77 (expression -> expression LBRACKET expression RBRACKET .)
    MOD             reduce using rule 77 (expression -> expression LBRACKET expression RBRACKET .)
    PLUS_ASSIGN     reduce using rule 77 (expression -> expression LBRACKET expression RBRACKET .)
    MINUS_ASSIGN    reduce using rule 77 (expression -> expression LBRACKET expression RBRACKET .)
    MULT_ASSIGN     reduce using rule 77 (expression -> expression LBRACKET expression RBRACKET .)
    DIV_ASSIGN      reduce using rule 77 (expression -> expression LBRACKET expression RBRACKET .)
    MOD_ASSIGN      reduce using rule 77 (expression -> expression LBRACKET expression RBRACKET .)
    POT             reduce using rule 77 (expression -> expression LBRACKET expression RBRACKET .)
    AND             reduce using rule 77 (expression -> expression LBRACKET expression RBRACKET .)
    OR              reduce using rule 77 (expression -> expression LBRACKET expression RBRACKET .)
    EQ              reduce using rule 77 (expression -> expression LBRACKET expression RBRACKET .)
    NEQ             reduce using rule 77 (expression -> expression LBRACKET expression RBRACKET .)
    STRICT_EQ       reduce using rule 77 (expression -> expression LBRACKET expression RBRACKET .)
    STRICT_NEQ      reduce using rule 77 (expression -> expression LBRACKET expression RBRACKET .)
    LT              reduce using rule 77 (expression -> expression LBRACKET expression RBRACKET .)
    GT              reduce using rule 77 (expression -> expression LBRACKET expression RBRACKET .)
    LE              reduce using rule 77 (expression -> expression LBRACKET expression RBRACKET .)
    GE              reduce using rule 77 (expression -> expression LBRACKET expression RBRACKET .)
    DOT             reduce using rule 77 (expression -> expression LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 77 (expression -> expression LBRACKET expression RBRACKET .)
    PLUSPLUS        reduce using rule 77 (expression -> expression LBRACKET expression RBRACKET .)
    MINUSMINUS      reduce using rule 77 (expression -> expression LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 77 (expression -> expression LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 77 (expression -> expression LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 77 (expression -> expression LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 77 (expression -> expression LBRACKET expression RBRACKET .)
    COLON           reduce using rule 77 (expression -> expression LBRACKET expression RBRACKET .)


state 178

    (49) type -> IDENTIFIER .

    EQUAL           reduce using rule 49 (type -> IDENTIFIER .)
    LBRACKET        reduce using rule 49 (type -> IDENTIFIER .)
    COMMA           reduce using rule 49 (type -> IDENTIFIER .)
    RPAREN          reduce using rule 49 (type -> IDENTIFIER .)
    SEMICOLON       reduce using rule 49 (type -> IDENTIFIER .)
    RBRACKET        reduce using rule 49 (type -> IDENTIFIER .)
    LBRACE          reduce using rule 49 (type -> IDENTIFIER .)


state 179

    (19) letAssignment -> LET IDENTIFIER COLON type . EQUAL expression SEMICOLON
    (21) declaracion -> LET IDENTIFIER COLON type . LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (51) type -> type . LBRACKET RBRACKET

    EQUAL           shift and go to state 225
    LBRACKET        shift and go to state 226


state 180

    (44) type -> LBRACKET . type COMMA type RBRACKET
    (44) type -> . LBRACKET type COMMA type RBRACKET
    (46) type -> . NUMBER_TYPE
    (47) type -> . STRING_TYPE
    (48) type -> . BOOLEAN_TYPE
    (49) type -> . IDENTIFIER
    (50) type -> . VOID
    (51) type -> . type LBRACKET RBRACKET

    LBRACKET        shift and go to state 180
    NUMBER_TYPE     shift and go to state 181
    STRING_TYPE     shift and go to state 182
    BOOLEAN_TYPE    shift and go to state 183
    IDENTIFIER      shift and go to state 178
    VOID            shift and go to state 184

    type                           shift and go to state 227

state 181

    (46) type -> NUMBER_TYPE .

    EQUAL           reduce using rule 46 (type -> NUMBER_TYPE .)
    LBRACKET        reduce using rule 46 (type -> NUMBER_TYPE .)
    COMMA           reduce using rule 46 (type -> NUMBER_TYPE .)
    RPAREN          reduce using rule 46 (type -> NUMBER_TYPE .)
    SEMICOLON       reduce using rule 46 (type -> NUMBER_TYPE .)
    RBRACKET        reduce using rule 46 (type -> NUMBER_TYPE .)
    LBRACE          reduce using rule 46 (type -> NUMBER_TYPE .)


state 182

    (47) type -> STRING_TYPE .

    EQUAL           reduce using rule 47 (type -> STRING_TYPE .)
    LBRACKET        reduce using rule 47 (type -> STRING_TYPE .)
    COMMA           reduce using rule 47 (type -> STRING_TYPE .)
    RPAREN          reduce using rule 47 (type -> STRING_TYPE .)
    SEMICOLON       reduce using rule 47 (type -> STRING_TYPE .)
    RBRACKET        reduce using rule 47 (type -> STRING_TYPE .)
    LBRACE          reduce using rule 47 (type -> STRING_TYPE .)


state 183

    (48) type -> BOOLEAN_TYPE .

    EQUAL           reduce using rule 48 (type -> BOOLEAN_TYPE .)
    LBRACKET        reduce using rule 48 (type -> BOOLEAN_TYPE .)
    COMMA           reduce using rule 48 (type -> BOOLEAN_TYPE .)
    RPAREN          reduce using rule 48 (type -> BOOLEAN_TYPE .)
    SEMICOLON       reduce using rule 48 (type -> BOOLEAN_TYPE .)
    RBRACKET        reduce using rule 48 (type -> BOOLEAN_TYPE .)
    LBRACE          reduce using rule 48 (type -> BOOLEAN_TYPE .)


state 184

    (50) type -> VOID .

    EQUAL           reduce using rule 50 (type -> VOID .)
    LBRACKET        reduce using rule 50 (type -> VOID .)
    COMMA           reduce using rule 50 (type -> VOID .)
    RPAREN          reduce using rule 50 (type -> VOID .)
    SEMICOLON       reduce using rule 50 (type -> VOID .)
    RBRACKET        reduce using rule 50 (type -> VOID .)
    LBRACE          reduce using rule 50 (type -> VOID .)


state 185

    (20) letAssignment -> LET IDENTIFIER EQUAL expression . SEMICOLON
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

    SEMICOLON       shift and go to state 228
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72


state 186

    (18) assignment -> IDENTIFIER EQUAL expression SEMICOLON .

    LET             reduce using rule 18 (assignment -> IDENTIFIER EQUAL expression SEMICOLON .)
    FUNCTION        reduce using rule 18 (assignment -> IDENTIFIER EQUAL expression SEMICOLON .)
    CONST           reduce using rule 18 (assignment -> IDENTIFIER EQUAL expression SEMICOLON .)
    ASYNC           reduce using rule 18 (assignment -> IDENTIFIER EQUAL expression SEMICOLON .)
    ENUM            reduce using rule 18 (assignment -> IDENTIFIER EQUAL expression SEMICOLON .)
    IF              reduce using rule 18 (assignment -> IDENTIFIER EQUAL expression SEMICOLON .)
    SWITCH          reduce using rule 18 (assignment -> IDENTIFIER EQUAL expression SEMICOLON .)
    WHILE           reduce using rule 18 (assignment -> IDENTIFIER EQUAL expression SEMICOLON .)
    FOR             reduce using rule 18 (assignment -> IDENTIFIER EQUAL expression SEMICOLON .)
    CLASS           reduce using rule 18 (assignment -> IDENTIFIER EQUAL expression SEMICOLON .)
    LBRACE          reduce using rule 18 (assignment -> IDENTIFIER EQUAL expression SEMICOLON .)
    RETURN          reduce using rule 18 (assignment -> IDENTIFIER EQUAL expression SEMICOLON .)
    INTERFACE       reduce using rule 18 (assignment -> IDENTIFIER EQUAL expression SEMICOLON .)
    IDENTIFIER      reduce using rule 18 (assignment -> IDENTIFIER EQUAL expression SEMICOLON .)
    LBRACKET        reduce using rule 18 (assignment -> IDENTIFIER EQUAL expression SEMICOLON .)
    PROMPT          reduce using rule 18 (assignment -> IDENTIFIER EQUAL expression SEMICOLON .)
    NOT             reduce using rule 18 (assignment -> IDENTIFIER EQUAL expression SEMICOLON .)
    LPAREN          reduce using rule 18 (assignment -> IDENTIFIER EQUAL expression SEMICOLON .)
    NUMBER          reduce using rule 18 (assignment -> IDENTIFIER EQUAL expression SEMICOLON .)
    FLOAT           reduce using rule 18 (assignment -> IDENTIFIER EQUAL expression SEMICOLON .)
    STRING          reduce using rule 18 (assignment -> IDENTIFIER EQUAL expression SEMICOLON .)
    TRUE            reduce using rule 18 (assignment -> IDENTIFIER EQUAL expression SEMICOLON .)
    FALSE           reduce using rule 18 (assignment -> IDENTIFIER EQUAL expression SEMICOLON .)
    PLUSPLUS        reduce using rule 18 (assignment -> IDENTIFIER EQUAL expression SEMICOLON .)
    MINUSMINUS      reduce using rule 18 (assignment -> IDENTIFIER EQUAL expression SEMICOLON .)
    CONSOLE         reduce using rule 18 (assignment -> IDENTIFIER EQUAL expression SEMICOLON .)
    VAR             reduce using rule 18 (assignment -> IDENTIFIER EQUAL expression SEMICOLON .)
    $end            reduce using rule 18 (assignment -> IDENTIFIER EQUAL expression SEMICOLON .)


state 187

    (78) expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .

    SEMICOLON       reduce using rule 78 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    PLUS            reduce using rule 78 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    MINUS           reduce using rule 78 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    TIMES           reduce using rule 78 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    DIV             reduce using rule 78 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    MOD             reduce using rule 78 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    PLUS_ASSIGN     reduce using rule 78 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    MINUS_ASSIGN    reduce using rule 78 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    MULT_ASSIGN     reduce using rule 78 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    DIV_ASSIGN      reduce using rule 78 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    MOD_ASSIGN      reduce using rule 78 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    POT             reduce using rule 78 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    AND             reduce using rule 78 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    OR              reduce using rule 78 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    EQ              reduce using rule 78 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    NEQ             reduce using rule 78 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    STRICT_EQ       reduce using rule 78 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    STRICT_NEQ      reduce using rule 78 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    LT              reduce using rule 78 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    GT              reduce using rule 78 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    LE              reduce using rule 78 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    GE              reduce using rule 78 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    DOT             reduce using rule 78 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    LBRACKET        reduce using rule 78 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    PLUSPLUS        reduce using rule 78 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    MINUSMINUS      reduce using rule 78 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    COMMA           reduce using rule 78 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    RPAREN          reduce using rule 78 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    RBRACKET        reduce using rule 78 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    RBRACE          reduce using rule 78 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    COLON           reduce using rule 78 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)


state 188

    (25) lista_expresiones -> expression COMMA . lista_expresiones
    (24) lista_expresiones -> . expression
    (25) lista_expresiones -> . expression COMMA lista_expresiones
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 145
    lista_expresiones              shift and go to state 229

state 189

    (45) expression -> LBRACKET expression COMMA expression . RBRACKET
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

    RBRACKET        shift and go to state 230
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72


state 190

    (39) parameters -> IDENTIFIER . COLON type
    (40) parameters -> IDENTIFIER . COLON type COMMA parameters

    COLON           shift and go to state 231


state 191

    (38) function -> FUNCTION IDENTIFIER LPAREN parameters . RPAREN COLON type LBRACE body_function RBRACE

    RPAREN          shift and go to state 232


state 192

    (41) parameters -> empty .

    RPAREN          reduce using rule 41 (parameters -> empty .)


state 193

    (144) object_properties -> object_property COMMA object_properties .

    RBRACE          reduce using rule 144 (object_properties -> object_property COMMA object_properties .)


state 194

    (146) object_property -> IDENTIFIER COLON expression .
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

    COMMA           reduce using rule 146 (object_property -> IDENTIFIER COLON expression .)
    RBRACE          reduce using rule 146 (object_property -> IDENTIFIER COLON expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72


state 195

    (114) constAssignment -> CONST IDENTIFIER EQUAL . expression SEMICOLON
    (136) arrow_function -> CONST IDENTIFIER EQUAL . LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LPAREN          shift and go to state 196
    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 197

state 196

    (136) arrow_function -> CONST IDENTIFIER EQUAL LPAREN . parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (75) expression -> LPAREN . expression RPAREN
    (39) parameters -> . IDENTIFIER COLON type
    (40) parameters -> . IDENTIFIER COLON type COMMA parameters
    (41) parameters -> . empty
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE
    (112) empty -> .

    IDENTIFIER      shift and go to state 233
    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78
    RPAREN          reduce using rule 112 (empty -> .)

    parameters                     shift and go to state 234
    expression                     shift and go to state 80
    empty                          shift and go to state 192

state 197

    (114) constAssignment -> CONST IDENTIFIER EQUAL expression . SEMICOLON
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

    SEMICOLON       shift and go to state 235
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72


state 198

    (113) constAssignment -> CONST IDENTIFIER COLON type . EQUAL expression SEMICOLON
    (51) type -> type . LBRACKET RBRACKET

    EQUAL           shift and go to state 236
    LBRACKET        shift and go to state 237


state 199

    (132) async_function -> ASYNC FUNCTION IDENTIFIER LPAREN . parameters RPAREN COLON type LBRACE body_function RBRACE
    (39) parameters -> . IDENTIFIER COLON type
    (40) parameters -> . IDENTIFIER COLON type COMMA parameters
    (41) parameters -> . empty
    (112) empty -> .

    IDENTIFIER      shift and go to state 190
    RPAREN          reduce using rule 112 (empty -> .)

    parameters                     shift and go to state 238
    empty                          shift and go to state 192

state 200

    (130) enum_members -> IDENTIFIER .
    (131) enum_members -> IDENTIFIER . COMMA enum_members

    RBRACE          reduce using rule 130 (enum_members -> IDENTIFIER .)
    COMMA           shift and go to state 239


state 201

    (129) enum_definition -> ENUM IDENTIFIER LBRACE enum_members . RBRACE

    RBRACE          shift and go to state 240


state 202

    (90) controlEstructure -> IF LPAREN expression RPAREN . statement
    (91) controlEstructure -> IF LPAREN expression RPAREN . statement ELSE statement
    (92) controlEstructure -> IF LPAREN expression RPAREN . statement ELSE IF LPAREN expression RPAREN statement
    (93) controlEstructure -> IF LPAREN expression RPAREN . statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (94) statement -> . LBRACE instruction_list RBRACE
    (95) statement -> . letAssignment
    (96) statement -> . varAssignment
    (97) statement -> . constAssignment
    (98) statement -> . declaracion
    (99) statement -> . function
    (100) statement -> . arrow_function
    (101) statement -> . async_function
    (102) statement -> . consolelog
    (103) statement -> . expression SEMICOLON
    (104) statement -> . controlEstructure
    (105) statement -> . RETURN expression SEMICOLON
    (106) statement -> . forEstructure
    (107) statement -> . RETURN SEMICOLON
    (108) statement -> . class_definition
    (19) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (20) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (134) varAssignment -> . VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
    (135) varAssignment -> . VAR IDENTIFIER EQUAL expression SEMICOLON
    (113) constAssignment -> . CONST IDENTIFIER COLON type EQUAL expression SEMICOLON
    (114) constAssignment -> . CONST IDENTIFIER EQUAL expression SEMICOLON
    (21) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (38) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (136) arrow_function -> . CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (132) async_function -> . ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (89) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE
    (90) controlEstructure -> . IF LPAREN expression RPAREN statement
    (91) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (92) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (93) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (123) controlEstructure -> . SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE
    (133) controlEstructure -> . WHILE LPAREN expression RPAREN statement
    (26) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (27) forEstructure -> . FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement
    (115) class_definition -> . CLASS IDENTIFIER LBRACE class_body RBRACE

    LBRACE          shift and go to state 23
    RETURN          shift and go to state 33
    LET             shift and go to state 18
    VAR             shift and go to state 45
    CONST           shift and go to state 98
    FUNCTION        shift and go to state 21
    ASYNC           shift and go to state 25
    CONSOLE         shift and go to state 44
    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    CLASS           shift and go to state 31

    expression                     shift and go to state 93
    statement                      shift and go to state 241
    letAssignment                  shift and go to state 86
    varAssignment                  shift and go to state 32
    constAssignment                shift and go to state 87
    declaracion                    shift and go to state 88
    function                       shift and go to state 89
    arrow_function                 shift and go to state 90
    async_function                 shift and go to state 91
    consolelog                     shift and go to state 92
    controlEstructure              shift and go to state 94
    forEstructure                  shift and go to state 95
    class_definition               shift and go to state 96

state 203

    (123) controlEstructure -> SWITCH LPAREN expression RPAREN . LBRACE case_block RBRACE

    LBRACE          shift and go to state 242


state 204

    (133) controlEstructure -> WHILE LPAREN expression RPAREN . statement
    (94) statement -> . LBRACE instruction_list RBRACE
    (95) statement -> . letAssignment
    (96) statement -> . varAssignment
    (97) statement -> . constAssignment
    (98) statement -> . declaracion
    (99) statement -> . function
    (100) statement -> . arrow_function
    (101) statement -> . async_function
    (102) statement -> . consolelog
    (103) statement -> . expression SEMICOLON
    (104) statement -> . controlEstructure
    (105) statement -> . RETURN expression SEMICOLON
    (106) statement -> . forEstructure
    (107) statement -> . RETURN SEMICOLON
    (108) statement -> . class_definition
    (19) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (20) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (134) varAssignment -> . VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
    (135) varAssignment -> . VAR IDENTIFIER EQUAL expression SEMICOLON
    (113) constAssignment -> . CONST IDENTIFIER COLON type EQUAL expression SEMICOLON
    (114) constAssignment -> . CONST IDENTIFIER EQUAL expression SEMICOLON
    (21) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (38) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (136) arrow_function -> . CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (132) async_function -> . ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (89) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE
    (90) controlEstructure -> . IF LPAREN expression RPAREN statement
    (91) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (92) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (93) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (123) controlEstructure -> . SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE
    (133) controlEstructure -> . WHILE LPAREN expression RPAREN statement
    (26) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (27) forEstructure -> . FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement
    (115) class_definition -> . CLASS IDENTIFIER LBRACE class_body RBRACE

    LBRACE          shift and go to state 23
    RETURN          shift and go to state 33
    LET             shift and go to state 18
    VAR             shift and go to state 45
    CONST           shift and go to state 98
    FUNCTION        shift and go to state 21
    ASYNC           shift and go to state 25
    CONSOLE         shift and go to state 44
    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    CLASS           shift and go to state 31

    expression                     shift and go to state 93
    statement                      shift and go to state 243
    letAssignment                  shift and go to state 86
    varAssignment                  shift and go to state 32
    constAssignment                shift and go to state 87
    declaracion                    shift and go to state 88
    function                       shift and go to state 89
    arrow_function                 shift and go to state 90
    async_function                 shift and go to state 91
    consolelog                     shift and go to state 92
    controlEstructure              shift and go to state 94
    forEstructure                  shift and go to state 95
    class_definition               shift and go to state 96

state 205

    (26) forEstructure -> FOR LPAREN for_init SEMICOLON . expression SEMICOLON for_update RPAREN statement
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 244

state 206

    (27) forEstructure -> FOR LPAREN CONST IDENTIFIER . OF IDENTIFIER RPAREN statement

    OF              shift and go to state 245


state 207

    (28) for_init -> LET IDENTIFIER . EQUAL expression
    (29) for_init -> LET IDENTIFIER . COLON type EQUAL expression

    EQUAL           shift and go to state 246
    COLON           shift and go to state 247


state 208

    (115) class_definition -> CLASS IDENTIFIER LBRACE class_body . RBRACE
    (116) class_body -> class_body . class_element
    (119) class_element -> . function
    (120) class_element -> . letAssignment
    (121) class_element -> . varAssignment
    (122) class_element -> . constAssignment
    (38) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (19) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (20) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (134) varAssignment -> . VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
    (135) varAssignment -> . VAR IDENTIFIER EQUAL expression SEMICOLON
    (113) constAssignment -> . CONST IDENTIFIER COLON type EQUAL expression SEMICOLON
    (114) constAssignment -> . CONST IDENTIFIER EQUAL expression SEMICOLON

    RBRACE          shift and go to state 248
    FUNCTION        shift and go to state 21
    LET             shift and go to state 215
    VAR             shift and go to state 45
    CONST           shift and go to state 216

    class_element                  shift and go to state 249
    function                       shift and go to state 211
    letAssignment                  shift and go to state 212
    varAssignment                  shift and go to state 213
    constAssignment                shift and go to state 214

state 209

    (117) class_body -> class_element .

    RBRACE          reduce using rule 117 (class_body -> class_element .)
    FUNCTION        reduce using rule 117 (class_body -> class_element .)
    LET             reduce using rule 117 (class_body -> class_element .)
    VAR             reduce using rule 117 (class_body -> class_element .)
    CONST           reduce using rule 117 (class_body -> class_element .)


state 210

    (118) class_body -> empty .

    RBRACE          reduce using rule 118 (class_body -> empty .)
    FUNCTION        reduce using rule 118 (class_body -> empty .)
    LET             reduce using rule 118 (class_body -> empty .)
    VAR             reduce using rule 118 (class_body -> empty .)
    CONST           reduce using rule 118 (class_body -> empty .)


state 211

    (119) class_element -> function .

    RBRACE          reduce using rule 119 (class_element -> function .)
    FUNCTION        reduce using rule 119 (class_element -> function .)
    LET             reduce using rule 119 (class_element -> function .)
    VAR             reduce using rule 119 (class_element -> function .)
    CONST           reduce using rule 119 (class_element -> function .)


state 212

    (120) class_element -> letAssignment .

    RBRACE          reduce using rule 120 (class_element -> letAssignment .)
    FUNCTION        reduce using rule 120 (class_element -> letAssignment .)
    LET             reduce using rule 120 (class_element -> letAssignment .)
    VAR             reduce using rule 120 (class_element -> letAssignment .)
    CONST           reduce using rule 120 (class_element -> letAssignment .)


state 213

    (121) class_element -> varAssignment .

    RBRACE          reduce using rule 121 (class_element -> varAssignment .)
    FUNCTION        reduce using rule 121 (class_element -> varAssignment .)
    LET             reduce using rule 121 (class_element -> varAssignment .)
    VAR             reduce using rule 121 (class_element -> varAssignment .)
    CONST           reduce using rule 121 (class_element -> varAssignment .)


state 214

    (122) class_element -> constAssignment .

    RBRACE          reduce using rule 122 (class_element -> constAssignment .)
    FUNCTION        reduce using rule 122 (class_element -> constAssignment .)
    LET             reduce using rule 122 (class_element -> constAssignment .)
    VAR             reduce using rule 122 (class_element -> constAssignment .)
    CONST           reduce using rule 122 (class_element -> constAssignment .)


state 215

    (19) letAssignment -> LET . IDENTIFIER COLON type EQUAL expression SEMICOLON
    (20) letAssignment -> LET . IDENTIFIER EQUAL expression SEMICOLON

    IDENTIFIER      shift and go to state 250


state 216

    (113) constAssignment -> CONST . IDENTIFIER COLON type EQUAL expression SEMICOLON
    (114) constAssignment -> CONST . IDENTIFIER EQUAL expression SEMICOLON

    IDENTIFIER      shift and go to state 251


state 217

    (141) interface_property -> IDENTIFIER . COLON type SEMICOLON

    COLON           shift and go to state 252


state 218

    (137) interface -> INTERFACE IDENTIFIER LBRACE interface_body . RBRACE
    (138) interface_body -> interface_body . interface_property
    (141) interface_property -> . IDENTIFIER COLON type SEMICOLON

    RBRACE          shift and go to state 253
    IDENTIFIER      shift and go to state 217

    interface_property             shift and go to state 254

state 219

    (139) interface_body -> interface_property .

    RBRACE          reduce using rule 139 (interface_body -> interface_property .)
    IDENTIFIER      reduce using rule 139 (interface_body -> interface_property .)


state 220

    (140) interface_body -> empty .

    RBRACE          reduce using rule 140 (interface_body -> empty .)
    IDENTIFIER      reduce using rule 140 (interface_body -> empty .)


state 221

    (73) expression -> PROMPT LPAREN STRING RPAREN .

    SEMICOLON       reduce using rule 73 (expression -> PROMPT LPAREN STRING RPAREN .)
    PLUS            reduce using rule 73 (expression -> PROMPT LPAREN STRING RPAREN .)
    MINUS           reduce using rule 73 (expression -> PROMPT LPAREN STRING RPAREN .)
    TIMES           reduce using rule 73 (expression -> PROMPT LPAREN STRING RPAREN .)
    DIV             reduce using rule 73 (expression -> PROMPT LPAREN STRING RPAREN .)
    MOD             reduce using rule 73 (expression -> PROMPT LPAREN STRING RPAREN .)
    PLUS_ASSIGN     reduce using rule 73 (expression -> PROMPT LPAREN STRING RPAREN .)
    MINUS_ASSIGN    reduce using rule 73 (expression -> PROMPT LPAREN STRING RPAREN .)
    MULT_ASSIGN     reduce using rule 73 (expression -> PROMPT LPAREN STRING RPAREN .)
    DIV_ASSIGN      reduce using rule 73 (expression -> PROMPT LPAREN STRING RPAREN .)
    MOD_ASSIGN      reduce using rule 73 (expression -> PROMPT LPAREN STRING RPAREN .)
    POT             reduce using rule 73 (expression -> PROMPT LPAREN STRING RPAREN .)
    AND             reduce using rule 73 (expression -> PROMPT LPAREN STRING RPAREN .)
    OR              reduce using rule 73 (expression -> PROMPT LPAREN STRING RPAREN .)
    EQ              reduce using rule 73 (expression -> PROMPT LPAREN STRING RPAREN .)
    NEQ             reduce using rule 73 (expression -> PROMPT LPAREN STRING RPAREN .)
    STRICT_EQ       reduce using rule 73 (expression -> PROMPT LPAREN STRING RPAREN .)
    STRICT_NEQ      reduce using rule 73 (expression -> PROMPT LPAREN STRING RPAREN .)
    LT              reduce using rule 73 (expression -> PROMPT LPAREN STRING RPAREN .)
    GT              reduce using rule 73 (expression -> PROMPT LPAREN STRING RPAREN .)
    LE              reduce using rule 73 (expression -> PROMPT LPAREN STRING RPAREN .)
    GE              reduce using rule 73 (expression -> PROMPT LPAREN STRING RPAREN .)
    DOT             reduce using rule 73 (expression -> PROMPT LPAREN STRING RPAREN .)
    LBRACKET        reduce using rule 73 (expression -> PROMPT LPAREN STRING RPAREN .)
    PLUSPLUS        reduce using rule 73 (expression -> PROMPT LPAREN STRING RPAREN .)
    MINUSMINUS      reduce using rule 73 (expression -> PROMPT LPAREN STRING RPAREN .)
    COMMA           reduce using rule 73 (expression -> PROMPT LPAREN STRING RPAREN .)
    RPAREN          reduce using rule 73 (expression -> PROMPT LPAREN STRING RPAREN .)
    RBRACKET        reduce using rule 73 (expression -> PROMPT LPAREN STRING RPAREN .)
    RBRACE          reduce using rule 73 (expression -> PROMPT LPAREN STRING RPAREN .)
    COLON           reduce using rule 73 (expression -> PROMPT LPAREN STRING RPAREN .)


state 222

    (89) consolelog -> CONSOLE DOT LOG LPAREN . lista_expresiones_opt RPAREN SEMICOLON
    (22) lista_expresiones_opt -> . lista_expresiones
    (23) lista_expresiones_opt -> . empty
    (24) lista_expresiones -> . expression
    (25) lista_expresiones -> . expression COMMA lista_expresiones
    (112) empty -> .
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    RPAREN          reduce using rule 112 (empty -> .)
    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    lista_expresiones_opt          shift and go to state 255
    lista_expresiones              shift and go to state 143
    empty                          shift and go to state 144
    expression                     shift and go to state 145

state 223

    (134) varAssignment -> VAR IDENTIFIER COLON type . EQUAL expression SEMICOLON
    (51) type -> type . LBRACKET RBRACKET

    EQUAL           shift and go to state 256
    LBRACKET        shift and go to state 237


state 224

    (135) varAssignment -> VAR IDENTIFIER EQUAL expression . SEMICOLON
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

    SEMICOLON       shift and go to state 257
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72


state 225

    (19) letAssignment -> LET IDENTIFIER COLON type EQUAL . expression SEMICOLON
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 258

state 226

    (21) declaracion -> LET IDENTIFIER COLON type LBRACKET . RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (51) type -> type LBRACKET . RBRACKET

    RBRACKET        shift and go to state 259


state 227

    (44) type -> LBRACKET type . COMMA type RBRACKET
    (51) type -> type . LBRACKET RBRACKET

    COMMA           shift and go to state 260
    LBRACKET        shift and go to state 237


state 228

    (20) letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .

    LET             reduce using rule 20 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    FUNCTION        reduce using rule 20 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    CONST           reduce using rule 20 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    ASYNC           reduce using rule 20 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    ENUM            reduce using rule 20 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    IF              reduce using rule 20 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    SWITCH          reduce using rule 20 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    WHILE           reduce using rule 20 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    FOR             reduce using rule 20 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    CLASS           reduce using rule 20 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    LBRACE          reduce using rule 20 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    RETURN          reduce using rule 20 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    INTERFACE       reduce using rule 20 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    IDENTIFIER      reduce using rule 20 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    LBRACKET        reduce using rule 20 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    PROMPT          reduce using rule 20 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    NOT             reduce using rule 20 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    LPAREN          reduce using rule 20 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    NUMBER          reduce using rule 20 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    FLOAT           reduce using rule 20 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    STRING          reduce using rule 20 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    TRUE            reduce using rule 20 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    FALSE           reduce using rule 20 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    PLUSPLUS        reduce using rule 20 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    MINUSMINUS      reduce using rule 20 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    CONSOLE         reduce using rule 20 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    VAR             reduce using rule 20 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    $end            reduce using rule 20 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    RBRACE          reduce using rule 20 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    ELSE            reduce using rule 20 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    CASE            reduce using rule 20 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    DEFAULT         reduce using rule 20 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)


state 229

    (25) lista_expresiones -> expression COMMA lista_expresiones .

    RPAREN          reduce using rule 25 (lista_expresiones -> expression COMMA lista_expresiones .)
    RBRACKET        reduce using rule 25 (lista_expresiones -> expression COMMA lista_expresiones .)


state 230

    (45) expression -> LBRACKET expression COMMA expression RBRACKET .

    SEMICOLON       reduce using rule 45 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    PLUS            reduce using rule 45 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    MINUS           reduce using rule 45 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    TIMES           reduce using rule 45 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    DIV             reduce using rule 45 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    MOD             reduce using rule 45 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    PLUS_ASSIGN     reduce using rule 45 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    MINUS_ASSIGN    reduce using rule 45 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    MULT_ASSIGN     reduce using rule 45 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    DIV_ASSIGN      reduce using rule 45 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    MOD_ASSIGN      reduce using rule 45 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    POT             reduce using rule 45 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    AND             reduce using rule 45 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    OR              reduce using rule 45 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    EQ              reduce using rule 45 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    NEQ             reduce using rule 45 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    STRICT_EQ       reduce using rule 45 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    STRICT_NEQ      reduce using rule 45 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    LT              reduce using rule 45 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    GT              reduce using rule 45 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    LE              reduce using rule 45 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    GE              reduce using rule 45 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    DOT             reduce using rule 45 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    LBRACKET        reduce using rule 45 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    PLUSPLUS        reduce using rule 45 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    MINUSMINUS      reduce using rule 45 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    COMMA           reduce using rule 45 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    RPAREN          reduce using rule 45 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    RBRACKET        reduce using rule 45 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    RBRACE          reduce using rule 45 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    COLON           reduce using rule 45 (expression -> LBRACKET expression COMMA expression RBRACKET .)


state 231

    (39) parameters -> IDENTIFIER COLON . type
    (40) parameters -> IDENTIFIER COLON . type COMMA parameters
    (44) type -> . LBRACKET type COMMA type RBRACKET
    (46) type -> . NUMBER_TYPE
    (47) type -> . STRING_TYPE
    (48) type -> . BOOLEAN_TYPE
    (49) type -> . IDENTIFIER
    (50) type -> . VOID
    (51) type -> . type LBRACKET RBRACKET

    LBRACKET        shift and go to state 180
    NUMBER_TYPE     shift and go to state 181
    STRING_TYPE     shift and go to state 182
    BOOLEAN_TYPE    shift and go to state 183
    IDENTIFIER      shift and go to state 178
    VOID            shift and go to state 184

    type                           shift and go to state 261

state 232

    (38) function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN . COLON type LBRACE body_function RBRACE

    COLON           shift and go to state 262


state 233

    (39) parameters -> IDENTIFIER . COLON type
    (40) parameters -> IDENTIFIER . COLON type COMMA parameters
    (78) expression -> IDENTIFIER . LPAREN lista_expresiones_opt RPAREN
    (82) expression -> IDENTIFIER .

    COLON           shift and go to state 231
    LPAREN          shift and go to state 75
    RPAREN          reduce using rule 82 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 82 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 82 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 82 (expression -> IDENTIFIER .)
    DIV             reduce using rule 82 (expression -> IDENTIFIER .)
    MOD             reduce using rule 82 (expression -> IDENTIFIER .)
    PLUS_ASSIGN     reduce using rule 82 (expression -> IDENTIFIER .)
    MINUS_ASSIGN    reduce using rule 82 (expression -> IDENTIFIER .)
    MULT_ASSIGN     reduce using rule 82 (expression -> IDENTIFIER .)
    DIV_ASSIGN      reduce using rule 82 (expression -> IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 82 (expression -> IDENTIFIER .)
    POT             reduce using rule 82 (expression -> IDENTIFIER .)
    AND             reduce using rule 82 (expression -> IDENTIFIER .)
    OR              reduce using rule 82 (expression -> IDENTIFIER .)
    EQ              reduce using rule 82 (expression -> IDENTIFIER .)
    NEQ             reduce using rule 82 (expression -> IDENTIFIER .)
    STRICT_EQ       reduce using rule 82 (expression -> IDENTIFIER .)
    STRICT_NEQ      reduce using rule 82 (expression -> IDENTIFIER .)
    LT              reduce using rule 82 (expression -> IDENTIFIER .)
    GT              reduce using rule 82 (expression -> IDENTIFIER .)
    LE              reduce using rule 82 (expression -> IDENTIFIER .)
    GE              reduce using rule 82 (expression -> IDENTIFIER .)
    DOT             reduce using rule 82 (expression -> IDENTIFIER .)
    LBRACKET        reduce using rule 82 (expression -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 82 (expression -> IDENTIFIER .)
    MINUSMINUS      reduce using rule 82 (expression -> IDENTIFIER .)


state 234

    (136) arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters . RPAREN ARROW LBRACE body_function RBRACE SEMICOLON

    RPAREN          shift and go to state 263


state 235

    (114) constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON .

    LET             reduce using rule 114 (constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON .)
    FUNCTION        reduce using rule 114 (constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON .)
    CONST           reduce using rule 114 (constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON .)
    ASYNC           reduce using rule 114 (constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON .)
    ENUM            reduce using rule 114 (constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON .)
    IF              reduce using rule 114 (constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON .)
    SWITCH          reduce using rule 114 (constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON .)
    WHILE           reduce using rule 114 (constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON .)
    FOR             reduce using rule 114 (constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON .)
    CLASS           reduce using rule 114 (constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON .)
    LBRACE          reduce using rule 114 (constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON .)
    RETURN          reduce using rule 114 (constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON .)
    INTERFACE       reduce using rule 114 (constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON .)
    IDENTIFIER      reduce using rule 114 (constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON .)
    LBRACKET        reduce using rule 114 (constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON .)
    PROMPT          reduce using rule 114 (constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON .)
    NOT             reduce using rule 114 (constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON .)
    LPAREN          reduce using rule 114 (constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON .)
    NUMBER          reduce using rule 114 (constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON .)
    FLOAT           reduce using rule 114 (constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON .)
    STRING          reduce using rule 114 (constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON .)
    TRUE            reduce using rule 114 (constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON .)
    FALSE           reduce using rule 114 (constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON .)
    PLUSPLUS        reduce using rule 114 (constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON .)
    MINUSMINUS      reduce using rule 114 (constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON .)
    CONSOLE         reduce using rule 114 (constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON .)
    VAR             reduce using rule 114 (constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON .)
    $end            reduce using rule 114 (constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON .)
    RBRACE          reduce using rule 114 (constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON .)
    ELSE            reduce using rule 114 (constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON .)
    CASE            reduce using rule 114 (constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON .)
    DEFAULT         reduce using rule 114 (constAssignment -> CONST IDENTIFIER EQUAL expression SEMICOLON .)


state 236

    (113) constAssignment -> CONST IDENTIFIER COLON type EQUAL . expression SEMICOLON
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 264

state 237

    (51) type -> type LBRACKET . RBRACKET

    RBRACKET        shift and go to state 265


state 238

    (132) async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters . RPAREN COLON type LBRACE body_function RBRACE

    RPAREN          shift and go to state 266


state 239

    (131) enum_members -> IDENTIFIER COMMA . enum_members
    (130) enum_members -> . IDENTIFIER
    (131) enum_members -> . IDENTIFIER COMMA enum_members

    IDENTIFIER      shift and go to state 200

    enum_members                   shift and go to state 267

state 240

    (129) enum_definition -> ENUM IDENTIFIER LBRACE enum_members RBRACE .

    LET             reduce using rule 129 (enum_definition -> ENUM IDENTIFIER LBRACE enum_members RBRACE .)
    FUNCTION        reduce using rule 129 (enum_definition -> ENUM IDENTIFIER LBRACE enum_members RBRACE .)
    CONST           reduce using rule 129 (enum_definition -> ENUM IDENTIFIER LBRACE enum_members RBRACE .)
    ASYNC           reduce using rule 129 (enum_definition -> ENUM IDENTIFIER LBRACE enum_members RBRACE .)
    ENUM            reduce using rule 129 (enum_definition -> ENUM IDENTIFIER LBRACE enum_members RBRACE .)
    IF              reduce using rule 129 (enum_definition -> ENUM IDENTIFIER LBRACE enum_members RBRACE .)
    SWITCH          reduce using rule 129 (enum_definition -> ENUM IDENTIFIER LBRACE enum_members RBRACE .)
    WHILE           reduce using rule 129 (enum_definition -> ENUM IDENTIFIER LBRACE enum_members RBRACE .)
    FOR             reduce using rule 129 (enum_definition -> ENUM IDENTIFIER LBRACE enum_members RBRACE .)
    CLASS           reduce using rule 129 (enum_definition -> ENUM IDENTIFIER LBRACE enum_members RBRACE .)
    LBRACE          reduce using rule 129 (enum_definition -> ENUM IDENTIFIER LBRACE enum_members RBRACE .)
    RETURN          reduce using rule 129 (enum_definition -> ENUM IDENTIFIER LBRACE enum_members RBRACE .)
    INTERFACE       reduce using rule 129 (enum_definition -> ENUM IDENTIFIER LBRACE enum_members RBRACE .)
    IDENTIFIER      reduce using rule 129 (enum_definition -> ENUM IDENTIFIER LBRACE enum_members RBRACE .)
    LBRACKET        reduce using rule 129 (enum_definition -> ENUM IDENTIFIER LBRACE enum_members RBRACE .)
    PROMPT          reduce using rule 129 (enum_definition -> ENUM IDENTIFIER LBRACE enum_members RBRACE .)
    NOT             reduce using rule 129 (enum_definition -> ENUM IDENTIFIER LBRACE enum_members RBRACE .)
    LPAREN          reduce using rule 129 (enum_definition -> ENUM IDENTIFIER LBRACE enum_members RBRACE .)
    NUMBER          reduce using rule 129 (enum_definition -> ENUM IDENTIFIER LBRACE enum_members RBRACE .)
    FLOAT           reduce using rule 129 (enum_definition -> ENUM IDENTIFIER LBRACE enum_members RBRACE .)
    STRING          reduce using rule 129 (enum_definition -> ENUM IDENTIFIER LBRACE enum_members RBRACE .)
    TRUE            reduce using rule 129 (enum_definition -> ENUM IDENTIFIER LBRACE enum_members RBRACE .)
    FALSE           reduce using rule 129 (enum_definition -> ENUM IDENTIFIER LBRACE enum_members RBRACE .)
    PLUSPLUS        reduce using rule 129 (enum_definition -> ENUM IDENTIFIER LBRACE enum_members RBRACE .)
    MINUSMINUS      reduce using rule 129 (enum_definition -> ENUM IDENTIFIER LBRACE enum_members RBRACE .)
    CONSOLE         reduce using rule 129 (enum_definition -> ENUM IDENTIFIER LBRACE enum_members RBRACE .)
    VAR             reduce using rule 129 (enum_definition -> ENUM IDENTIFIER LBRACE enum_members RBRACE .)
    $end            reduce using rule 129 (enum_definition -> ENUM IDENTIFIER LBRACE enum_members RBRACE .)


state 241

    (90) controlEstructure -> IF LPAREN expression RPAREN statement .
    (91) controlEstructure -> IF LPAREN expression RPAREN statement . ELSE statement
    (92) controlEstructure -> IF LPAREN expression RPAREN statement . ELSE IF LPAREN expression RPAREN statement
    (93) controlEstructure -> IF LPAREN expression RPAREN statement . ELSE IF LPAREN expression RPAREN statement ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    LET             reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    FUNCTION        reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    CONST           reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    ASYNC           reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    ENUM            reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    IF              reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    SWITCH          reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    FOR             reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    CLASS           reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    INTERFACE       reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    IDENTIFIER      reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    LBRACKET        reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    PROMPT          reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    NOT             reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    NUMBER          reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    FLOAT           reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    STRING          reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    TRUE            reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    FALSE           reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    PLUSPLUS        reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    MINUSMINUS      reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    CONSOLE         reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    VAR             reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    $end            reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    CASE            reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    DEFAULT         reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 268

  ! ELSE            [ reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .) ]


state 242

    (123) controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE . case_block RBRACE
    (124) case_block -> . case_block case
    (125) case_block -> . case
    (126) case_block -> . empty
    (127) case -> . CASE expression COLON instruction_list
    (128) case -> . DEFAULT COLON instruction_list
    (112) empty -> .

  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
    CASE            shift and go to state 272
    DEFAULT         shift and go to state 273
    RBRACE          reduce using rule 112 (empty -> .)

  ! CASE            [ reduce using rule 112 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 112 (empty -> .) ]

    case_block                     shift and go to state 269
    case                           shift and go to state 270
    empty                          shift and go to state 271

state 243

    (133) controlEstructure -> WHILE LPAREN expression RPAREN statement .

    LET             reduce using rule 133 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    FUNCTION        reduce using rule 133 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    CONST           reduce using rule 133 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    ASYNC           reduce using rule 133 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    ENUM            reduce using rule 133 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 133 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    SWITCH          reduce using rule 133 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 133 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    FOR             reduce using rule 133 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    CLASS           reduce using rule 133 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 133 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 133 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    INTERFACE       reduce using rule 133 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    IDENTIFIER      reduce using rule 133 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    LBRACKET        reduce using rule 133 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    PROMPT          reduce using rule 133 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    NOT             reduce using rule 133 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 133 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    NUMBER          reduce using rule 133 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    FLOAT           reduce using rule 133 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    STRING          reduce using rule 133 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    TRUE            reduce using rule 133 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    FALSE           reduce using rule 133 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    PLUSPLUS        reduce using rule 133 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    MINUSMINUS      reduce using rule 133 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    CONSOLE         reduce using rule 133 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    VAR             reduce using rule 133 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    $end            reduce using rule 133 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 133 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 133 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    CASE            reduce using rule 133 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    DEFAULT         reduce using rule 133 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)


state 244

    (26) forEstructure -> FOR LPAREN for_init SEMICOLON expression . SEMICOLON for_update RPAREN statement
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

    SEMICOLON       shift and go to state 274
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72


state 245

    (27) forEstructure -> FOR LPAREN CONST IDENTIFIER OF . IDENTIFIER RPAREN statement

    IDENTIFIER      shift and go to state 275


state 246

    (28) for_init -> LET IDENTIFIER EQUAL . expression
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 276

state 247

    (29) for_init -> LET IDENTIFIER COLON . type EQUAL expression
    (44) type -> . LBRACKET type COMMA type RBRACKET
    (46) type -> . NUMBER_TYPE
    (47) type -> . STRING_TYPE
    (48) type -> . BOOLEAN_TYPE
    (49) type -> . IDENTIFIER
    (50) type -> . VOID
    (51) type -> . type LBRACKET RBRACKET

    LBRACKET        shift and go to state 180
    NUMBER_TYPE     shift and go to state 181
    STRING_TYPE     shift and go to state 182
    BOOLEAN_TYPE    shift and go to state 183
    IDENTIFIER      shift and go to state 178
    VOID            shift and go to state 184

    type                           shift and go to state 277

state 248

    (115) class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE .

    LET             reduce using rule 115 (class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE .)
    FUNCTION        reduce using rule 115 (class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE .)
    CONST           reduce using rule 115 (class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE .)
    ASYNC           reduce using rule 115 (class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE .)
    ENUM            reduce using rule 115 (class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE .)
    IF              reduce using rule 115 (class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE .)
    SWITCH          reduce using rule 115 (class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE .)
    WHILE           reduce using rule 115 (class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE .)
    FOR             reduce using rule 115 (class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE .)
    CLASS           reduce using rule 115 (class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE .)
    LBRACE          reduce using rule 115 (class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE .)
    RETURN          reduce using rule 115 (class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE .)
    INTERFACE       reduce using rule 115 (class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE .)
    IDENTIFIER      reduce using rule 115 (class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE .)
    LBRACKET        reduce using rule 115 (class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE .)
    PROMPT          reduce using rule 115 (class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE .)
    NOT             reduce using rule 115 (class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE .)
    LPAREN          reduce using rule 115 (class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE .)
    NUMBER          reduce using rule 115 (class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE .)
    FLOAT           reduce using rule 115 (class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE .)
    STRING          reduce using rule 115 (class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE .)
    TRUE            reduce using rule 115 (class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE .)
    FALSE           reduce using rule 115 (class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE .)
    PLUSPLUS        reduce using rule 115 (class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE .)
    MINUSMINUS      reduce using rule 115 (class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE .)
    CONSOLE         reduce using rule 115 (class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE .)
    VAR             reduce using rule 115 (class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE .)
    $end            reduce using rule 115 (class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE .)
    RBRACE          reduce using rule 115 (class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE .)
    ELSE            reduce using rule 115 (class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE .)
    CASE            reduce using rule 115 (class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE .)
    DEFAULT         reduce using rule 115 (class_definition -> CLASS IDENTIFIER LBRACE class_body RBRACE .)


state 249

    (116) class_body -> class_body class_element .

    RBRACE          reduce using rule 116 (class_body -> class_body class_element .)
    FUNCTION        reduce using rule 116 (class_body -> class_body class_element .)
    LET             reduce using rule 116 (class_body -> class_body class_element .)
    VAR             reduce using rule 116 (class_body -> class_body class_element .)
    CONST           reduce using rule 116 (class_body -> class_body class_element .)


state 250

    (19) letAssignment -> LET IDENTIFIER . COLON type EQUAL expression SEMICOLON
    (20) letAssignment -> LET IDENTIFIER . EQUAL expression SEMICOLON

    COLON           shift and go to state 278
    EQUAL           shift and go to state 140


state 251

    (113) constAssignment -> CONST IDENTIFIER . COLON type EQUAL expression SEMICOLON
    (114) constAssignment -> CONST IDENTIFIER . EQUAL expression SEMICOLON

    COLON           shift and go to state 159
    EQUAL           shift and go to state 279


state 252

    (141) interface_property -> IDENTIFIER COLON . type SEMICOLON
    (44) type -> . LBRACKET type COMMA type RBRACKET
    (46) type -> . NUMBER_TYPE
    (47) type -> . STRING_TYPE
    (48) type -> . BOOLEAN_TYPE
    (49) type -> . IDENTIFIER
    (50) type -> . VOID
    (51) type -> . type LBRACKET RBRACKET

    LBRACKET        shift and go to state 180
    NUMBER_TYPE     shift and go to state 181
    STRING_TYPE     shift and go to state 182
    BOOLEAN_TYPE    shift and go to state 183
    IDENTIFIER      shift and go to state 178
    VOID            shift and go to state 184

    type                           shift and go to state 280

state 253

    (137) interface -> INTERFACE IDENTIFIER LBRACE interface_body RBRACE .

    LET             reduce using rule 137 (interface -> INTERFACE IDENTIFIER LBRACE interface_body RBRACE .)
    FUNCTION        reduce using rule 137 (interface -> INTERFACE IDENTIFIER LBRACE interface_body RBRACE .)
    CONST           reduce using rule 137 (interface -> INTERFACE IDENTIFIER LBRACE interface_body RBRACE .)
    ASYNC           reduce using rule 137 (interface -> INTERFACE IDENTIFIER LBRACE interface_body RBRACE .)
    ENUM            reduce using rule 137 (interface -> INTERFACE IDENTIFIER LBRACE interface_body RBRACE .)
    IF              reduce using rule 137 (interface -> INTERFACE IDENTIFIER LBRACE interface_body RBRACE .)
    SWITCH          reduce using rule 137 (interface -> INTERFACE IDENTIFIER LBRACE interface_body RBRACE .)
    WHILE           reduce using rule 137 (interface -> INTERFACE IDENTIFIER LBRACE interface_body RBRACE .)
    FOR             reduce using rule 137 (interface -> INTERFACE IDENTIFIER LBRACE interface_body RBRACE .)
    CLASS           reduce using rule 137 (interface -> INTERFACE IDENTIFIER LBRACE interface_body RBRACE .)
    LBRACE          reduce using rule 137 (interface -> INTERFACE IDENTIFIER LBRACE interface_body RBRACE .)
    RETURN          reduce using rule 137 (interface -> INTERFACE IDENTIFIER LBRACE interface_body RBRACE .)
    INTERFACE       reduce using rule 137 (interface -> INTERFACE IDENTIFIER LBRACE interface_body RBRACE .)
    IDENTIFIER      reduce using rule 137 (interface -> INTERFACE IDENTIFIER LBRACE interface_body RBRACE .)
    LBRACKET        reduce using rule 137 (interface -> INTERFACE IDENTIFIER LBRACE interface_body RBRACE .)
    PROMPT          reduce using rule 137 (interface -> INTERFACE IDENTIFIER LBRACE interface_body RBRACE .)
    NOT             reduce using rule 137 (interface -> INTERFACE IDENTIFIER LBRACE interface_body RBRACE .)
    LPAREN          reduce using rule 137 (interface -> INTERFACE IDENTIFIER LBRACE interface_body RBRACE .)
    NUMBER          reduce using rule 137 (interface -> INTERFACE IDENTIFIER LBRACE interface_body RBRACE .)
    FLOAT           reduce using rule 137 (interface -> INTERFACE IDENTIFIER LBRACE interface_body RBRACE .)
    STRING          reduce using rule 137 (interface -> INTERFACE IDENTIFIER LBRACE interface_body RBRACE .)
    TRUE            reduce using rule 137 (interface -> INTERFACE IDENTIFIER LBRACE interface_body RBRACE .)
    FALSE           reduce using rule 137 (interface -> INTERFACE IDENTIFIER LBRACE interface_body RBRACE .)
    PLUSPLUS        reduce using rule 137 (interface -> INTERFACE IDENTIFIER LBRACE interface_body RBRACE .)
    MINUSMINUS      reduce using rule 137 (interface -> INTERFACE IDENTIFIER LBRACE interface_body RBRACE .)
    CONSOLE         reduce using rule 137 (interface -> INTERFACE IDENTIFIER LBRACE interface_body RBRACE .)
    VAR             reduce using rule 137 (interface -> INTERFACE IDENTIFIER LBRACE interface_body RBRACE .)
    $end            reduce using rule 137 (interface -> INTERFACE IDENTIFIER LBRACE interface_body RBRACE .)


state 254

    (138) interface_body -> interface_body interface_property .

    RBRACE          reduce using rule 138 (interface_body -> interface_body interface_property .)
    IDENTIFIER      reduce using rule 138 (interface_body -> interface_body interface_property .)


state 255

    (89) consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt . RPAREN SEMICOLON

    RPAREN          shift and go to state 281


state 256

    (134) varAssignment -> VAR IDENTIFIER COLON type EQUAL . expression SEMICOLON
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 282

state 257

    (135) varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .

    LET             reduce using rule 135 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    FUNCTION        reduce using rule 135 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    CONST           reduce using rule 135 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    ASYNC           reduce using rule 135 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    ENUM            reduce using rule 135 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    IF              reduce using rule 135 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    SWITCH          reduce using rule 135 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    WHILE           reduce using rule 135 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    FOR             reduce using rule 135 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    CLASS           reduce using rule 135 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    LBRACE          reduce using rule 135 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    RETURN          reduce using rule 135 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    INTERFACE       reduce using rule 135 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    IDENTIFIER      reduce using rule 135 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    LBRACKET        reduce using rule 135 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    PROMPT          reduce using rule 135 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    NOT             reduce using rule 135 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    LPAREN          reduce using rule 135 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    NUMBER          reduce using rule 135 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    FLOAT           reduce using rule 135 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    STRING          reduce using rule 135 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    TRUE            reduce using rule 135 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    FALSE           reduce using rule 135 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    PLUSPLUS        reduce using rule 135 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    MINUSMINUS      reduce using rule 135 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    CONSOLE         reduce using rule 135 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    VAR             reduce using rule 135 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    $end            reduce using rule 135 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    RBRACE          reduce using rule 135 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    ELSE            reduce using rule 135 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    CASE            reduce using rule 135 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    DEFAULT         reduce using rule 135 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)


state 258

    (19) letAssignment -> LET IDENTIFIER COLON type EQUAL expression . SEMICOLON
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

    SEMICOLON       shift and go to state 283
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72


state 259

    (21) declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET . EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (51) type -> type LBRACKET RBRACKET .

  ! shift/reduce conflict for EQUAL resolved as shift
    EQUAL           shift and go to state 284
    LBRACKET        reduce using rule 51 (type -> type LBRACKET RBRACKET .)

  ! EQUAL           [ reduce using rule 51 (type -> type LBRACKET RBRACKET .) ]


state 260

    (44) type -> LBRACKET type COMMA . type RBRACKET
    (44) type -> . LBRACKET type COMMA type RBRACKET
    (46) type -> . NUMBER_TYPE
    (47) type -> . STRING_TYPE
    (48) type -> . BOOLEAN_TYPE
    (49) type -> . IDENTIFIER
    (50) type -> . VOID
    (51) type -> . type LBRACKET RBRACKET

    LBRACKET        shift and go to state 180
    NUMBER_TYPE     shift and go to state 181
    STRING_TYPE     shift and go to state 182
    BOOLEAN_TYPE    shift and go to state 183
    IDENTIFIER      shift and go to state 178
    VOID            shift and go to state 184

    type                           shift and go to state 285

state 261

    (39) parameters -> IDENTIFIER COLON type .
    (40) parameters -> IDENTIFIER COLON type . COMMA parameters
    (51) type -> type . LBRACKET RBRACKET

    RPAREN          reduce using rule 39 (parameters -> IDENTIFIER COLON type .)
    COMMA           shift and go to state 286
    LBRACKET        shift and go to state 237


state 262

    (38) function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON . type LBRACE body_function RBRACE
    (44) type -> . LBRACKET type COMMA type RBRACKET
    (46) type -> . NUMBER_TYPE
    (47) type -> . STRING_TYPE
    (48) type -> . BOOLEAN_TYPE
    (49) type -> . IDENTIFIER
    (50) type -> . VOID
    (51) type -> . type LBRACKET RBRACKET

    LBRACKET        shift and go to state 180
    NUMBER_TYPE     shift and go to state 181
    STRING_TYPE     shift and go to state 182
    BOOLEAN_TYPE    shift and go to state 183
    IDENTIFIER      shift and go to state 178
    VOID            shift and go to state 184

    type                           shift and go to state 287

state 263

    (136) arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN . ARROW LBRACE body_function RBRACE SEMICOLON

    ARROW           shift and go to state 288


state 264

    (113) constAssignment -> CONST IDENTIFIER COLON type EQUAL expression . SEMICOLON
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

    SEMICOLON       shift and go to state 289
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72


state 265

    (51) type -> type LBRACKET RBRACKET .

    EQUAL           reduce using rule 51 (type -> type LBRACKET RBRACKET .)
    LBRACKET        reduce using rule 51 (type -> type LBRACKET RBRACKET .)
    COMMA           reduce using rule 51 (type -> type LBRACKET RBRACKET .)
    RPAREN          reduce using rule 51 (type -> type LBRACKET RBRACKET .)
    SEMICOLON       reduce using rule 51 (type -> type LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 51 (type -> type LBRACKET RBRACKET .)
    LBRACE          reduce using rule 51 (type -> type LBRACKET RBRACKET .)


state 266

    (132) async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN . COLON type LBRACE body_function RBRACE

    COLON           shift and go to state 290


state 267

    (131) enum_members -> IDENTIFIER COMMA enum_members .

    RBRACE          reduce using rule 131 (enum_members -> IDENTIFIER COMMA enum_members .)


state 268

    (91) controlEstructure -> IF LPAREN expression RPAREN statement ELSE . statement
    (92) controlEstructure -> IF LPAREN expression RPAREN statement ELSE . IF LPAREN expression RPAREN statement
    (93) controlEstructure -> IF LPAREN expression RPAREN statement ELSE . IF LPAREN expression RPAREN statement ELSE statement
    (94) statement -> . LBRACE instruction_list RBRACE
    (95) statement -> . letAssignment
    (96) statement -> . varAssignment
    (97) statement -> . constAssignment
    (98) statement -> . declaracion
    (99) statement -> . function
    (100) statement -> . arrow_function
    (101) statement -> . async_function
    (102) statement -> . consolelog
    (103) statement -> . expression SEMICOLON
    (104) statement -> . controlEstructure
    (105) statement -> . RETURN expression SEMICOLON
    (106) statement -> . forEstructure
    (107) statement -> . RETURN SEMICOLON
    (108) statement -> . class_definition
    (19) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (20) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (134) varAssignment -> . VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
    (135) varAssignment -> . VAR IDENTIFIER EQUAL expression SEMICOLON
    (113) constAssignment -> . CONST IDENTIFIER COLON type EQUAL expression SEMICOLON
    (114) constAssignment -> . CONST IDENTIFIER EQUAL expression SEMICOLON
    (21) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (38) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (136) arrow_function -> . CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (132) async_function -> . ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (89) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE
    (90) controlEstructure -> . IF LPAREN expression RPAREN statement
    (91) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (92) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (93) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (123) controlEstructure -> . SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE
    (133) controlEstructure -> . WHILE LPAREN expression RPAREN statement
    (26) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (27) forEstructure -> . FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement
    (115) class_definition -> . CLASS IDENTIFIER LBRACE class_body RBRACE

    IF              shift and go to state 291
    LBRACE          shift and go to state 23
    RETURN          shift and go to state 33
    LET             shift and go to state 18
    VAR             shift and go to state 45
    CONST           shift and go to state 98
    FUNCTION        shift and go to state 21
    ASYNC           shift and go to state 25
    CONSOLE         shift and go to state 44
    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    SWITCH          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    CLASS           shift and go to state 31

    expression                     shift and go to state 93
    statement                      shift and go to state 292
    letAssignment                  shift and go to state 86
    varAssignment                  shift and go to state 32
    constAssignment                shift and go to state 87
    declaracion                    shift and go to state 88
    function                       shift and go to state 89
    arrow_function                 shift and go to state 90
    async_function                 shift and go to state 91
    consolelog                     shift and go to state 92
    controlEstructure              shift and go to state 94
    forEstructure                  shift and go to state 95
    class_definition               shift and go to state 96

state 269

    (123) controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block . RBRACE
    (124) case_block -> case_block . case
    (127) case -> . CASE expression COLON instruction_list
    (128) case -> . DEFAULT COLON instruction_list

    RBRACE          shift and go to state 293
    CASE            shift and go to state 272
    DEFAULT         shift and go to state 273

    case                           shift and go to state 294

state 270

    (125) case_block -> case .

    RBRACE          reduce using rule 125 (case_block -> case .)
    CASE            reduce using rule 125 (case_block -> case .)
    DEFAULT         reduce using rule 125 (case_block -> case .)


state 271

    (126) case_block -> empty .

    RBRACE          reduce using rule 126 (case_block -> empty .)
    CASE            reduce using rule 126 (case_block -> empty .)
    DEFAULT         reduce using rule 126 (case_block -> empty .)


state 272

    (127) case -> CASE . expression COLON instruction_list
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 295

state 273

    (128) case -> DEFAULT . COLON instruction_list

    COLON           shift and go to state 296


state 274

    (26) forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON . for_update RPAREN statement
    (32) for_update -> . expression
    (33) for_update -> . expression PLUSPLUS
    (34) for_update -> . expression MINUSMINUS
    (35) for_update -> . PLUSPLUS expression
    (36) for_update -> . MINUSMINUS expression
    (37) for_update -> . empty
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE
    (112) empty -> .

    PLUSPLUS        shift and go to state 299
    MINUSMINUS      shift and go to state 300
    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    LBRACE          shift and go to state 78
    RPAREN          reduce using rule 112 (empty -> .)

    expression                     shift and go to state 297
    for_update                     shift and go to state 298
    empty                          shift and go to state 301

state 275

    (27) forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER . RPAREN statement

    RPAREN          shift and go to state 302


state 276

    (28) for_init -> LET IDENTIFIER EQUAL expression .
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

    SEMICOLON       reduce using rule 28 (for_init -> LET IDENTIFIER EQUAL expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72


state 277

    (29) for_init -> LET IDENTIFIER COLON type . EQUAL expression
    (51) type -> type . LBRACKET RBRACKET

    EQUAL           shift and go to state 303
    LBRACKET        shift and go to state 237


state 278

    (19) letAssignment -> LET IDENTIFIER COLON . type EQUAL expression SEMICOLON
    (44) type -> . LBRACKET type COMMA type RBRACKET
    (46) type -> . NUMBER_TYPE
    (47) type -> . STRING_TYPE
    (48) type -> . BOOLEAN_TYPE
    (49) type -> . IDENTIFIER
    (50) type -> . VOID
    (51) type -> . type LBRACKET RBRACKET

    LBRACKET        shift and go to state 180
    NUMBER_TYPE     shift and go to state 181
    STRING_TYPE     shift and go to state 182
    BOOLEAN_TYPE    shift and go to state 183
    IDENTIFIER      shift and go to state 178
    VOID            shift and go to state 184

    type                           shift and go to state 304

state 279

    (114) constAssignment -> CONST IDENTIFIER EQUAL . expression SEMICOLON
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 197

state 280

    (141) interface_property -> IDENTIFIER COLON type . SEMICOLON
    (51) type -> type . LBRACKET RBRACKET

    SEMICOLON       shift and go to state 305
    LBRACKET        shift and go to state 237


state 281

    (89) consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 306


state 282

    (134) varAssignment -> VAR IDENTIFIER COLON type EQUAL expression . SEMICOLON
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

    SEMICOLON       shift and go to state 307
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72


state 283

    (19) letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .

    LET             reduce using rule 19 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    FUNCTION        reduce using rule 19 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    CONST           reduce using rule 19 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    ASYNC           reduce using rule 19 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    ENUM            reduce using rule 19 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    IF              reduce using rule 19 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    SWITCH          reduce using rule 19 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    WHILE           reduce using rule 19 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    FOR             reduce using rule 19 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    CLASS           reduce using rule 19 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    LBRACE          reduce using rule 19 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    RETURN          reduce using rule 19 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    INTERFACE       reduce using rule 19 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    IDENTIFIER      reduce using rule 19 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    LBRACKET        reduce using rule 19 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    PROMPT          reduce using rule 19 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    NOT             reduce using rule 19 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    LPAREN          reduce using rule 19 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    NUMBER          reduce using rule 19 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    FLOAT           reduce using rule 19 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    STRING          reduce using rule 19 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    TRUE            reduce using rule 19 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    FALSE           reduce using rule 19 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    PLUSPLUS        reduce using rule 19 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    MINUSMINUS      reduce using rule 19 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    CONSOLE         reduce using rule 19 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    VAR             reduce using rule 19 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    $end            reduce using rule 19 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    RBRACE          reduce using rule 19 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    ELSE            reduce using rule 19 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    CASE            reduce using rule 19 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    DEFAULT         reduce using rule 19 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)


state 284

    (21) declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL . LBRACKET lista_expresiones_opt RBRACKET SEMICOLON

    LBRACKET        shift and go to state 308


state 285

    (44) type -> LBRACKET type COMMA type . RBRACKET
    (51) type -> type . LBRACKET RBRACKET

    RBRACKET        shift and go to state 309
    LBRACKET        shift and go to state 237


state 286

    (40) parameters -> IDENTIFIER COLON type COMMA . parameters
    (39) parameters -> . IDENTIFIER COLON type
    (40) parameters -> . IDENTIFIER COLON type COMMA parameters
    (41) parameters -> . empty
    (112) empty -> .

    IDENTIFIER      shift and go to state 190
    RPAREN          reduce using rule 112 (empty -> .)

    parameters                     shift and go to state 310
    empty                          shift and go to state 192

state 287

    (38) function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type . LBRACE body_function RBRACE
    (51) type -> type . LBRACKET RBRACKET

    LBRACE          shift and go to state 311
    LBRACKET        shift and go to state 237


state 288

    (136) arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW . LBRACE body_function RBRACE SEMICOLON

    LBRACE          shift and go to state 312


state 289

    (113) constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON .

    LET             reduce using rule 113 (constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    FUNCTION        reduce using rule 113 (constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    CONST           reduce using rule 113 (constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    ASYNC           reduce using rule 113 (constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    ENUM            reduce using rule 113 (constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    IF              reduce using rule 113 (constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    SWITCH          reduce using rule 113 (constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    WHILE           reduce using rule 113 (constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    FOR             reduce using rule 113 (constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    CLASS           reduce using rule 113 (constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    LBRACE          reduce using rule 113 (constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    RETURN          reduce using rule 113 (constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    INTERFACE       reduce using rule 113 (constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    IDENTIFIER      reduce using rule 113 (constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    LBRACKET        reduce using rule 113 (constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    PROMPT          reduce using rule 113 (constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    NOT             reduce using rule 113 (constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    LPAREN          reduce using rule 113 (constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    NUMBER          reduce using rule 113 (constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    FLOAT           reduce using rule 113 (constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    STRING          reduce using rule 113 (constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    TRUE            reduce using rule 113 (constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    FALSE           reduce using rule 113 (constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    PLUSPLUS        reduce using rule 113 (constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    MINUSMINUS      reduce using rule 113 (constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    CONSOLE         reduce using rule 113 (constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    VAR             reduce using rule 113 (constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    $end            reduce using rule 113 (constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    RBRACE          reduce using rule 113 (constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    ELSE            reduce using rule 113 (constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    CASE            reduce using rule 113 (constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    DEFAULT         reduce using rule 113 (constAssignment -> CONST IDENTIFIER COLON type EQUAL expression SEMICOLON .)


state 290

    (132) async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON . type LBRACE body_function RBRACE
    (44) type -> . LBRACKET type COMMA type RBRACKET
    (46) type -> . NUMBER_TYPE
    (47) type -> . STRING_TYPE
    (48) type -> . BOOLEAN_TYPE
    (49) type -> . IDENTIFIER
    (50) type -> . VOID
    (51) type -> . type LBRACKET RBRACKET

    LBRACKET        shift and go to state 180
    NUMBER_TYPE     shift and go to state 181
    STRING_TYPE     shift and go to state 182
    BOOLEAN_TYPE    shift and go to state 183
    IDENTIFIER      shift and go to state 178
    VOID            shift and go to state 184

    type                           shift and go to state 313

state 291

    (92) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF . LPAREN expression RPAREN statement
    (93) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF . LPAREN expression RPAREN statement ELSE statement
    (90) controlEstructure -> IF . LPAREN expression RPAREN statement
    (91) controlEstructure -> IF . LPAREN expression RPAREN statement ELSE statement
    (92) controlEstructure -> IF . LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (93) controlEstructure -> IF . LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement

    LPAREN          shift and go to state 314


state 292

    (91) controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .

    LET             reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    FUNCTION        reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    CONST           reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    ASYNC           reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    ENUM            reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    IF              reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    SWITCH          reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    WHILE           reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    FOR             reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    CLASS           reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    LBRACE          reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    RETURN          reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    INTERFACE       reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    IDENTIFIER      reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    LBRACKET        reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    PROMPT          reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    NOT             reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    LPAREN          reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    NUMBER          reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    FLOAT           reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    STRING          reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    TRUE            reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    FALSE           reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    PLUSPLUS        reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    MINUSMINUS      reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    CONSOLE         reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    VAR             reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    $end            reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    RBRACE          reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSE            reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    CASE            reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    DEFAULT         reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)


state 293

    (123) controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE .

    LET             reduce using rule 123 (controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE .)
    FUNCTION        reduce using rule 123 (controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE .)
    CONST           reduce using rule 123 (controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE .)
    ASYNC           reduce using rule 123 (controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE .)
    ENUM            reduce using rule 123 (controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE .)
    IF              reduce using rule 123 (controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE .)
    SWITCH          reduce using rule 123 (controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE .)
    WHILE           reduce using rule 123 (controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE .)
    FOR             reduce using rule 123 (controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE .)
    CLASS           reduce using rule 123 (controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE .)
    LBRACE          reduce using rule 123 (controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE .)
    RETURN          reduce using rule 123 (controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE .)
    INTERFACE       reduce using rule 123 (controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE .)
    IDENTIFIER      reduce using rule 123 (controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE .)
    LBRACKET        reduce using rule 123 (controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE .)
    PROMPT          reduce using rule 123 (controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE .)
    NOT             reduce using rule 123 (controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE .)
    LPAREN          reduce using rule 123 (controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE .)
    NUMBER          reduce using rule 123 (controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE .)
    FLOAT           reduce using rule 123 (controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE .)
    STRING          reduce using rule 123 (controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE .)
    TRUE            reduce using rule 123 (controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE .)
    FALSE           reduce using rule 123 (controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE .)
    PLUSPLUS        reduce using rule 123 (controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE .)
    MINUSMINUS      reduce using rule 123 (controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE .)
    CONSOLE         reduce using rule 123 (controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE .)
    VAR             reduce using rule 123 (controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE .)
    $end            reduce using rule 123 (controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE .)
    RBRACE          reduce using rule 123 (controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE .)
    ELSE            reduce using rule 123 (controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE .)
    CASE            reduce using rule 123 (controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE .)
    DEFAULT         reduce using rule 123 (controlEstructure -> SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE .)


state 294

    (124) case_block -> case_block case .

    RBRACE          reduce using rule 124 (case_block -> case_block case .)
    CASE            reduce using rule 124 (case_block -> case_block case .)
    DEFAULT         reduce using rule 124 (case_block -> case_block case .)


state 295

    (127) case -> CASE expression . COLON instruction_list
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

    COLON           shift and go to state 315
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72


state 296

    (128) case -> DEFAULT COLON . instruction_list
    (109) instruction_list -> . instruction_list statement
    (110) instruction_list -> . statement
    (111) instruction_list -> . empty
    (94) statement -> . LBRACE instruction_list RBRACE
    (95) statement -> . letAssignment
    (96) statement -> . varAssignment
    (97) statement -> . constAssignment
    (98) statement -> . declaracion
    (99) statement -> . function
    (100) statement -> . arrow_function
    (101) statement -> . async_function
    (102) statement -> . consolelog
    (103) statement -> . expression SEMICOLON
    (104) statement -> . controlEstructure
    (105) statement -> . RETURN expression SEMICOLON
    (106) statement -> . forEstructure
    (107) statement -> . RETURN SEMICOLON
    (108) statement -> . class_definition
    (112) empty -> .
    (19) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (20) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (134) varAssignment -> . VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
    (135) varAssignment -> . VAR IDENTIFIER EQUAL expression SEMICOLON
    (113) constAssignment -> . CONST IDENTIFIER COLON type EQUAL expression SEMICOLON
    (114) constAssignment -> . CONST IDENTIFIER EQUAL expression SEMICOLON
    (21) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (38) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (136) arrow_function -> . CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (132) async_function -> . ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (89) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE
    (90) controlEstructure -> . IF LPAREN expression RPAREN statement
    (91) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (92) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (93) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (123) controlEstructure -> . SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE
    (133) controlEstructure -> . WHILE LPAREN expression RPAREN statement
    (26) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (27) forEstructure -> . FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement
    (115) class_definition -> . CLASS IDENTIFIER LBRACE class_body RBRACE

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for CONST resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for ASYNC resolved as shift
  ! shift/reduce conflict for CONSOLE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PROMPT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
    LBRACE          shift and go to state 23
    RETURN          shift and go to state 33
    RBRACE          reduce using rule 112 (empty -> .)
    CASE            reduce using rule 112 (empty -> .)
    DEFAULT         reduce using rule 112 (empty -> .)
    LET             shift and go to state 18
    VAR             shift and go to state 45
    CONST           shift and go to state 98
    FUNCTION        shift and go to state 21
    ASYNC           shift and go to state 25
    CONSOLE         shift and go to state 44
    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    CLASS           shift and go to state 31

  ! LBRACE          [ reduce using rule 112 (empty -> .) ]
  ! RETURN          [ reduce using rule 112 (empty -> .) ]
  ! LET             [ reduce using rule 112 (empty -> .) ]
  ! VAR             [ reduce using rule 112 (empty -> .) ]
  ! CONST           [ reduce using rule 112 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 112 (empty -> .) ]
  ! ASYNC           [ reduce using rule 112 (empty -> .) ]
  ! CONSOLE         [ reduce using rule 112 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 112 (empty -> .) ]
  ! PROMPT          [ reduce using rule 112 (empty -> .) ]
  ! NOT             [ reduce using rule 112 (empty -> .) ]
  ! LPAREN          [ reduce using rule 112 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 112 (empty -> .) ]
  ! NUMBER          [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! TRUE            [ reduce using rule 112 (empty -> .) ]
  ! FALSE           [ reduce using rule 112 (empty -> .) ]
  ! PLUSPLUS        [ reduce using rule 112 (empty -> .) ]
  ! MINUSMINUS      [ reduce using rule 112 (empty -> .) ]
  ! IF              [ reduce using rule 112 (empty -> .) ]
  ! SWITCH          [ reduce using rule 112 (empty -> .) ]
  ! WHILE           [ reduce using rule 112 (empty -> .) ]
  ! FOR             [ reduce using rule 112 (empty -> .) ]
  ! CLASS           [ reduce using rule 112 (empty -> .) ]

    instruction_list               shift and go to state 316
    statement                      shift and go to state 83
    empty                          shift and go to state 317
    letAssignment                  shift and go to state 86
    varAssignment                  shift and go to state 32
    constAssignment                shift and go to state 87
    declaracion                    shift and go to state 88
    function                       shift and go to state 89
    arrow_function                 shift and go to state 90
    async_function                 shift and go to state 91
    consolelog                     shift and go to state 92
    expression                     shift and go to state 93
    controlEstructure              shift and go to state 94
    forEstructure                  shift and go to state 95
    class_definition               shift and go to state 96

state 297

    (32) for_update -> expression .
    (33) for_update -> expression . PLUSPLUS
    (34) for_update -> expression . MINUSMINUS
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

    RPAREN          reduce using rule 32 (for_update -> expression .)
    PLUSPLUS        shift and go to state 318
    MINUSMINUS      shift and go to state 319
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70


state 298

    (26) forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update . RPAREN statement

    RPAREN          shift and go to state 320


state 299

    (35) for_update -> PLUSPLUS . expression
    (87) expression -> PLUSPLUS . expression
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 321

state 300

    (36) for_update -> MINUSMINUS . expression
    (88) expression -> MINUSMINUS . expression
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 322

state 301

    (37) for_update -> empty .

    RPAREN          reduce using rule 37 (for_update -> empty .)


state 302

    (27) forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN . statement
    (94) statement -> . LBRACE instruction_list RBRACE
    (95) statement -> . letAssignment
    (96) statement -> . varAssignment
    (97) statement -> . constAssignment
    (98) statement -> . declaracion
    (99) statement -> . function
    (100) statement -> . arrow_function
    (101) statement -> . async_function
    (102) statement -> . consolelog
    (103) statement -> . expression SEMICOLON
    (104) statement -> . controlEstructure
    (105) statement -> . RETURN expression SEMICOLON
    (106) statement -> . forEstructure
    (107) statement -> . RETURN SEMICOLON
    (108) statement -> . class_definition
    (19) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (20) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (134) varAssignment -> . VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
    (135) varAssignment -> . VAR IDENTIFIER EQUAL expression SEMICOLON
    (113) constAssignment -> . CONST IDENTIFIER COLON type EQUAL expression SEMICOLON
    (114) constAssignment -> . CONST IDENTIFIER EQUAL expression SEMICOLON
    (21) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (38) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (136) arrow_function -> . CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (132) async_function -> . ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (89) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE
    (90) controlEstructure -> . IF LPAREN expression RPAREN statement
    (91) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (92) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (93) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (123) controlEstructure -> . SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE
    (133) controlEstructure -> . WHILE LPAREN expression RPAREN statement
    (26) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (27) forEstructure -> . FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement
    (115) class_definition -> . CLASS IDENTIFIER LBRACE class_body RBRACE

    LBRACE          shift and go to state 23
    RETURN          shift and go to state 33
    LET             shift and go to state 18
    VAR             shift and go to state 45
    CONST           shift and go to state 98
    FUNCTION        shift and go to state 21
    ASYNC           shift and go to state 25
    CONSOLE         shift and go to state 44
    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    CLASS           shift and go to state 31

    statement                      shift and go to state 323
    letAssignment                  shift and go to state 86
    varAssignment                  shift and go to state 32
    constAssignment                shift and go to state 87
    declaracion                    shift and go to state 88
    function                       shift and go to state 89
    arrow_function                 shift and go to state 90
    async_function                 shift and go to state 91
    consolelog                     shift and go to state 92
    expression                     shift and go to state 93
    controlEstructure              shift and go to state 94
    forEstructure                  shift and go to state 95
    class_definition               shift and go to state 96

state 303

    (29) for_init -> LET IDENTIFIER COLON type EQUAL . expression
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 324

state 304

    (19) letAssignment -> LET IDENTIFIER COLON type . EQUAL expression SEMICOLON
    (51) type -> type . LBRACKET RBRACKET

    EQUAL           shift and go to state 225
    LBRACKET        shift and go to state 237


state 305

    (141) interface_property -> IDENTIFIER COLON type SEMICOLON .

    RBRACE          reduce using rule 141 (interface_property -> IDENTIFIER COLON type SEMICOLON .)
    IDENTIFIER      reduce using rule 141 (interface_property -> IDENTIFIER COLON type SEMICOLON .)


state 306

    (89) consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .

    LET             reduce using rule 89 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 89 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    CONST           reduce using rule 89 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    ASYNC           reduce using rule 89 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    ENUM            reduce using rule 89 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    IF              reduce using rule 89 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    SWITCH          reduce using rule 89 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    WHILE           reduce using rule 89 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    FOR             reduce using rule 89 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    CLASS           reduce using rule 89 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    LBRACE          reduce using rule 89 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    RETURN          reduce using rule 89 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    INTERFACE       reduce using rule 89 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 89 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    LBRACKET        reduce using rule 89 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    PROMPT          reduce using rule 89 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    NOT             reduce using rule 89 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    LPAREN          reduce using rule 89 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    NUMBER          reduce using rule 89 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    FLOAT           reduce using rule 89 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    STRING          reduce using rule 89 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    TRUE            reduce using rule 89 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    FALSE           reduce using rule 89 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    PLUSPLUS        reduce using rule 89 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    MINUSMINUS      reduce using rule 89 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    CONSOLE         reduce using rule 89 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    VAR             reduce using rule 89 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    $end            reduce using rule 89 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    RBRACE          reduce using rule 89 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    ELSE            reduce using rule 89 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    CASE            reduce using rule 89 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 89 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)


state 307

    (134) varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .

    LET             reduce using rule 134 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    FUNCTION        reduce using rule 134 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    CONST           reduce using rule 134 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    ASYNC           reduce using rule 134 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    ENUM            reduce using rule 134 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    IF              reduce using rule 134 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    SWITCH          reduce using rule 134 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    WHILE           reduce using rule 134 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    FOR             reduce using rule 134 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    CLASS           reduce using rule 134 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    LBRACE          reduce using rule 134 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    RETURN          reduce using rule 134 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    INTERFACE       reduce using rule 134 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    IDENTIFIER      reduce using rule 134 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    LBRACKET        reduce using rule 134 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    PROMPT          reduce using rule 134 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    NOT             reduce using rule 134 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    LPAREN          reduce using rule 134 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    NUMBER          reduce using rule 134 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    FLOAT           reduce using rule 134 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    STRING          reduce using rule 134 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    TRUE            reduce using rule 134 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    FALSE           reduce using rule 134 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    PLUSPLUS        reduce using rule 134 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    MINUSMINUS      reduce using rule 134 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    CONSOLE         reduce using rule 134 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    VAR             reduce using rule 134 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    $end            reduce using rule 134 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    RBRACE          reduce using rule 134 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    ELSE            reduce using rule 134 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    CASE            reduce using rule 134 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    DEFAULT         reduce using rule 134 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)


state 308

    (21) declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET . lista_expresiones_opt RBRACKET SEMICOLON
    (22) lista_expresiones_opt -> . lista_expresiones
    (23) lista_expresiones_opt -> . empty
    (24) lista_expresiones -> . expression
    (25) lista_expresiones -> . expression COMMA lista_expresiones
    (112) empty -> .
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    RBRACKET        reduce using rule 112 (empty -> .)
    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    lista_expresiones_opt          shift and go to state 325
    lista_expresiones              shift and go to state 143
    empty                          shift and go to state 144
    expression                     shift and go to state 145

state 309

    (44) type -> LBRACKET type COMMA type RBRACKET .

    EQUAL           reduce using rule 44 (type -> LBRACKET type COMMA type RBRACKET .)
    LBRACKET        reduce using rule 44 (type -> LBRACKET type COMMA type RBRACKET .)
    COMMA           reduce using rule 44 (type -> LBRACKET type COMMA type RBRACKET .)
    RPAREN          reduce using rule 44 (type -> LBRACKET type COMMA type RBRACKET .)
    SEMICOLON       reduce using rule 44 (type -> LBRACKET type COMMA type RBRACKET .)
    RBRACKET        reduce using rule 44 (type -> LBRACKET type COMMA type RBRACKET .)
    LBRACE          reduce using rule 44 (type -> LBRACKET type COMMA type RBRACKET .)


state 310

    (40) parameters -> IDENTIFIER COLON type COMMA parameters .

    RPAREN          reduce using rule 40 (parameters -> IDENTIFIER COLON type COMMA parameters .)


state 311

    (38) function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE . body_function RBRACE
    (42) body_function -> . instruction_list
    (43) body_function -> . empty
    (109) instruction_list -> . instruction_list statement
    (110) instruction_list -> . statement
    (111) instruction_list -> . empty
    (112) empty -> .
    (94) statement -> . LBRACE instruction_list RBRACE
    (95) statement -> . letAssignment
    (96) statement -> . varAssignment
    (97) statement -> . constAssignment
    (98) statement -> . declaracion
    (99) statement -> . function
    (100) statement -> . arrow_function
    (101) statement -> . async_function
    (102) statement -> . consolelog
    (103) statement -> . expression SEMICOLON
    (104) statement -> . controlEstructure
    (105) statement -> . RETURN expression SEMICOLON
    (106) statement -> . forEstructure
    (107) statement -> . RETURN SEMICOLON
    (108) statement -> . class_definition
    (19) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (20) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (134) varAssignment -> . VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
    (135) varAssignment -> . VAR IDENTIFIER EQUAL expression SEMICOLON
    (113) constAssignment -> . CONST IDENTIFIER COLON type EQUAL expression SEMICOLON
    (114) constAssignment -> . CONST IDENTIFIER EQUAL expression SEMICOLON
    (21) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (38) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (136) arrow_function -> . CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (132) async_function -> . ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (89) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE
    (90) controlEstructure -> . IF LPAREN expression RPAREN statement
    (91) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (92) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (93) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (123) controlEstructure -> . SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE
    (133) controlEstructure -> . WHILE LPAREN expression RPAREN statement
    (26) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (27) forEstructure -> . FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement
    (115) class_definition -> . CLASS IDENTIFIER LBRACE class_body RBRACE

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for CONST resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for ASYNC resolved as shift
  ! shift/reduce conflict for CONSOLE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PROMPT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
    RBRACE          reduce using rule 112 (empty -> .)
    LBRACE          shift and go to state 23
    RETURN          shift and go to state 33
    LET             shift and go to state 18
    VAR             shift and go to state 45
    CONST           shift and go to state 98
    FUNCTION        shift and go to state 21
    ASYNC           shift and go to state 25
    CONSOLE         shift and go to state 44
    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    CLASS           shift and go to state 31

  ! LBRACE          [ reduce using rule 112 (empty -> .) ]
  ! RETURN          [ reduce using rule 112 (empty -> .) ]
  ! LET             [ reduce using rule 112 (empty -> .) ]
  ! VAR             [ reduce using rule 112 (empty -> .) ]
  ! CONST           [ reduce using rule 112 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 112 (empty -> .) ]
  ! ASYNC           [ reduce using rule 112 (empty -> .) ]
  ! CONSOLE         [ reduce using rule 112 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 112 (empty -> .) ]
  ! PROMPT          [ reduce using rule 112 (empty -> .) ]
  ! NOT             [ reduce using rule 112 (empty -> .) ]
  ! LPAREN          [ reduce using rule 112 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 112 (empty -> .) ]
  ! NUMBER          [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! TRUE            [ reduce using rule 112 (empty -> .) ]
  ! FALSE           [ reduce using rule 112 (empty -> .) ]
  ! PLUSPLUS        [ reduce using rule 112 (empty -> .) ]
  ! MINUSMINUS      [ reduce using rule 112 (empty -> .) ]
  ! IF              [ reduce using rule 112 (empty -> .) ]
  ! SWITCH          [ reduce using rule 112 (empty -> .) ]
  ! WHILE           [ reduce using rule 112 (empty -> .) ]
  ! FOR             [ reduce using rule 112 (empty -> .) ]
  ! CLASS           [ reduce using rule 112 (empty -> .) ]

    body_function                  shift and go to state 326
    instruction_list               shift and go to state 327
    empty                          shift and go to state 328
    statement                      shift and go to state 83
    letAssignment                  shift and go to state 86
    varAssignment                  shift and go to state 32
    constAssignment                shift and go to state 87
    declaracion                    shift and go to state 88
    function                       shift and go to state 89
    arrow_function                 shift and go to state 90
    async_function                 shift and go to state 91
    consolelog                     shift and go to state 92
    expression                     shift and go to state 93
    controlEstructure              shift and go to state 94
    forEstructure                  shift and go to state 95
    class_definition               shift and go to state 96

state 312

    (136) arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE . body_function RBRACE SEMICOLON
    (42) body_function -> . instruction_list
    (43) body_function -> . empty
    (109) instruction_list -> . instruction_list statement
    (110) instruction_list -> . statement
    (111) instruction_list -> . empty
    (112) empty -> .
    (94) statement -> . LBRACE instruction_list RBRACE
    (95) statement -> . letAssignment
    (96) statement -> . varAssignment
    (97) statement -> . constAssignment
    (98) statement -> . declaracion
    (99) statement -> . function
    (100) statement -> . arrow_function
    (101) statement -> . async_function
    (102) statement -> . consolelog
    (103) statement -> . expression SEMICOLON
    (104) statement -> . controlEstructure
    (105) statement -> . RETURN expression SEMICOLON
    (106) statement -> . forEstructure
    (107) statement -> . RETURN SEMICOLON
    (108) statement -> . class_definition
    (19) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (20) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (134) varAssignment -> . VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
    (135) varAssignment -> . VAR IDENTIFIER EQUAL expression SEMICOLON
    (113) constAssignment -> . CONST IDENTIFIER COLON type EQUAL expression SEMICOLON
    (114) constAssignment -> . CONST IDENTIFIER EQUAL expression SEMICOLON
    (21) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (38) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (136) arrow_function -> . CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (132) async_function -> . ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (89) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE
    (90) controlEstructure -> . IF LPAREN expression RPAREN statement
    (91) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (92) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (93) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (123) controlEstructure -> . SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE
    (133) controlEstructure -> . WHILE LPAREN expression RPAREN statement
    (26) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (27) forEstructure -> . FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement
    (115) class_definition -> . CLASS IDENTIFIER LBRACE class_body RBRACE

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for CONST resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for ASYNC resolved as shift
  ! shift/reduce conflict for CONSOLE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PROMPT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
    RBRACE          reduce using rule 112 (empty -> .)
    LBRACE          shift and go to state 23
    RETURN          shift and go to state 33
    LET             shift and go to state 18
    VAR             shift and go to state 45
    CONST           shift and go to state 98
    FUNCTION        shift and go to state 21
    ASYNC           shift and go to state 25
    CONSOLE         shift and go to state 44
    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    CLASS           shift and go to state 31

  ! LBRACE          [ reduce using rule 112 (empty -> .) ]
  ! RETURN          [ reduce using rule 112 (empty -> .) ]
  ! LET             [ reduce using rule 112 (empty -> .) ]
  ! VAR             [ reduce using rule 112 (empty -> .) ]
  ! CONST           [ reduce using rule 112 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 112 (empty -> .) ]
  ! ASYNC           [ reduce using rule 112 (empty -> .) ]
  ! CONSOLE         [ reduce using rule 112 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 112 (empty -> .) ]
  ! PROMPT          [ reduce using rule 112 (empty -> .) ]
  ! NOT             [ reduce using rule 112 (empty -> .) ]
  ! LPAREN          [ reduce using rule 112 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 112 (empty -> .) ]
  ! NUMBER          [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! TRUE            [ reduce using rule 112 (empty -> .) ]
  ! FALSE           [ reduce using rule 112 (empty -> .) ]
  ! PLUSPLUS        [ reduce using rule 112 (empty -> .) ]
  ! MINUSMINUS      [ reduce using rule 112 (empty -> .) ]
  ! IF              [ reduce using rule 112 (empty -> .) ]
  ! SWITCH          [ reduce using rule 112 (empty -> .) ]
  ! WHILE           [ reduce using rule 112 (empty -> .) ]
  ! FOR             [ reduce using rule 112 (empty -> .) ]
  ! CLASS           [ reduce using rule 112 (empty -> .) ]

    body_function                  shift and go to state 329
    instruction_list               shift and go to state 327
    empty                          shift and go to state 328
    statement                      shift and go to state 83
    letAssignment                  shift and go to state 86
    varAssignment                  shift and go to state 32
    constAssignment                shift and go to state 87
    declaracion                    shift and go to state 88
    function                       shift and go to state 89
    arrow_function                 shift and go to state 90
    async_function                 shift and go to state 91
    consolelog                     shift and go to state 92
    expression                     shift and go to state 93
    controlEstructure              shift and go to state 94
    forEstructure                  shift and go to state 95
    class_definition               shift and go to state 96

state 313

    (132) async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type . LBRACE body_function RBRACE
    (51) type -> type . LBRACKET RBRACKET

    LBRACE          shift and go to state 330
    LBRACKET        shift and go to state 237


state 314

    (92) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN . expression RPAREN statement
    (93) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN . expression RPAREN statement ELSE statement
    (90) controlEstructure -> IF LPAREN . expression RPAREN statement
    (91) controlEstructure -> IF LPAREN . expression RPAREN statement ELSE statement
    (92) controlEstructure -> IF LPAREN . expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (93) controlEstructure -> IF LPAREN . expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE

    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    LBRACE          shift and go to state 78

    expression                     shift and go to state 331

state 315

    (127) case -> CASE expression COLON . instruction_list
    (109) instruction_list -> . instruction_list statement
    (110) instruction_list -> . statement
    (111) instruction_list -> . empty
    (94) statement -> . LBRACE instruction_list RBRACE
    (95) statement -> . letAssignment
    (96) statement -> . varAssignment
    (97) statement -> . constAssignment
    (98) statement -> . declaracion
    (99) statement -> . function
    (100) statement -> . arrow_function
    (101) statement -> . async_function
    (102) statement -> . consolelog
    (103) statement -> . expression SEMICOLON
    (104) statement -> . controlEstructure
    (105) statement -> . RETURN expression SEMICOLON
    (106) statement -> . forEstructure
    (107) statement -> . RETURN SEMICOLON
    (108) statement -> . class_definition
    (112) empty -> .
    (19) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (20) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (134) varAssignment -> . VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
    (135) varAssignment -> . VAR IDENTIFIER EQUAL expression SEMICOLON
    (113) constAssignment -> . CONST IDENTIFIER COLON type EQUAL expression SEMICOLON
    (114) constAssignment -> . CONST IDENTIFIER EQUAL expression SEMICOLON
    (21) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (38) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (136) arrow_function -> . CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (132) async_function -> . ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (89) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE
    (90) controlEstructure -> . IF LPAREN expression RPAREN statement
    (91) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (92) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (93) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (123) controlEstructure -> . SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE
    (133) controlEstructure -> . WHILE LPAREN expression RPAREN statement
    (26) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (27) forEstructure -> . FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement
    (115) class_definition -> . CLASS IDENTIFIER LBRACE class_body RBRACE

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for CONST resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for ASYNC resolved as shift
  ! shift/reduce conflict for CONSOLE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PROMPT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
    LBRACE          shift and go to state 23
    RETURN          shift and go to state 33
    RBRACE          reduce using rule 112 (empty -> .)
    CASE            reduce using rule 112 (empty -> .)
    DEFAULT         reduce using rule 112 (empty -> .)
    LET             shift and go to state 18
    VAR             shift and go to state 45
    CONST           shift and go to state 98
    FUNCTION        shift and go to state 21
    ASYNC           shift and go to state 25
    CONSOLE         shift and go to state 44
    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    CLASS           shift and go to state 31

  ! LBRACE          [ reduce using rule 112 (empty -> .) ]
  ! RETURN          [ reduce using rule 112 (empty -> .) ]
  ! LET             [ reduce using rule 112 (empty -> .) ]
  ! VAR             [ reduce using rule 112 (empty -> .) ]
  ! CONST           [ reduce using rule 112 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 112 (empty -> .) ]
  ! ASYNC           [ reduce using rule 112 (empty -> .) ]
  ! CONSOLE         [ reduce using rule 112 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 112 (empty -> .) ]
  ! PROMPT          [ reduce using rule 112 (empty -> .) ]
  ! NOT             [ reduce using rule 112 (empty -> .) ]
  ! LPAREN          [ reduce using rule 112 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 112 (empty -> .) ]
  ! NUMBER          [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! TRUE            [ reduce using rule 112 (empty -> .) ]
  ! FALSE           [ reduce using rule 112 (empty -> .) ]
  ! PLUSPLUS        [ reduce using rule 112 (empty -> .) ]
  ! MINUSMINUS      [ reduce using rule 112 (empty -> .) ]
  ! IF              [ reduce using rule 112 (empty -> .) ]
  ! SWITCH          [ reduce using rule 112 (empty -> .) ]
  ! WHILE           [ reduce using rule 112 (empty -> .) ]
  ! FOR             [ reduce using rule 112 (empty -> .) ]
  ! CLASS           [ reduce using rule 112 (empty -> .) ]

    expression                     shift and go to state 93
    instruction_list               shift and go to state 332
    statement                      shift and go to state 83
    empty                          shift and go to state 317
    letAssignment                  shift and go to state 86
    varAssignment                  shift and go to state 32
    constAssignment                shift and go to state 87
    declaracion                    shift and go to state 88
    function                       shift and go to state 89
    arrow_function                 shift and go to state 90
    async_function                 shift and go to state 91
    consolelog                     shift and go to state 92
    controlEstructure              shift and go to state 94
    forEstructure                  shift and go to state 95
    class_definition               shift and go to state 96

state 316

    (128) case -> DEFAULT COLON instruction_list .
    (109) instruction_list -> instruction_list . statement
    (94) statement -> . LBRACE instruction_list RBRACE
    (95) statement -> . letAssignment
    (96) statement -> . varAssignment
    (97) statement -> . constAssignment
    (98) statement -> . declaracion
    (99) statement -> . function
    (100) statement -> . arrow_function
    (101) statement -> . async_function
    (102) statement -> . consolelog
    (103) statement -> . expression SEMICOLON
    (104) statement -> . controlEstructure
    (105) statement -> . RETURN expression SEMICOLON
    (106) statement -> . forEstructure
    (107) statement -> . RETURN SEMICOLON
    (108) statement -> . class_definition
    (19) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (20) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (134) varAssignment -> . VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
    (135) varAssignment -> . VAR IDENTIFIER EQUAL expression SEMICOLON
    (113) constAssignment -> . CONST IDENTIFIER COLON type EQUAL expression SEMICOLON
    (114) constAssignment -> . CONST IDENTIFIER EQUAL expression SEMICOLON
    (21) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (38) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (136) arrow_function -> . CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (132) async_function -> . ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (89) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE
    (90) controlEstructure -> . IF LPAREN expression RPAREN statement
    (91) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (92) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (93) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (123) controlEstructure -> . SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE
    (133) controlEstructure -> . WHILE LPAREN expression RPAREN statement
    (26) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (27) forEstructure -> . FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement
    (115) class_definition -> . CLASS IDENTIFIER LBRACE class_body RBRACE

    RBRACE          reduce using rule 128 (case -> DEFAULT COLON instruction_list .)
    CASE            reduce using rule 128 (case -> DEFAULT COLON instruction_list .)
    DEFAULT         reduce using rule 128 (case -> DEFAULT COLON instruction_list .)
    LBRACE          shift and go to state 23
    RETURN          shift and go to state 33
    LET             shift and go to state 18
    VAR             shift and go to state 45
    CONST           shift and go to state 98
    FUNCTION        shift and go to state 21
    ASYNC           shift and go to state 25
    CONSOLE         shift and go to state 44
    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    CLASS           shift and go to state 31

    statement                      shift and go to state 152
    letAssignment                  shift and go to state 86
    varAssignment                  shift and go to state 32
    constAssignment                shift and go to state 87
    declaracion                    shift and go to state 88
    function                       shift and go to state 89
    arrow_function                 shift and go to state 90
    async_function                 shift and go to state 91
    consolelog                     shift and go to state 92
    expression                     shift and go to state 93
    controlEstructure              shift and go to state 94
    forEstructure                  shift and go to state 95
    class_definition               shift and go to state 96

state 317

    (111) instruction_list -> empty .

    LBRACE          reduce using rule 111 (instruction_list -> empty .)
    RETURN          reduce using rule 111 (instruction_list -> empty .)
    LET             reduce using rule 111 (instruction_list -> empty .)
    VAR             reduce using rule 111 (instruction_list -> empty .)
    CONST           reduce using rule 111 (instruction_list -> empty .)
    FUNCTION        reduce using rule 111 (instruction_list -> empty .)
    ASYNC           reduce using rule 111 (instruction_list -> empty .)
    CONSOLE         reduce using rule 111 (instruction_list -> empty .)
    LBRACKET        reduce using rule 111 (instruction_list -> empty .)
    PROMPT          reduce using rule 111 (instruction_list -> empty .)
    NOT             reduce using rule 111 (instruction_list -> empty .)
    LPAREN          reduce using rule 111 (instruction_list -> empty .)
    IDENTIFIER      reduce using rule 111 (instruction_list -> empty .)
    NUMBER          reduce using rule 111 (instruction_list -> empty .)
    FLOAT           reduce using rule 111 (instruction_list -> empty .)
    STRING          reduce using rule 111 (instruction_list -> empty .)
    TRUE            reduce using rule 111 (instruction_list -> empty .)
    FALSE           reduce using rule 111 (instruction_list -> empty .)
    PLUSPLUS        reduce using rule 111 (instruction_list -> empty .)
    MINUSMINUS      reduce using rule 111 (instruction_list -> empty .)
    IF              reduce using rule 111 (instruction_list -> empty .)
    SWITCH          reduce using rule 111 (instruction_list -> empty .)
    WHILE           reduce using rule 111 (instruction_list -> empty .)
    FOR             reduce using rule 111 (instruction_list -> empty .)
    CLASS           reduce using rule 111 (instruction_list -> empty .)
    RBRACE          reduce using rule 111 (instruction_list -> empty .)
    CASE            reduce using rule 111 (instruction_list -> empty .)
    DEFAULT         reduce using rule 111 (instruction_list -> empty .)


state 318

    (33) for_update -> expression PLUSPLUS .
    (85) expression -> expression PLUSPLUS .

  ! reduce/reduce conflict for RPAREN resolved using rule 33 (for_update -> expression PLUSPLUS .)
    RPAREN          reduce using rule 33 (for_update -> expression PLUSPLUS .)
    PLUSPLUS        reduce using rule 85 (expression -> expression PLUSPLUS .)
    MINUSMINUS      reduce using rule 85 (expression -> expression PLUSPLUS .)
    PLUS            reduce using rule 85 (expression -> expression PLUSPLUS .)
    MINUS           reduce using rule 85 (expression -> expression PLUSPLUS .)
    TIMES           reduce using rule 85 (expression -> expression PLUSPLUS .)
    DIV             reduce using rule 85 (expression -> expression PLUSPLUS .)
    MOD             reduce using rule 85 (expression -> expression PLUSPLUS .)
    PLUS_ASSIGN     reduce using rule 85 (expression -> expression PLUSPLUS .)
    MINUS_ASSIGN    reduce using rule 85 (expression -> expression PLUSPLUS .)
    MULT_ASSIGN     reduce using rule 85 (expression -> expression PLUSPLUS .)
    DIV_ASSIGN      reduce using rule 85 (expression -> expression PLUSPLUS .)
    MOD_ASSIGN      reduce using rule 85 (expression -> expression PLUSPLUS .)
    POT             reduce using rule 85 (expression -> expression PLUSPLUS .)
    AND             reduce using rule 85 (expression -> expression PLUSPLUS .)
    OR              reduce using rule 85 (expression -> expression PLUSPLUS .)
    EQ              reduce using rule 85 (expression -> expression PLUSPLUS .)
    NEQ             reduce using rule 85 (expression -> expression PLUSPLUS .)
    STRICT_EQ       reduce using rule 85 (expression -> expression PLUSPLUS .)
    STRICT_NEQ      reduce using rule 85 (expression -> expression PLUSPLUS .)
    LT              reduce using rule 85 (expression -> expression PLUSPLUS .)
    GT              reduce using rule 85 (expression -> expression PLUSPLUS .)
    LE              reduce using rule 85 (expression -> expression PLUSPLUS .)
    GE              reduce using rule 85 (expression -> expression PLUSPLUS .)
    DOT             reduce using rule 85 (expression -> expression PLUSPLUS .)
    LBRACKET        reduce using rule 85 (expression -> expression PLUSPLUS .)

  ! RPAREN          [ reduce using rule 85 (expression -> expression PLUSPLUS .) ]


state 319

    (34) for_update -> expression MINUSMINUS .
    (86) expression -> expression MINUSMINUS .

  ! reduce/reduce conflict for RPAREN resolved using rule 34 (for_update -> expression MINUSMINUS .)
    RPAREN          reduce using rule 34 (for_update -> expression MINUSMINUS .)
    PLUSPLUS        reduce using rule 86 (expression -> expression MINUSMINUS .)
    MINUSMINUS      reduce using rule 86 (expression -> expression MINUSMINUS .)
    PLUS            reduce using rule 86 (expression -> expression MINUSMINUS .)
    MINUS           reduce using rule 86 (expression -> expression MINUSMINUS .)
    TIMES           reduce using rule 86 (expression -> expression MINUSMINUS .)
    DIV             reduce using rule 86 (expression -> expression MINUSMINUS .)
    MOD             reduce using rule 86 (expression -> expression MINUSMINUS .)
    PLUS_ASSIGN     reduce using rule 86 (expression -> expression MINUSMINUS .)
    MINUS_ASSIGN    reduce using rule 86 (expression -> expression MINUSMINUS .)
    MULT_ASSIGN     reduce using rule 86 (expression -> expression MINUSMINUS .)
    DIV_ASSIGN      reduce using rule 86 (expression -> expression MINUSMINUS .)
    MOD_ASSIGN      reduce using rule 86 (expression -> expression MINUSMINUS .)
    POT             reduce using rule 86 (expression -> expression MINUSMINUS .)
    AND             reduce using rule 86 (expression -> expression MINUSMINUS .)
    OR              reduce using rule 86 (expression -> expression MINUSMINUS .)
    EQ              reduce using rule 86 (expression -> expression MINUSMINUS .)
    NEQ             reduce using rule 86 (expression -> expression MINUSMINUS .)
    STRICT_EQ       reduce using rule 86 (expression -> expression MINUSMINUS .)
    STRICT_NEQ      reduce using rule 86 (expression -> expression MINUSMINUS .)
    LT              reduce using rule 86 (expression -> expression MINUSMINUS .)
    GT              reduce using rule 86 (expression -> expression MINUSMINUS .)
    LE              reduce using rule 86 (expression -> expression MINUSMINUS .)
    GE              reduce using rule 86 (expression -> expression MINUSMINUS .)
    DOT             reduce using rule 86 (expression -> expression MINUSMINUS .)
    LBRACKET        reduce using rule 86 (expression -> expression MINUSMINUS .)

  ! RPAREN          [ reduce using rule 86 (expression -> expression MINUSMINUS .) ]


state 320

    (26) forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN . statement
    (94) statement -> . LBRACE instruction_list RBRACE
    (95) statement -> . letAssignment
    (96) statement -> . varAssignment
    (97) statement -> . constAssignment
    (98) statement -> . declaracion
    (99) statement -> . function
    (100) statement -> . arrow_function
    (101) statement -> . async_function
    (102) statement -> . consolelog
    (103) statement -> . expression SEMICOLON
    (104) statement -> . controlEstructure
    (105) statement -> . RETURN expression SEMICOLON
    (106) statement -> . forEstructure
    (107) statement -> . RETURN SEMICOLON
    (108) statement -> . class_definition
    (19) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (20) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (134) varAssignment -> . VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
    (135) varAssignment -> . VAR IDENTIFIER EQUAL expression SEMICOLON
    (113) constAssignment -> . CONST IDENTIFIER COLON type EQUAL expression SEMICOLON
    (114) constAssignment -> . CONST IDENTIFIER EQUAL expression SEMICOLON
    (21) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (38) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (136) arrow_function -> . CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (132) async_function -> . ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (89) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE
    (90) controlEstructure -> . IF LPAREN expression RPAREN statement
    (91) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (92) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (93) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (123) controlEstructure -> . SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE
    (133) controlEstructure -> . WHILE LPAREN expression RPAREN statement
    (26) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (27) forEstructure -> . FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement
    (115) class_definition -> . CLASS IDENTIFIER LBRACE class_body RBRACE

    LBRACE          shift and go to state 23
    RETURN          shift and go to state 33
    LET             shift and go to state 18
    VAR             shift and go to state 45
    CONST           shift and go to state 98
    FUNCTION        shift and go to state 21
    ASYNC           shift and go to state 25
    CONSOLE         shift and go to state 44
    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    CLASS           shift and go to state 31

    expression                     shift and go to state 93
    statement                      shift and go to state 333
    letAssignment                  shift and go to state 86
    varAssignment                  shift and go to state 32
    constAssignment                shift and go to state 87
    declaracion                    shift and go to state 88
    function                       shift and go to state 89
    arrow_function                 shift and go to state 90
    async_function                 shift and go to state 91
    consolelog                     shift and go to state 92
    controlEstructure              shift and go to state 94
    forEstructure                  shift and go to state 95
    class_definition               shift and go to state 96

state 321

    (35) for_update -> PLUSPLUS expression .
    (87) expression -> PLUSPLUS expression .
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

  ! reduce/reduce conflict for RPAREN resolved using rule 35 (for_update -> PLUSPLUS expression .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    RPAREN          reduce using rule 35 (for_update -> PLUSPLUS expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72

  ! PLUSPLUS        [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! MINUSMINUS      [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! PLUS            [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! MINUS           [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! TIMES           [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! DIV             [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! MOD             [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! POT             [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! AND             [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! OR              [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! EQ              [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! NEQ             [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! STRICT_EQ       [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! STRICT_NEQ      [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! LT              [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! GT              [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! LE              [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! GE              [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! DOT             [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! LBRACKET        [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]
  ! RPAREN          [ reduce using rule 87 (expression -> PLUSPLUS expression .) ]


state 322

    (36) for_update -> MINUSMINUS expression .
    (88) expression -> MINUSMINUS expression .
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

  ! reduce/reduce conflict for RPAREN resolved using rule 36 (for_update -> MINUSMINUS expression .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    RPAREN          reduce using rule 36 (for_update -> MINUSMINUS expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72

  ! PLUSPLUS        [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! MINUSMINUS      [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! PLUS            [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! MINUS           [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! TIMES           [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! DIV             [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! MOD             [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! POT             [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! AND             [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! OR              [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! EQ              [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! NEQ             [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! STRICT_EQ       [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! STRICT_NEQ      [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! LT              [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! GT              [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! LE              [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! GE              [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! DOT             [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! LBRACKET        [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]
  ! RPAREN          [ reduce using rule 88 (expression -> MINUSMINUS expression .) ]


state 323

    (27) forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement .

    LET             reduce using rule 27 (forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement .)
    FUNCTION        reduce using rule 27 (forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement .)
    CONST           reduce using rule 27 (forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement .)
    ASYNC           reduce using rule 27 (forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement .)
    ENUM            reduce using rule 27 (forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement .)
    IF              reduce using rule 27 (forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement .)
    SWITCH          reduce using rule 27 (forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement .)
    WHILE           reduce using rule 27 (forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement .)
    FOR             reduce using rule 27 (forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement .)
    CLASS           reduce using rule 27 (forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement .)
    LBRACE          reduce using rule 27 (forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement .)
    RETURN          reduce using rule 27 (forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement .)
    INTERFACE       reduce using rule 27 (forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement .)
    IDENTIFIER      reduce using rule 27 (forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement .)
    LBRACKET        reduce using rule 27 (forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement .)
    PROMPT          reduce using rule 27 (forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement .)
    NOT             reduce using rule 27 (forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement .)
    LPAREN          reduce using rule 27 (forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement .)
    NUMBER          reduce using rule 27 (forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement .)
    FLOAT           reduce using rule 27 (forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement .)
    STRING          reduce using rule 27 (forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement .)
    TRUE            reduce using rule 27 (forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement .)
    FALSE           reduce using rule 27 (forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement .)
    PLUSPLUS        reduce using rule 27 (forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement .)
    MINUSMINUS      reduce using rule 27 (forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement .)
    CONSOLE         reduce using rule 27 (forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement .)
    VAR             reduce using rule 27 (forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement .)
    $end            reduce using rule 27 (forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement .)
    RBRACE          reduce using rule 27 (forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement .)
    ELSE            reduce using rule 27 (forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement .)
    CASE            reduce using rule 27 (forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement .)
    DEFAULT         reduce using rule 27 (forEstructure -> FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement .)


state 324

    (29) for_init -> LET IDENTIFIER COLON type EQUAL expression .
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

    SEMICOLON       reduce using rule 29 (for_init -> LET IDENTIFIER COLON type EQUAL expression .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72


state 325

    (21) declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt . RBRACKET SEMICOLON

    RBRACKET        shift and go to state 334


state 326

    (38) function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function . RBRACE

    RBRACE          shift and go to state 335


state 327

    (42) body_function -> instruction_list .
    (109) instruction_list -> instruction_list . statement
    (94) statement -> . LBRACE instruction_list RBRACE
    (95) statement -> . letAssignment
    (96) statement -> . varAssignment
    (97) statement -> . constAssignment
    (98) statement -> . declaracion
    (99) statement -> . function
    (100) statement -> . arrow_function
    (101) statement -> . async_function
    (102) statement -> . consolelog
    (103) statement -> . expression SEMICOLON
    (104) statement -> . controlEstructure
    (105) statement -> . RETURN expression SEMICOLON
    (106) statement -> . forEstructure
    (107) statement -> . RETURN SEMICOLON
    (108) statement -> . class_definition
    (19) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (20) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (134) varAssignment -> . VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
    (135) varAssignment -> . VAR IDENTIFIER EQUAL expression SEMICOLON
    (113) constAssignment -> . CONST IDENTIFIER COLON type EQUAL expression SEMICOLON
    (114) constAssignment -> . CONST IDENTIFIER EQUAL expression SEMICOLON
    (21) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (38) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (136) arrow_function -> . CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (132) async_function -> . ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (89) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE
    (90) controlEstructure -> . IF LPAREN expression RPAREN statement
    (91) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (92) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (93) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (123) controlEstructure -> . SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE
    (133) controlEstructure -> . WHILE LPAREN expression RPAREN statement
    (26) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (27) forEstructure -> . FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement
    (115) class_definition -> . CLASS IDENTIFIER LBRACE class_body RBRACE

    RBRACE          reduce using rule 42 (body_function -> instruction_list .)
    LBRACE          shift and go to state 23
    RETURN          shift and go to state 33
    LET             shift and go to state 18
    VAR             shift and go to state 45
    CONST           shift and go to state 98
    FUNCTION        shift and go to state 21
    ASYNC           shift and go to state 25
    CONSOLE         shift and go to state 44
    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    CLASS           shift and go to state 31

    statement                      shift and go to state 152
    letAssignment                  shift and go to state 86
    varAssignment                  shift and go to state 32
    constAssignment                shift and go to state 87
    declaracion                    shift and go to state 88
    function                       shift and go to state 89
    arrow_function                 shift and go to state 90
    async_function                 shift and go to state 91
    consolelog                     shift and go to state 92
    expression                     shift and go to state 93
    controlEstructure              shift and go to state 94
    forEstructure                  shift and go to state 95
    class_definition               shift and go to state 96

state 328

    (43) body_function -> empty .
    (111) instruction_list -> empty .

  ! reduce/reduce conflict for RBRACE resolved using rule 43 (body_function -> empty .)
    RBRACE          reduce using rule 43 (body_function -> empty .)
    LBRACE          reduce using rule 111 (instruction_list -> empty .)
    RETURN          reduce using rule 111 (instruction_list -> empty .)
    LET             reduce using rule 111 (instruction_list -> empty .)
    VAR             reduce using rule 111 (instruction_list -> empty .)
    CONST           reduce using rule 111 (instruction_list -> empty .)
    FUNCTION        reduce using rule 111 (instruction_list -> empty .)
    ASYNC           reduce using rule 111 (instruction_list -> empty .)
    CONSOLE         reduce using rule 111 (instruction_list -> empty .)
    LBRACKET        reduce using rule 111 (instruction_list -> empty .)
    PROMPT          reduce using rule 111 (instruction_list -> empty .)
    NOT             reduce using rule 111 (instruction_list -> empty .)
    LPAREN          reduce using rule 111 (instruction_list -> empty .)
    IDENTIFIER      reduce using rule 111 (instruction_list -> empty .)
    NUMBER          reduce using rule 111 (instruction_list -> empty .)
    FLOAT           reduce using rule 111 (instruction_list -> empty .)
    STRING          reduce using rule 111 (instruction_list -> empty .)
    TRUE            reduce using rule 111 (instruction_list -> empty .)
    FALSE           reduce using rule 111 (instruction_list -> empty .)
    PLUSPLUS        reduce using rule 111 (instruction_list -> empty .)
    MINUSMINUS      reduce using rule 111 (instruction_list -> empty .)
    IF              reduce using rule 111 (instruction_list -> empty .)
    SWITCH          reduce using rule 111 (instruction_list -> empty .)
    WHILE           reduce using rule 111 (instruction_list -> empty .)
    FOR             reduce using rule 111 (instruction_list -> empty .)
    CLASS           reduce using rule 111 (instruction_list -> empty .)

  ! RBRACE          [ reduce using rule 111 (instruction_list -> empty .) ]


state 329

    (136) arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function . RBRACE SEMICOLON

    RBRACE          shift and go to state 336


state 330

    (132) async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE . body_function RBRACE
    (42) body_function -> . instruction_list
    (43) body_function -> . empty
    (109) instruction_list -> . instruction_list statement
    (110) instruction_list -> . statement
    (111) instruction_list -> . empty
    (112) empty -> .
    (94) statement -> . LBRACE instruction_list RBRACE
    (95) statement -> . letAssignment
    (96) statement -> . varAssignment
    (97) statement -> . constAssignment
    (98) statement -> . declaracion
    (99) statement -> . function
    (100) statement -> . arrow_function
    (101) statement -> . async_function
    (102) statement -> . consolelog
    (103) statement -> . expression SEMICOLON
    (104) statement -> . controlEstructure
    (105) statement -> . RETURN expression SEMICOLON
    (106) statement -> . forEstructure
    (107) statement -> . RETURN SEMICOLON
    (108) statement -> . class_definition
    (19) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (20) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (134) varAssignment -> . VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
    (135) varAssignment -> . VAR IDENTIFIER EQUAL expression SEMICOLON
    (113) constAssignment -> . CONST IDENTIFIER COLON type EQUAL expression SEMICOLON
    (114) constAssignment -> . CONST IDENTIFIER EQUAL expression SEMICOLON
    (21) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (38) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (136) arrow_function -> . CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (132) async_function -> . ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (89) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE
    (90) controlEstructure -> . IF LPAREN expression RPAREN statement
    (91) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (92) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (93) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (123) controlEstructure -> . SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE
    (133) controlEstructure -> . WHILE LPAREN expression RPAREN statement
    (26) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (27) forEstructure -> . FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement
    (115) class_definition -> . CLASS IDENTIFIER LBRACE class_body RBRACE

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for CONST resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for ASYNC resolved as shift
  ! shift/reduce conflict for CONSOLE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PROMPT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
    RBRACE          reduce using rule 112 (empty -> .)
    LBRACE          shift and go to state 23
    RETURN          shift and go to state 33
    LET             shift and go to state 18
    VAR             shift and go to state 45
    CONST           shift and go to state 98
    FUNCTION        shift and go to state 21
    ASYNC           shift and go to state 25
    CONSOLE         shift and go to state 44
    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    CLASS           shift and go to state 31

  ! LBRACE          [ reduce using rule 112 (empty -> .) ]
  ! RETURN          [ reduce using rule 112 (empty -> .) ]
  ! LET             [ reduce using rule 112 (empty -> .) ]
  ! VAR             [ reduce using rule 112 (empty -> .) ]
  ! CONST           [ reduce using rule 112 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 112 (empty -> .) ]
  ! ASYNC           [ reduce using rule 112 (empty -> .) ]
  ! CONSOLE         [ reduce using rule 112 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 112 (empty -> .) ]
  ! PROMPT          [ reduce using rule 112 (empty -> .) ]
  ! NOT             [ reduce using rule 112 (empty -> .) ]
  ! LPAREN          [ reduce using rule 112 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 112 (empty -> .) ]
  ! NUMBER          [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! TRUE            [ reduce using rule 112 (empty -> .) ]
  ! FALSE           [ reduce using rule 112 (empty -> .) ]
  ! PLUSPLUS        [ reduce using rule 112 (empty -> .) ]
  ! MINUSMINUS      [ reduce using rule 112 (empty -> .) ]
  ! IF              [ reduce using rule 112 (empty -> .) ]
  ! SWITCH          [ reduce using rule 112 (empty -> .) ]
  ! WHILE           [ reduce using rule 112 (empty -> .) ]
  ! FOR             [ reduce using rule 112 (empty -> .) ]
  ! CLASS           [ reduce using rule 112 (empty -> .) ]

    body_function                  shift and go to state 337
    instruction_list               shift and go to state 327
    empty                          shift and go to state 328
    statement                      shift and go to state 83
    letAssignment                  shift and go to state 86
    varAssignment                  shift and go to state 32
    constAssignment                shift and go to state 87
    declaracion                    shift and go to state 88
    function                       shift and go to state 89
    arrow_function                 shift and go to state 90
    async_function                 shift and go to state 91
    consolelog                     shift and go to state 92
    expression                     shift and go to state 93
    controlEstructure              shift and go to state 94
    forEstructure                  shift and go to state 95
    class_definition               shift and go to state 96

state 331

    (92) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression . RPAREN statement
    (93) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression . RPAREN statement ELSE statement
    (90) controlEstructure -> IF LPAREN expression . RPAREN statement
    (91) controlEstructure -> IF LPAREN expression . RPAREN statement ELSE statement
    (92) controlEstructure -> IF LPAREN expression . RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (93) controlEstructure -> IF LPAREN expression . RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (52) expression -> expression . PLUS expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . TIMES expression
    (55) expression -> expression . DIV expression
    (56) expression -> expression . MOD expression
    (57) expression -> expression . PLUS_ASSIGN expression
    (58) expression -> expression . MINUS_ASSIGN expression
    (59) expression -> expression . MULT_ASSIGN expression
    (60) expression -> expression . DIV_ASSIGN expression
    (61) expression -> expression . MOD_ASSIGN expression
    (62) expression -> expression . POT expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . OR expression
    (65) expression -> expression . EQ expression
    (66) expression -> expression . NEQ expression
    (67) expression -> expression . STRICT_EQ expression
    (68) expression -> expression . STRICT_NEQ expression
    (69) expression -> expression . LT expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . GE expression
    (76) expression -> expression . DOT IDENTIFIER
    (77) expression -> expression . LBRACKET expression RBRACKET
    (85) expression -> expression . PLUSPLUS
    (86) expression -> expression . MINUSMINUS

    RPAREN          shift and go to state 338
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIV             shift and go to state 51
    MOD             shift and go to state 52
    PLUS_ASSIGN     shift and go to state 53
    MINUS_ASSIGN    shift and go to state 54
    MULT_ASSIGN     shift and go to state 55
    DIV_ASSIGN      shift and go to state 56
    MOD_ASSIGN      shift and go to state 57
    POT             shift and go to state 58
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQ              shift and go to state 61
    NEQ             shift and go to state 62
    STRICT_EQ       shift and go to state 63
    STRICT_NEQ      shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    DOT             shift and go to state 69
    LBRACKET        shift and go to state 70
    PLUSPLUS        shift and go to state 71
    MINUSMINUS      shift and go to state 72


state 332

    (127) case -> CASE expression COLON instruction_list .
    (109) instruction_list -> instruction_list . statement
    (94) statement -> . LBRACE instruction_list RBRACE
    (95) statement -> . letAssignment
    (96) statement -> . varAssignment
    (97) statement -> . constAssignment
    (98) statement -> . declaracion
    (99) statement -> . function
    (100) statement -> . arrow_function
    (101) statement -> . async_function
    (102) statement -> . consolelog
    (103) statement -> . expression SEMICOLON
    (104) statement -> . controlEstructure
    (105) statement -> . RETURN expression SEMICOLON
    (106) statement -> . forEstructure
    (107) statement -> . RETURN SEMICOLON
    (108) statement -> . class_definition
    (19) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (20) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (134) varAssignment -> . VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
    (135) varAssignment -> . VAR IDENTIFIER EQUAL expression SEMICOLON
    (113) constAssignment -> . CONST IDENTIFIER COLON type EQUAL expression SEMICOLON
    (114) constAssignment -> . CONST IDENTIFIER EQUAL expression SEMICOLON
    (21) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (38) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (136) arrow_function -> . CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (132) async_function -> . ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (89) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE
    (90) controlEstructure -> . IF LPAREN expression RPAREN statement
    (91) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (92) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (93) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (123) controlEstructure -> . SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE
    (133) controlEstructure -> . WHILE LPAREN expression RPAREN statement
    (26) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (27) forEstructure -> . FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement
    (115) class_definition -> . CLASS IDENTIFIER LBRACE class_body RBRACE

    RBRACE          reduce using rule 127 (case -> CASE expression COLON instruction_list .)
    CASE            reduce using rule 127 (case -> CASE expression COLON instruction_list .)
    DEFAULT         reduce using rule 127 (case -> CASE expression COLON instruction_list .)
    LBRACE          shift and go to state 23
    RETURN          shift and go to state 33
    LET             shift and go to state 18
    VAR             shift and go to state 45
    CONST           shift and go to state 98
    FUNCTION        shift and go to state 21
    ASYNC           shift and go to state 25
    CONSOLE         shift and go to state 44
    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    CLASS           shift and go to state 31

    expression                     shift and go to state 93
    statement                      shift and go to state 152
    letAssignment                  shift and go to state 86
    varAssignment                  shift and go to state 32
    constAssignment                shift and go to state 87
    declaracion                    shift and go to state 88
    function                       shift and go to state 89
    arrow_function                 shift and go to state 90
    async_function                 shift and go to state 91
    consolelog                     shift and go to state 92
    controlEstructure              shift and go to state 94
    forEstructure                  shift and go to state 95
    class_definition               shift and go to state 96

state 333

    (26) forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .

    LET             reduce using rule 26 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    FUNCTION        reduce using rule 26 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    CONST           reduce using rule 26 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    ASYNC           reduce using rule 26 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    ENUM            reduce using rule 26 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    IF              reduce using rule 26 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    SWITCH          reduce using rule 26 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    WHILE           reduce using rule 26 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    FOR             reduce using rule 26 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    CLASS           reduce using rule 26 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    LBRACE          reduce using rule 26 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    RETURN          reduce using rule 26 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    INTERFACE       reduce using rule 26 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    IDENTIFIER      reduce using rule 26 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    LBRACKET        reduce using rule 26 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    PROMPT          reduce using rule 26 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    NOT             reduce using rule 26 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    LPAREN          reduce using rule 26 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    NUMBER          reduce using rule 26 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    FLOAT           reduce using rule 26 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    STRING          reduce using rule 26 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    TRUE            reduce using rule 26 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    FALSE           reduce using rule 26 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    PLUSPLUS        reduce using rule 26 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    MINUSMINUS      reduce using rule 26 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    CONSOLE         reduce using rule 26 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    VAR             reduce using rule 26 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    $end            reduce using rule 26 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    RBRACE          reduce using rule 26 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    ELSE            reduce using rule 26 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    CASE            reduce using rule 26 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    DEFAULT         reduce using rule 26 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)


state 334

    (21) declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 339


state 335

    (38) function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .

    LET             reduce using rule 38 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    FUNCTION        reduce using rule 38 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    CONST           reduce using rule 38 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    ASYNC           reduce using rule 38 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    ENUM            reduce using rule 38 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    IF              reduce using rule 38 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    SWITCH          reduce using rule 38 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    WHILE           reduce using rule 38 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    FOR             reduce using rule 38 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    CLASS           reduce using rule 38 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    LBRACE          reduce using rule 38 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    RETURN          reduce using rule 38 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    INTERFACE       reduce using rule 38 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    IDENTIFIER      reduce using rule 38 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    LBRACKET        reduce using rule 38 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    PROMPT          reduce using rule 38 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    NOT             reduce using rule 38 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    LPAREN          reduce using rule 38 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    NUMBER          reduce using rule 38 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    FLOAT           reduce using rule 38 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    STRING          reduce using rule 38 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    TRUE            reduce using rule 38 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    FALSE           reduce using rule 38 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    PLUSPLUS        reduce using rule 38 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    MINUSMINUS      reduce using rule 38 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    CONSOLE         reduce using rule 38 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    VAR             reduce using rule 38 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    $end            reduce using rule 38 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    RBRACE          reduce using rule 38 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    ELSE            reduce using rule 38 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    CASE            reduce using rule 38 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    DEFAULT         reduce using rule 38 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)


state 336

    (136) arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 340


state 337

    (132) async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function . RBRACE

    RBRACE          shift and go to state 341


state 338

    (92) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN . statement
    (93) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN . statement ELSE statement
    (90) controlEstructure -> IF LPAREN expression RPAREN . statement
    (91) controlEstructure -> IF LPAREN expression RPAREN . statement ELSE statement
    (92) controlEstructure -> IF LPAREN expression RPAREN . statement ELSE IF LPAREN expression RPAREN statement
    (93) controlEstructure -> IF LPAREN expression RPAREN . statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (94) statement -> . LBRACE instruction_list RBRACE
    (95) statement -> . letAssignment
    (96) statement -> . varAssignment
    (97) statement -> . constAssignment
    (98) statement -> . declaracion
    (99) statement -> . function
    (100) statement -> . arrow_function
    (101) statement -> . async_function
    (102) statement -> . consolelog
    (103) statement -> . expression SEMICOLON
    (104) statement -> . controlEstructure
    (105) statement -> . RETURN expression SEMICOLON
    (106) statement -> . forEstructure
    (107) statement -> . RETURN SEMICOLON
    (108) statement -> . class_definition
    (19) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (20) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (134) varAssignment -> . VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
    (135) varAssignment -> . VAR IDENTIFIER EQUAL expression SEMICOLON
    (113) constAssignment -> . CONST IDENTIFIER COLON type EQUAL expression SEMICOLON
    (114) constAssignment -> . CONST IDENTIFIER EQUAL expression SEMICOLON
    (21) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (38) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (136) arrow_function -> . CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (132) async_function -> . ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (89) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE
    (90) controlEstructure -> . IF LPAREN expression RPAREN statement
    (91) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (92) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (93) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (123) controlEstructure -> . SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE
    (133) controlEstructure -> . WHILE LPAREN expression RPAREN statement
    (26) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (27) forEstructure -> . FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement
    (115) class_definition -> . CLASS IDENTIFIER LBRACE class_body RBRACE

    LBRACE          shift and go to state 23
    RETURN          shift and go to state 33
    LET             shift and go to state 18
    VAR             shift and go to state 45
    CONST           shift and go to state 98
    FUNCTION        shift and go to state 21
    ASYNC           shift and go to state 25
    CONSOLE         shift and go to state 44
    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    CLASS           shift and go to state 31

    expression                     shift and go to state 93
    statement                      shift and go to state 342
    letAssignment                  shift and go to state 86
    varAssignment                  shift and go to state 32
    constAssignment                shift and go to state 87
    declaracion                    shift and go to state 88
    function                       shift and go to state 89
    arrow_function                 shift and go to state 90
    async_function                 shift and go to state 91
    consolelog                     shift and go to state 92
    controlEstructure              shift and go to state 94
    forEstructure                  shift and go to state 95
    class_definition               shift and go to state 96

state 339

    (21) declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .

    LET             reduce using rule 21 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    FUNCTION        reduce using rule 21 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    CONST           reduce using rule 21 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    ASYNC           reduce using rule 21 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    ENUM            reduce using rule 21 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    IF              reduce using rule 21 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    SWITCH          reduce using rule 21 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    WHILE           reduce using rule 21 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    FOR             reduce using rule 21 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    CLASS           reduce using rule 21 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    LBRACE          reduce using rule 21 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    RETURN          reduce using rule 21 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    INTERFACE       reduce using rule 21 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    IDENTIFIER      reduce using rule 21 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    LBRACKET        reduce using rule 21 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    PROMPT          reduce using rule 21 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    NOT             reduce using rule 21 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    LPAREN          reduce using rule 21 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    NUMBER          reduce using rule 21 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    FLOAT           reduce using rule 21 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    STRING          reduce using rule 21 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    TRUE            reduce using rule 21 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    FALSE           reduce using rule 21 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    PLUSPLUS        reduce using rule 21 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    MINUSMINUS      reduce using rule 21 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    CONSOLE         reduce using rule 21 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    VAR             reduce using rule 21 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    $end            reduce using rule 21 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    RBRACE          reduce using rule 21 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    ELSE            reduce using rule 21 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    CASE            reduce using rule 21 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    DEFAULT         reduce using rule 21 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)


state 340

    (136) arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .

    LET             reduce using rule 136 (arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    FUNCTION        reduce using rule 136 (arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    CONST           reduce using rule 136 (arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    ASYNC           reduce using rule 136 (arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    ENUM            reduce using rule 136 (arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    IF              reduce using rule 136 (arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    SWITCH          reduce using rule 136 (arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    WHILE           reduce using rule 136 (arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    FOR             reduce using rule 136 (arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    CLASS           reduce using rule 136 (arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    LBRACE          reduce using rule 136 (arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    RETURN          reduce using rule 136 (arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    INTERFACE       reduce using rule 136 (arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    IDENTIFIER      reduce using rule 136 (arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    LBRACKET        reduce using rule 136 (arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    PROMPT          reduce using rule 136 (arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    NOT             reduce using rule 136 (arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    LPAREN          reduce using rule 136 (arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    NUMBER          reduce using rule 136 (arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    FLOAT           reduce using rule 136 (arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    STRING          reduce using rule 136 (arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    TRUE            reduce using rule 136 (arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    FALSE           reduce using rule 136 (arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    PLUSPLUS        reduce using rule 136 (arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    MINUSMINUS      reduce using rule 136 (arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    CONSOLE         reduce using rule 136 (arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    VAR             reduce using rule 136 (arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    $end            reduce using rule 136 (arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    RBRACE          reduce using rule 136 (arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    ELSE            reduce using rule 136 (arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    CASE            reduce using rule 136 (arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    DEFAULT         reduce using rule 136 (arrow_function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)


state 341

    (132) async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .

    LET             reduce using rule 132 (async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    FUNCTION        reduce using rule 132 (async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    CONST           reduce using rule 132 (async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    ASYNC           reduce using rule 132 (async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    ENUM            reduce using rule 132 (async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    IF              reduce using rule 132 (async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    SWITCH          reduce using rule 132 (async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    WHILE           reduce using rule 132 (async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    FOR             reduce using rule 132 (async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    CLASS           reduce using rule 132 (async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    LBRACE          reduce using rule 132 (async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    RETURN          reduce using rule 132 (async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    INTERFACE       reduce using rule 132 (async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    IDENTIFIER      reduce using rule 132 (async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    LBRACKET        reduce using rule 132 (async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    PROMPT          reduce using rule 132 (async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    NOT             reduce using rule 132 (async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    LPAREN          reduce using rule 132 (async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    NUMBER          reduce using rule 132 (async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    FLOAT           reduce using rule 132 (async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    STRING          reduce using rule 132 (async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    TRUE            reduce using rule 132 (async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    FALSE           reduce using rule 132 (async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    PLUSPLUS        reduce using rule 132 (async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    MINUSMINUS      reduce using rule 132 (async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    CONSOLE         reduce using rule 132 (async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    VAR             reduce using rule 132 (async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    $end            reduce using rule 132 (async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    RBRACE          reduce using rule 132 (async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    ELSE            reduce using rule 132 (async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    CASE            reduce using rule 132 (async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    DEFAULT         reduce using rule 132 (async_function -> ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)


state 342

    (92) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .
    (93) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement . ELSE statement
    (90) controlEstructure -> IF LPAREN expression RPAREN statement .
    (91) controlEstructure -> IF LPAREN expression RPAREN statement . ELSE statement
    (92) controlEstructure -> IF LPAREN expression RPAREN statement . ELSE IF LPAREN expression RPAREN statement
    (93) controlEstructure -> IF LPAREN expression RPAREN statement . ELSE IF LPAREN expression RPAREN statement ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! reduce/reduce conflict for LET resolved using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for CONST resolved using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for ASYNC resolved using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for ENUM resolved using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for IF resolved using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for SWITCH resolved using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for WHILE resolved using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for FOR resolved using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for CLASS resolved using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for LBRACE resolved using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for RETURN resolved using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for PROMPT resolved using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for NOT resolved using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for LPAREN resolved using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for NUMBER resolved using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for FLOAT resolved using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for STRING resolved using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for TRUE resolved using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for FALSE resolved using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for PLUSPLUS resolved using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for MINUSMINUS resolved using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for VAR resolved using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for $end resolved using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for RBRACE resolved using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for CASE resolved using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for DEFAULT resolved using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 343
    LET             reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    FUNCTION        reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    CONST           reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    ASYNC           reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    ENUM            reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    IF              reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    SWITCH          reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    FOR             reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    CLASS           reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    INTERFACE       reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    IDENTIFIER      reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    LBRACKET        reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    PROMPT          reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    NOT             reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    NUMBER          reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    FLOAT           reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    STRING          reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    TRUE            reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    FALSE           reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    PLUSPLUS        reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    MINUSMINUS      reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    CONSOLE         reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    VAR             reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    $end            reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    CASE            reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    DEFAULT         reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .)

  ! LET             [ reduce using rule 92 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! FUNCTION        [ reduce using rule 92 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! CONST           [ reduce using rule 92 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! ASYNC           [ reduce using rule 92 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! ENUM            [ reduce using rule 92 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! IF              [ reduce using rule 92 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! SWITCH          [ reduce using rule 92 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! WHILE           [ reduce using rule 92 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! FOR             [ reduce using rule 92 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! CLASS           [ reduce using rule 92 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! LBRACE          [ reduce using rule 92 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! RETURN          [ reduce using rule 92 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! INTERFACE       [ reduce using rule 92 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! IDENTIFIER      [ reduce using rule 92 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! LBRACKET        [ reduce using rule 92 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! PROMPT          [ reduce using rule 92 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! NOT             [ reduce using rule 92 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! LPAREN          [ reduce using rule 92 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! NUMBER          [ reduce using rule 92 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! FLOAT           [ reduce using rule 92 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! STRING          [ reduce using rule 92 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! TRUE            [ reduce using rule 92 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! FALSE           [ reduce using rule 92 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! PLUSPLUS        [ reduce using rule 92 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! MINUSMINUS      [ reduce using rule 92 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! CONSOLE         [ reduce using rule 92 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! VAR             [ reduce using rule 92 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! $end            [ reduce using rule 92 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! RBRACE          [ reduce using rule 92 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! ELSE            [ reduce using rule 92 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! CASE            [ reduce using rule 92 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! DEFAULT         [ reduce using rule 92 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! ELSE            [ reduce using rule 90 (controlEstructure -> IF LPAREN expression RPAREN statement .) ]


state 343

    (93) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE . statement
    (91) controlEstructure -> IF LPAREN expression RPAREN statement ELSE . statement
    (92) controlEstructure -> IF LPAREN expression RPAREN statement ELSE . IF LPAREN expression RPAREN statement
    (93) controlEstructure -> IF LPAREN expression RPAREN statement ELSE . IF LPAREN expression RPAREN statement ELSE statement
    (94) statement -> . LBRACE instruction_list RBRACE
    (95) statement -> . letAssignment
    (96) statement -> . varAssignment
    (97) statement -> . constAssignment
    (98) statement -> . declaracion
    (99) statement -> . function
    (100) statement -> . arrow_function
    (101) statement -> . async_function
    (102) statement -> . consolelog
    (103) statement -> . expression SEMICOLON
    (104) statement -> . controlEstructure
    (105) statement -> . RETURN expression SEMICOLON
    (106) statement -> . forEstructure
    (107) statement -> . RETURN SEMICOLON
    (108) statement -> . class_definition
    (19) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (20) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (134) varAssignment -> . VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
    (135) varAssignment -> . VAR IDENTIFIER EQUAL expression SEMICOLON
    (113) constAssignment -> . CONST IDENTIFIER COLON type EQUAL expression SEMICOLON
    (114) constAssignment -> . CONST IDENTIFIER EQUAL expression SEMICOLON
    (21) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (38) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (136) arrow_function -> . CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (132) async_function -> . ASYNC FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (89) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (45) expression -> . LBRACKET expression COMMA expression RBRACKET
    (52) expression -> . expression PLUS expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression TIMES expression
    (55) expression -> . expression DIV expression
    (56) expression -> . expression MOD expression
    (57) expression -> . expression PLUS_ASSIGN expression
    (58) expression -> . expression MINUS_ASSIGN expression
    (59) expression -> . expression MULT_ASSIGN expression
    (60) expression -> . expression DIV_ASSIGN expression
    (61) expression -> . expression MOD_ASSIGN expression
    (62) expression -> . expression POT expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression OR expression
    (65) expression -> . expression EQ expression
    (66) expression -> . expression NEQ expression
    (67) expression -> . expression STRICT_EQ expression
    (68) expression -> . expression STRICT_NEQ expression
    (69) expression -> . expression LT expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression GE expression
    (73) expression -> . PROMPT LPAREN STRING RPAREN
    (74) expression -> . NOT expression
    (75) expression -> . LPAREN expression RPAREN
    (76) expression -> . expression DOT IDENTIFIER
    (77) expression -> . expression LBRACKET expression RBRACKET
    (78) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (79) expression -> . NUMBER
    (80) expression -> . FLOAT
    (81) expression -> . STRING
    (82) expression -> . IDENTIFIER
    (83) expression -> . TRUE
    (84) expression -> . FALSE
    (85) expression -> . expression PLUSPLUS
    (86) expression -> . expression MINUSMINUS
    (87) expression -> . PLUSPLUS expression
    (88) expression -> . MINUSMINUS expression
    (142) expression -> . LBRACE object_properties RBRACE
    (90) controlEstructure -> . IF LPAREN expression RPAREN statement
    (91) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (92) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (93) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (123) controlEstructure -> . SWITCH LPAREN expression RPAREN LBRACE case_block RBRACE
    (133) controlEstructure -> . WHILE LPAREN expression RPAREN statement
    (26) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (27) forEstructure -> . FOR LPAREN CONST IDENTIFIER OF IDENTIFIER RPAREN statement
    (115) class_definition -> . CLASS IDENTIFIER LBRACE class_body RBRACE

    IF              shift and go to state 291
    LBRACE          shift and go to state 23
    RETURN          shift and go to state 33
    LET             shift and go to state 18
    VAR             shift and go to state 45
    CONST           shift and go to state 98
    FUNCTION        shift and go to state 21
    ASYNC           shift and go to state 25
    CONSOLE         shift and go to state 44
    LBRACKET        shift and go to state 20
    PROMPT          shift and go to state 35
    NOT             shift and go to state 37
    LPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 36
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    PLUSPLUS        shift and go to state 42
    MINUSMINUS      shift and go to state 43
    SWITCH          shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    CLASS           shift and go to state 31

    expression                     shift and go to state 93
    statement                      shift and go to state 344
    letAssignment                  shift and go to state 86
    varAssignment                  shift and go to state 32
    constAssignment                shift and go to state 87
    declaracion                    shift and go to state 88
    function                       shift and go to state 89
    arrow_function                 shift and go to state 90
    async_function                 shift and go to state 91
    consolelog                     shift and go to state 92
    controlEstructure              shift and go to state 94
    forEstructure                  shift and go to state 95
    class_definition               shift and go to state 96

state 344

    (93) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .
    (91) controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .

  ! reduce/reduce conflict for ELSE resolved using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for LET resolved using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for CONST resolved using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for ASYNC resolved using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for ENUM resolved using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for IF resolved using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for SWITCH resolved using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for WHILE resolved using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for FOR resolved using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for CLASS resolved using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for LBRACE resolved using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for RETURN resolved using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for PROMPT resolved using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for NOT resolved using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for LPAREN resolved using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for NUMBER resolved using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for FLOAT resolved using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for STRING resolved using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for TRUE resolved using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for FALSE resolved using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for PLUSPLUS resolved using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for MINUSMINUS resolved using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for VAR resolved using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for $end resolved using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for RBRACE resolved using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for CASE resolved using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for DEFAULT resolved using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSE            reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    LET             reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    FUNCTION        reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    CONST           reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    ASYNC           reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    ENUM            reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    IF              reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    SWITCH          reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    WHILE           reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    FOR             reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    CLASS           reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    LBRACE          reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    RETURN          reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    INTERFACE       reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    IDENTIFIER      reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    LBRACKET        reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    PROMPT          reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    NOT             reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    LPAREN          reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    NUMBER          reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    FLOAT           reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    STRING          reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    TRUE            reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    FALSE           reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    PLUSPLUS        reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    MINUSMINUS      reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    CONSOLE         reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    VAR             reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    $end            reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    RBRACE          reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    CASE            reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    DEFAULT         reduce using rule 91 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)

  ! LET             [ reduce using rule 93 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! FUNCTION        [ reduce using rule 93 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! CONST           [ reduce using rule 93 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! ASYNC           [ reduce using rule 93 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! ENUM            [ reduce using rule 93 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! IF              [ reduce using rule 93 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! SWITCH          [ reduce using rule 93 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! WHILE           [ reduce using rule 93 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! FOR             [ reduce using rule 93 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! CLASS           [ reduce using rule 93 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! LBRACE          [ reduce using rule 93 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! RETURN          [ reduce using rule 93 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! INTERFACE       [ reduce using rule 93 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! IDENTIFIER      [ reduce using rule 93 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! LBRACKET        [ reduce using rule 93 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! PROMPT          [ reduce using rule 93 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! NOT             [ reduce using rule 93 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! LPAREN          [ reduce using rule 93 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! NUMBER          [ reduce using rule 93 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! FLOAT           [ reduce using rule 93 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! STRING          [ reduce using rule 93 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! TRUE            [ reduce using rule 93 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! FALSE           [ reduce using rule 93 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! PLUSPLUS        [ reduce using rule 93 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! MINUSMINUS      [ reduce using rule 93 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! CONSOLE         [ reduce using rule 93 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! VAR             [ reduce using rule 93 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! $end            [ reduce using rule 93 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! RBRACE          [ reduce using rule 93 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! ELSE            [ reduce using rule 93 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! CASE            [ reduce using rule 93 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! DEFAULT         [ reduce using rule 93 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LBRACE in state 23 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 23 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 23 resolved as shift
WARNING: shift/reduce conflict for LET in state 23 resolved as shift
WARNING: shift/reduce conflict for VAR in state 23 resolved as shift
WARNING: shift/reduce conflict for CONST in state 23 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 23 resolved as shift
WARNING: shift/reduce conflict for ASYNC in state 23 resolved as shift
WARNING: shift/reduce conflict for CONSOLE in state 23 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 23 resolved as shift
WARNING: shift/reduce conflict for PROMPT in state 23 resolved as shift
WARNING: shift/reduce conflict for NOT in state 23 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 23 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 23 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 23 resolved as shift
WARNING: shift/reduce conflict for STRING in state 23 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 23 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 23 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 23 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 23 resolved as shift
WARNING: shift/reduce conflict for IF in state 23 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 23 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 23 resolved as shift
WARNING: shift/reduce conflict for FOR in state 23 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 23 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 111 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 111 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 111 resolved as shift
WARNING: shift/reduce conflict for DIV in state 111 resolved as shift
WARNING: shift/reduce conflict for MOD in state 111 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 111 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 111 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 111 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 111 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 111 resolved as shift
WARNING: shift/reduce conflict for POT in state 111 resolved as shift
WARNING: shift/reduce conflict for AND in state 111 resolved as shift
WARNING: shift/reduce conflict for OR in state 111 resolved as shift
WARNING: shift/reduce conflict for EQ in state 111 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 111 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 111 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 111 resolved as shift
WARNING: shift/reduce conflict for LT in state 111 resolved as shift
WARNING: shift/reduce conflict for GT in state 111 resolved as shift
WARNING: shift/reduce conflict for LE in state 111 resolved as shift
WARNING: shift/reduce conflict for GE in state 111 resolved as shift
WARNING: shift/reduce conflict for DOT in state 111 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 111 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 111 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 111 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 112 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 112 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 112 resolved as shift
WARNING: shift/reduce conflict for DIV in state 112 resolved as shift
WARNING: shift/reduce conflict for MOD in state 112 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 112 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 112 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 112 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 112 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 112 resolved as shift
WARNING: shift/reduce conflict for POT in state 112 resolved as shift
WARNING: shift/reduce conflict for AND in state 112 resolved as shift
WARNING: shift/reduce conflict for OR in state 112 resolved as shift
WARNING: shift/reduce conflict for EQ in state 112 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 112 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 112 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 112 resolved as shift
WARNING: shift/reduce conflict for LT in state 112 resolved as shift
WARNING: shift/reduce conflict for GT in state 112 resolved as shift
WARNING: shift/reduce conflict for LE in state 112 resolved as shift
WARNING: shift/reduce conflict for GE in state 112 resolved as shift
WARNING: shift/reduce conflict for DOT in state 112 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 112 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 112 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 112 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 113 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 113 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 113 resolved as shift
WARNING: shift/reduce conflict for DIV in state 113 resolved as shift
WARNING: shift/reduce conflict for MOD in state 113 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 113 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 113 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 113 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 113 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 113 resolved as shift
WARNING: shift/reduce conflict for POT in state 113 resolved as shift
WARNING: shift/reduce conflict for AND in state 113 resolved as shift
WARNING: shift/reduce conflict for OR in state 113 resolved as shift
WARNING: shift/reduce conflict for EQ in state 113 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 113 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 113 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 113 resolved as shift
WARNING: shift/reduce conflict for LT in state 113 resolved as shift
WARNING: shift/reduce conflict for GT in state 113 resolved as shift
WARNING: shift/reduce conflict for LE in state 113 resolved as shift
WARNING: shift/reduce conflict for GE in state 113 resolved as shift
WARNING: shift/reduce conflict for DOT in state 113 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 113 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 113 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 113 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 116 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 116 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 116 resolved as shift
WARNING: shift/reduce conflict for DIV in state 116 resolved as shift
WARNING: shift/reduce conflict for MOD in state 116 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 116 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 116 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 116 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 116 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 116 resolved as shift
WARNING: shift/reduce conflict for POT in state 116 resolved as shift
WARNING: shift/reduce conflict for AND in state 116 resolved as shift
WARNING: shift/reduce conflict for OR in state 116 resolved as shift
WARNING: shift/reduce conflict for EQ in state 116 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 116 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 116 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 116 resolved as shift
WARNING: shift/reduce conflict for LT in state 116 resolved as shift
WARNING: shift/reduce conflict for GT in state 116 resolved as shift
WARNING: shift/reduce conflict for LE in state 116 resolved as shift
WARNING: shift/reduce conflict for GE in state 116 resolved as shift
WARNING: shift/reduce conflict for DOT in state 116 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 116 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 116 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 116 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 117 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 117 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 117 resolved as shift
WARNING: shift/reduce conflict for DIV in state 117 resolved as shift
WARNING: shift/reduce conflict for MOD in state 117 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 117 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 117 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 117 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 117 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 117 resolved as shift
WARNING: shift/reduce conflict for POT in state 117 resolved as shift
WARNING: shift/reduce conflict for AND in state 117 resolved as shift
WARNING: shift/reduce conflict for OR in state 117 resolved as shift
WARNING: shift/reduce conflict for EQ in state 117 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 117 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 117 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 117 resolved as shift
WARNING: shift/reduce conflict for LT in state 117 resolved as shift
WARNING: shift/reduce conflict for GT in state 117 resolved as shift
WARNING: shift/reduce conflict for LE in state 117 resolved as shift
WARNING: shift/reduce conflict for GE in state 117 resolved as shift
WARNING: shift/reduce conflict for DOT in state 117 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 117 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 117 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 117 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 118 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 118 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 118 resolved as shift
WARNING: shift/reduce conflict for DIV in state 118 resolved as shift
WARNING: shift/reduce conflict for MOD in state 118 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 118 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 118 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 118 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 118 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 118 resolved as shift
WARNING: shift/reduce conflict for POT in state 118 resolved as shift
WARNING: shift/reduce conflict for AND in state 118 resolved as shift
WARNING: shift/reduce conflict for OR in state 118 resolved as shift
WARNING: shift/reduce conflict for EQ in state 118 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 118 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 118 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 118 resolved as shift
WARNING: shift/reduce conflict for LT in state 118 resolved as shift
WARNING: shift/reduce conflict for GT in state 118 resolved as shift
WARNING: shift/reduce conflict for LE in state 118 resolved as shift
WARNING: shift/reduce conflict for GE in state 118 resolved as shift
WARNING: shift/reduce conflict for DOT in state 118 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 118 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 118 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 118 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 119 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 119 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 119 resolved as shift
WARNING: shift/reduce conflict for DIV in state 119 resolved as shift
WARNING: shift/reduce conflict for MOD in state 119 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 119 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 119 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 119 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 119 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 119 resolved as shift
WARNING: shift/reduce conflict for POT in state 119 resolved as shift
WARNING: shift/reduce conflict for AND in state 119 resolved as shift
WARNING: shift/reduce conflict for OR in state 119 resolved as shift
WARNING: shift/reduce conflict for EQ in state 119 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 119 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 119 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 119 resolved as shift
WARNING: shift/reduce conflict for LT in state 119 resolved as shift
WARNING: shift/reduce conflict for GT in state 119 resolved as shift
WARNING: shift/reduce conflict for LE in state 119 resolved as shift
WARNING: shift/reduce conflict for GE in state 119 resolved as shift
WARNING: shift/reduce conflict for DOT in state 119 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 119 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 119 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 119 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 120 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 120 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 120 resolved as shift
WARNING: shift/reduce conflict for DIV in state 120 resolved as shift
WARNING: shift/reduce conflict for MOD in state 120 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 120 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 120 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 120 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 120 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 120 resolved as shift
WARNING: shift/reduce conflict for POT in state 120 resolved as shift
WARNING: shift/reduce conflict for AND in state 120 resolved as shift
WARNING: shift/reduce conflict for OR in state 120 resolved as shift
WARNING: shift/reduce conflict for EQ in state 120 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 120 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 120 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 120 resolved as shift
WARNING: shift/reduce conflict for LT in state 120 resolved as shift
WARNING: shift/reduce conflict for GT in state 120 resolved as shift
WARNING: shift/reduce conflict for LE in state 120 resolved as shift
WARNING: shift/reduce conflict for GE in state 120 resolved as shift
WARNING: shift/reduce conflict for DOT in state 120 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 120 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 120 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 120 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 121 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 121 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 121 resolved as shift
WARNING: shift/reduce conflict for DIV in state 121 resolved as shift
WARNING: shift/reduce conflict for MOD in state 121 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 121 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 121 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 121 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 121 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 121 resolved as shift
WARNING: shift/reduce conflict for POT in state 121 resolved as shift
WARNING: shift/reduce conflict for AND in state 121 resolved as shift
WARNING: shift/reduce conflict for OR in state 121 resolved as shift
WARNING: shift/reduce conflict for EQ in state 121 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 121 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 121 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 121 resolved as shift
WARNING: shift/reduce conflict for LT in state 121 resolved as shift
WARNING: shift/reduce conflict for GT in state 121 resolved as shift
WARNING: shift/reduce conflict for LE in state 121 resolved as shift
WARNING: shift/reduce conflict for GE in state 121 resolved as shift
WARNING: shift/reduce conflict for DOT in state 121 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 121 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 121 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 121 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 122 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 122 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 122 resolved as shift
WARNING: shift/reduce conflict for DIV in state 122 resolved as shift
WARNING: shift/reduce conflict for MOD in state 122 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 122 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 122 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 122 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 122 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 122 resolved as shift
WARNING: shift/reduce conflict for POT in state 122 resolved as shift
WARNING: shift/reduce conflict for AND in state 122 resolved as shift
WARNING: shift/reduce conflict for OR in state 122 resolved as shift
WARNING: shift/reduce conflict for EQ in state 122 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 122 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 122 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 122 resolved as shift
WARNING: shift/reduce conflict for LT in state 122 resolved as shift
WARNING: shift/reduce conflict for GT in state 122 resolved as shift
WARNING: shift/reduce conflict for LE in state 122 resolved as shift
WARNING: shift/reduce conflict for GE in state 122 resolved as shift
WARNING: shift/reduce conflict for DOT in state 122 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 122 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 122 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 122 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 123 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 123 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 123 resolved as shift
WARNING: shift/reduce conflict for DIV in state 123 resolved as shift
WARNING: shift/reduce conflict for MOD in state 123 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 123 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 123 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 123 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 123 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 123 resolved as shift
WARNING: shift/reduce conflict for POT in state 123 resolved as shift
WARNING: shift/reduce conflict for AND in state 123 resolved as shift
WARNING: shift/reduce conflict for OR in state 123 resolved as shift
WARNING: shift/reduce conflict for EQ in state 123 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 123 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 123 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 123 resolved as shift
WARNING: shift/reduce conflict for LT in state 123 resolved as shift
WARNING: shift/reduce conflict for GT in state 123 resolved as shift
WARNING: shift/reduce conflict for LE in state 123 resolved as shift
WARNING: shift/reduce conflict for GE in state 123 resolved as shift
WARNING: shift/reduce conflict for DOT in state 123 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 123 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 123 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 123 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 124 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 124 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 124 resolved as shift
WARNING: shift/reduce conflict for DIV in state 124 resolved as shift
WARNING: shift/reduce conflict for MOD in state 124 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 124 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 124 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 124 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 124 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 124 resolved as shift
WARNING: shift/reduce conflict for POT in state 124 resolved as shift
WARNING: shift/reduce conflict for AND in state 124 resolved as shift
WARNING: shift/reduce conflict for OR in state 124 resolved as shift
WARNING: shift/reduce conflict for EQ in state 124 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 124 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 124 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 124 resolved as shift
WARNING: shift/reduce conflict for LT in state 124 resolved as shift
WARNING: shift/reduce conflict for GT in state 124 resolved as shift
WARNING: shift/reduce conflict for LE in state 124 resolved as shift
WARNING: shift/reduce conflict for GE in state 124 resolved as shift
WARNING: shift/reduce conflict for DOT in state 124 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 124 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 124 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 124 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 125 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 125 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 125 resolved as shift
WARNING: shift/reduce conflict for DIV in state 125 resolved as shift
WARNING: shift/reduce conflict for MOD in state 125 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 125 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 125 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 125 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 125 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 125 resolved as shift
WARNING: shift/reduce conflict for POT in state 125 resolved as shift
WARNING: shift/reduce conflict for AND in state 125 resolved as shift
WARNING: shift/reduce conflict for OR in state 125 resolved as shift
WARNING: shift/reduce conflict for EQ in state 125 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 125 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 125 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 125 resolved as shift
WARNING: shift/reduce conflict for LT in state 125 resolved as shift
WARNING: shift/reduce conflict for GT in state 125 resolved as shift
WARNING: shift/reduce conflict for LE in state 125 resolved as shift
WARNING: shift/reduce conflict for GE in state 125 resolved as shift
WARNING: shift/reduce conflict for DOT in state 125 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 125 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 125 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 125 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 126 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 126 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 126 resolved as shift
WARNING: shift/reduce conflict for DIV in state 126 resolved as shift
WARNING: shift/reduce conflict for MOD in state 126 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 126 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 126 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 126 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 126 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 126 resolved as shift
WARNING: shift/reduce conflict for POT in state 126 resolved as shift
WARNING: shift/reduce conflict for AND in state 126 resolved as shift
WARNING: shift/reduce conflict for OR in state 126 resolved as shift
WARNING: shift/reduce conflict for EQ in state 126 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 126 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 126 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 126 resolved as shift
WARNING: shift/reduce conflict for LT in state 126 resolved as shift
WARNING: shift/reduce conflict for GT in state 126 resolved as shift
WARNING: shift/reduce conflict for LE in state 126 resolved as shift
WARNING: shift/reduce conflict for GE in state 126 resolved as shift
WARNING: shift/reduce conflict for DOT in state 126 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 126 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 126 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 126 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 127 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 127 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 127 resolved as shift
WARNING: shift/reduce conflict for DIV in state 127 resolved as shift
WARNING: shift/reduce conflict for MOD in state 127 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 127 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 127 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 127 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 127 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 127 resolved as shift
WARNING: shift/reduce conflict for POT in state 127 resolved as shift
WARNING: shift/reduce conflict for AND in state 127 resolved as shift
WARNING: shift/reduce conflict for OR in state 127 resolved as shift
WARNING: shift/reduce conflict for EQ in state 127 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 127 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 127 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 127 resolved as shift
WARNING: shift/reduce conflict for LT in state 127 resolved as shift
WARNING: shift/reduce conflict for GT in state 127 resolved as shift
WARNING: shift/reduce conflict for LE in state 127 resolved as shift
WARNING: shift/reduce conflict for GE in state 127 resolved as shift
WARNING: shift/reduce conflict for DOT in state 127 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 127 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 127 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 127 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 128 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 128 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 128 resolved as shift
WARNING: shift/reduce conflict for DIV in state 128 resolved as shift
WARNING: shift/reduce conflict for MOD in state 128 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 128 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 128 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 128 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 128 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 128 resolved as shift
WARNING: shift/reduce conflict for POT in state 128 resolved as shift
WARNING: shift/reduce conflict for AND in state 128 resolved as shift
WARNING: shift/reduce conflict for OR in state 128 resolved as shift
WARNING: shift/reduce conflict for EQ in state 128 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 128 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 128 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 128 resolved as shift
WARNING: shift/reduce conflict for LT in state 128 resolved as shift
WARNING: shift/reduce conflict for GT in state 128 resolved as shift
WARNING: shift/reduce conflict for LE in state 128 resolved as shift
WARNING: shift/reduce conflict for GE in state 128 resolved as shift
WARNING: shift/reduce conflict for DOT in state 128 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 128 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 128 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 128 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 129 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 129 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 129 resolved as shift
WARNING: shift/reduce conflict for DIV in state 129 resolved as shift
WARNING: shift/reduce conflict for MOD in state 129 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 129 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 129 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 129 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 129 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 129 resolved as shift
WARNING: shift/reduce conflict for POT in state 129 resolved as shift
WARNING: shift/reduce conflict for AND in state 129 resolved as shift
WARNING: shift/reduce conflict for OR in state 129 resolved as shift
WARNING: shift/reduce conflict for EQ in state 129 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 129 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 129 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 129 resolved as shift
WARNING: shift/reduce conflict for LT in state 129 resolved as shift
WARNING: shift/reduce conflict for GT in state 129 resolved as shift
WARNING: shift/reduce conflict for LE in state 129 resolved as shift
WARNING: shift/reduce conflict for GE in state 129 resolved as shift
WARNING: shift/reduce conflict for DOT in state 129 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 129 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 129 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 129 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 130 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 130 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 130 resolved as shift
WARNING: shift/reduce conflict for DIV in state 130 resolved as shift
WARNING: shift/reduce conflict for MOD in state 130 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 130 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 130 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 130 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 130 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 130 resolved as shift
WARNING: shift/reduce conflict for POT in state 130 resolved as shift
WARNING: shift/reduce conflict for AND in state 130 resolved as shift
WARNING: shift/reduce conflict for OR in state 130 resolved as shift
WARNING: shift/reduce conflict for EQ in state 130 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 130 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 130 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 130 resolved as shift
WARNING: shift/reduce conflict for LT in state 130 resolved as shift
WARNING: shift/reduce conflict for GT in state 130 resolved as shift
WARNING: shift/reduce conflict for LE in state 130 resolved as shift
WARNING: shift/reduce conflict for GE in state 130 resolved as shift
WARNING: shift/reduce conflict for DOT in state 130 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 130 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 130 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 130 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 131 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 131 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 131 resolved as shift
WARNING: shift/reduce conflict for DIV in state 131 resolved as shift
WARNING: shift/reduce conflict for MOD in state 131 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 131 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 131 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 131 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 131 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 131 resolved as shift
WARNING: shift/reduce conflict for POT in state 131 resolved as shift
WARNING: shift/reduce conflict for AND in state 131 resolved as shift
WARNING: shift/reduce conflict for OR in state 131 resolved as shift
WARNING: shift/reduce conflict for EQ in state 131 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 131 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 131 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 131 resolved as shift
WARNING: shift/reduce conflict for LT in state 131 resolved as shift
WARNING: shift/reduce conflict for GT in state 131 resolved as shift
WARNING: shift/reduce conflict for LE in state 131 resolved as shift
WARNING: shift/reduce conflict for GE in state 131 resolved as shift
WARNING: shift/reduce conflict for DOT in state 131 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 131 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 131 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 131 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 132 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 132 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 132 resolved as shift
WARNING: shift/reduce conflict for DIV in state 132 resolved as shift
WARNING: shift/reduce conflict for MOD in state 132 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 132 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 132 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 132 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 132 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 132 resolved as shift
WARNING: shift/reduce conflict for POT in state 132 resolved as shift
WARNING: shift/reduce conflict for AND in state 132 resolved as shift
WARNING: shift/reduce conflict for OR in state 132 resolved as shift
WARNING: shift/reduce conflict for EQ in state 132 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 132 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 132 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 132 resolved as shift
WARNING: shift/reduce conflict for LT in state 132 resolved as shift
WARNING: shift/reduce conflict for GT in state 132 resolved as shift
WARNING: shift/reduce conflict for LE in state 132 resolved as shift
WARNING: shift/reduce conflict for GE in state 132 resolved as shift
WARNING: shift/reduce conflict for DOT in state 132 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 132 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 132 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 132 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 133 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 133 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 133 resolved as shift
WARNING: shift/reduce conflict for DIV in state 133 resolved as shift
WARNING: shift/reduce conflict for MOD in state 133 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 133 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 133 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 133 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 133 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 133 resolved as shift
WARNING: shift/reduce conflict for POT in state 133 resolved as shift
WARNING: shift/reduce conflict for AND in state 133 resolved as shift
WARNING: shift/reduce conflict for OR in state 133 resolved as shift
WARNING: shift/reduce conflict for EQ in state 133 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 133 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 133 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 133 resolved as shift
WARNING: shift/reduce conflict for LT in state 133 resolved as shift
WARNING: shift/reduce conflict for GT in state 133 resolved as shift
WARNING: shift/reduce conflict for LE in state 133 resolved as shift
WARNING: shift/reduce conflict for GE in state 133 resolved as shift
WARNING: shift/reduce conflict for DOT in state 133 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 133 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 133 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 133 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 134 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 134 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 134 resolved as shift
WARNING: shift/reduce conflict for DIV in state 134 resolved as shift
WARNING: shift/reduce conflict for MOD in state 134 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 134 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 134 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 134 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 134 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 134 resolved as shift
WARNING: shift/reduce conflict for POT in state 134 resolved as shift
WARNING: shift/reduce conflict for AND in state 134 resolved as shift
WARNING: shift/reduce conflict for OR in state 134 resolved as shift
WARNING: shift/reduce conflict for EQ in state 134 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 134 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 134 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 134 resolved as shift
WARNING: shift/reduce conflict for LT in state 134 resolved as shift
WARNING: shift/reduce conflict for GT in state 134 resolved as shift
WARNING: shift/reduce conflict for LE in state 134 resolved as shift
WARNING: shift/reduce conflict for GE in state 134 resolved as shift
WARNING: shift/reduce conflict for DOT in state 134 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 134 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 134 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 134 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 135 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 135 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 135 resolved as shift
WARNING: shift/reduce conflict for DIV in state 135 resolved as shift
WARNING: shift/reduce conflict for MOD in state 135 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 135 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 135 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 135 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 135 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 135 resolved as shift
WARNING: shift/reduce conflict for POT in state 135 resolved as shift
WARNING: shift/reduce conflict for AND in state 135 resolved as shift
WARNING: shift/reduce conflict for OR in state 135 resolved as shift
WARNING: shift/reduce conflict for EQ in state 135 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 135 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 135 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 135 resolved as shift
WARNING: shift/reduce conflict for LT in state 135 resolved as shift
WARNING: shift/reduce conflict for GT in state 135 resolved as shift
WARNING: shift/reduce conflict for LE in state 135 resolved as shift
WARNING: shift/reduce conflict for GE in state 135 resolved as shift
WARNING: shift/reduce conflict for DOT in state 135 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 135 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 135 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 135 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 136 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 136 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 136 resolved as shift
WARNING: shift/reduce conflict for DIV in state 136 resolved as shift
WARNING: shift/reduce conflict for MOD in state 136 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 136 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 136 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 136 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 136 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 136 resolved as shift
WARNING: shift/reduce conflict for POT in state 136 resolved as shift
WARNING: shift/reduce conflict for AND in state 136 resolved as shift
WARNING: shift/reduce conflict for OR in state 136 resolved as shift
WARNING: shift/reduce conflict for EQ in state 136 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 136 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 136 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 136 resolved as shift
WARNING: shift/reduce conflict for LT in state 136 resolved as shift
WARNING: shift/reduce conflict for GT in state 136 resolved as shift
WARNING: shift/reduce conflict for LE in state 136 resolved as shift
WARNING: shift/reduce conflict for GE in state 136 resolved as shift
WARNING: shift/reduce conflict for DOT in state 136 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 136 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 136 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 136 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 170 resolved as shift
WARNING: shift/reduce conflict for LET in state 170 resolved as shift
WARNING: shift/reduce conflict for VAR in state 170 resolved as shift
WARNING: shift/reduce conflict for CONST in state 170 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 172 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 241 resolved as shift
WARNING: shift/reduce conflict for CASE in state 242 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 242 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 259 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 296 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 296 resolved as shift
WARNING: shift/reduce conflict for LET in state 296 resolved as shift
WARNING: shift/reduce conflict for VAR in state 296 resolved as shift
WARNING: shift/reduce conflict for CONST in state 296 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 296 resolved as shift
WARNING: shift/reduce conflict for ASYNC in state 296 resolved as shift
WARNING: shift/reduce conflict for CONSOLE in state 296 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 296 resolved as shift
WARNING: shift/reduce conflict for PROMPT in state 296 resolved as shift
WARNING: shift/reduce conflict for NOT in state 296 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 296 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 296 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 296 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 296 resolved as shift
WARNING: shift/reduce conflict for STRING in state 296 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 296 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 296 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 296 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 296 resolved as shift
WARNING: shift/reduce conflict for IF in state 296 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 296 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 296 resolved as shift
WARNING: shift/reduce conflict for FOR in state 296 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 296 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 311 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 311 resolved as shift
WARNING: shift/reduce conflict for LET in state 311 resolved as shift
WARNING: shift/reduce conflict for VAR in state 311 resolved as shift
WARNING: shift/reduce conflict for CONST in state 311 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 311 resolved as shift
WARNING: shift/reduce conflict for ASYNC in state 311 resolved as shift
WARNING: shift/reduce conflict for CONSOLE in state 311 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 311 resolved as shift
WARNING: shift/reduce conflict for PROMPT in state 311 resolved as shift
WARNING: shift/reduce conflict for NOT in state 311 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 311 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 311 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 311 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 311 resolved as shift
WARNING: shift/reduce conflict for STRING in state 311 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 311 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 311 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 311 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 311 resolved as shift
WARNING: shift/reduce conflict for IF in state 311 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 311 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 311 resolved as shift
WARNING: shift/reduce conflict for FOR in state 311 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 311 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 312 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 312 resolved as shift
WARNING: shift/reduce conflict for LET in state 312 resolved as shift
WARNING: shift/reduce conflict for VAR in state 312 resolved as shift
WARNING: shift/reduce conflict for CONST in state 312 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 312 resolved as shift
WARNING: shift/reduce conflict for ASYNC in state 312 resolved as shift
WARNING: shift/reduce conflict for CONSOLE in state 312 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 312 resolved as shift
WARNING: shift/reduce conflict for PROMPT in state 312 resolved as shift
WARNING: shift/reduce conflict for NOT in state 312 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 312 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 312 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 312 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 312 resolved as shift
WARNING: shift/reduce conflict for STRING in state 312 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 312 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 312 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 312 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 312 resolved as shift
WARNING: shift/reduce conflict for IF in state 312 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 312 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 312 resolved as shift
WARNING: shift/reduce conflict for FOR in state 312 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 312 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 315 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 315 resolved as shift
WARNING: shift/reduce conflict for LET in state 315 resolved as shift
WARNING: shift/reduce conflict for VAR in state 315 resolved as shift
WARNING: shift/reduce conflict for CONST in state 315 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 315 resolved as shift
WARNING: shift/reduce conflict for ASYNC in state 315 resolved as shift
WARNING: shift/reduce conflict for CONSOLE in state 315 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 315 resolved as shift
WARNING: shift/reduce conflict for PROMPT in state 315 resolved as shift
WARNING: shift/reduce conflict for NOT in state 315 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 315 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 315 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 315 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 315 resolved as shift
WARNING: shift/reduce conflict for STRING in state 315 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 315 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 315 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 315 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 315 resolved as shift
WARNING: shift/reduce conflict for IF in state 315 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 315 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 315 resolved as shift
WARNING: shift/reduce conflict for FOR in state 315 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 315 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 321 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 321 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 321 resolved as shift
WARNING: shift/reduce conflict for DIV in state 321 resolved as shift
WARNING: shift/reduce conflict for MOD in state 321 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 321 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 321 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 321 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 321 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 321 resolved as shift
WARNING: shift/reduce conflict for POT in state 321 resolved as shift
WARNING: shift/reduce conflict for AND in state 321 resolved as shift
WARNING: shift/reduce conflict for OR in state 321 resolved as shift
WARNING: shift/reduce conflict for EQ in state 321 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 321 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 321 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 321 resolved as shift
WARNING: shift/reduce conflict for LT in state 321 resolved as shift
WARNING: shift/reduce conflict for GT in state 321 resolved as shift
WARNING: shift/reduce conflict for LE in state 321 resolved as shift
WARNING: shift/reduce conflict for GE in state 321 resolved as shift
WARNING: shift/reduce conflict for DOT in state 321 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 321 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 321 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 321 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 322 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 322 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 322 resolved as shift
WARNING: shift/reduce conflict for DIV in state 322 resolved as shift
WARNING: shift/reduce conflict for MOD in state 322 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 322 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 322 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 322 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 322 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 322 resolved as shift
WARNING: shift/reduce conflict for POT in state 322 resolved as shift
WARNING: shift/reduce conflict for AND in state 322 resolved as shift
WARNING: shift/reduce conflict for OR in state 322 resolved as shift
WARNING: shift/reduce conflict for EQ in state 322 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 322 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 322 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 322 resolved as shift
WARNING: shift/reduce conflict for LT in state 322 resolved as shift
WARNING: shift/reduce conflict for GT in state 322 resolved as shift
WARNING: shift/reduce conflict for LE in state 322 resolved as shift
WARNING: shift/reduce conflict for GE in state 322 resolved as shift
WARNING: shift/reduce conflict for DOT in state 322 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 322 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 322 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 322 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 330 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 330 resolved as shift
WARNING: shift/reduce conflict for LET in state 330 resolved as shift
WARNING: shift/reduce conflict for VAR in state 330 resolved as shift
WARNING: shift/reduce conflict for CONST in state 330 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 330 resolved as shift
WARNING: shift/reduce conflict for ASYNC in state 330 resolved as shift
WARNING: shift/reduce conflict for CONSOLE in state 330 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 330 resolved as shift
WARNING: shift/reduce conflict for PROMPT in state 330 resolved as shift
WARNING: shift/reduce conflict for NOT in state 330 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 330 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 330 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 330 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 330 resolved as shift
WARNING: shift/reduce conflict for STRING in state 330 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 330 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 330 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 330 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 330 resolved as shift
WARNING: shift/reduce conflict for IF in state 330 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 330 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 330 resolved as shift
WARNING: shift/reduce conflict for FOR in state 330 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 330 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 342 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 342 resolved as shift
WARNING: reduce/reduce conflict in state 3 resolved using rule (element -> letAssignment)
WARNING: rejected rule (statement -> letAssignment) in state 3
WARNING: reduce/reduce conflict in state 4 resolved using rule (element -> declaracion)
WARNING: rejected rule (statement -> declaracion) in state 4
WARNING: reduce/reduce conflict in state 5 resolved using rule (element -> function)
WARNING: rejected rule (statement -> function) in state 5
WARNING: reduce/reduce conflict in state 6 resolved using rule (element -> arrow_function)
WARNING: rejected rule (statement -> arrow_function) in state 6
WARNING: reduce/reduce conflict in state 7 resolved using rule (element -> async_function)
WARNING: rejected rule (statement -> async_function) in state 7
WARNING: reduce/reduce conflict in state 8 resolved using rule (element -> constAssignment)
WARNING: rejected rule (statement -> constAssignment) in state 8
WARNING: reduce/reduce conflict in state 10 resolved using rule (element -> controlEstructure)
WARNING: rejected rule (statement -> controlEstructure) in state 10
WARNING: reduce/reduce conflict in state 11 resolved using rule (element -> forEstructure)
WARNING: rejected rule (statement -> forEstructure) in state 11
WARNING: reduce/reduce conflict in state 12 resolved using rule (element -> class_definition)
WARNING: rejected rule (statement -> class_definition) in state 12
WARNING: reduce/reduce conflict in state 17 resolved using rule (element -> consolelog)
WARNING: rejected rule (statement -> consolelog) in state 17
WARNING: reduce/reduce conflict in state 47 resolved using rule (element -> expression SEMICOLON)
WARNING: rejected rule (statement -> expression SEMICOLON) in state 47
WARNING: reduce/reduce conflict in state 84 resolved using rule (instruction_list -> empty)
WARNING: rejected rule (object_properties -> empty) in state 84
WARNING: reduce/reduce conflict in state 318 resolved using rule (for_update -> expression PLUSPLUS)
WARNING: rejected rule (expression -> expression PLUSPLUS) in state 318
WARNING: reduce/reduce conflict in state 319 resolved using rule (for_update -> expression MINUSMINUS)
WARNING: rejected rule (expression -> expression MINUSMINUS) in state 319
WARNING: reduce/reduce conflict in state 321 resolved using rule (for_update -> PLUSPLUS expression)
WARNING: rejected rule (expression -> PLUSPLUS expression) in state 321
WARNING: reduce/reduce conflict in state 322 resolved using rule (for_update -> MINUSMINUS expression)
WARNING: rejected rule (expression -> MINUSMINUS expression) in state 322
WARNING: reduce/reduce conflict in state 328 resolved using rule (body_function -> empty)
WARNING: rejected rule (instruction_list -> empty) in state 328
WARNING: reduce/reduce conflict in state 342 resolved using rule (controlEstructure -> IF LPAREN expression RPAREN statement)
WARNING: rejected rule (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement) in state 342
WARNING: reduce/reduce conflict in state 344 resolved using rule (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement)
WARNING: rejected rule (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement) in state 344
WARNING: Rule (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement) is never reduced
WARNING: Rule (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement) is never reduced
