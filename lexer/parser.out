Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ANY
    ARROW
    AS
    ASYNC
    AWAIT
    BIGINT_TYPE
    BREAK
    CASE
    CATCH
    CLASS
    CONST
    CONTINUE
    DEFAULT
    ENUM
    EQUALS
    EXPORT
    FALSE
    FINALLY
    IMPORT
    INTERFACE
    NEW
    NULL_TYPE
    OF
    PRIVATE
    PROTECTED
    PUBLIC
    STATIC
    SUPER
    SWITCH
    SYMBOL_TYPE
    THIS
    TRUE
    TRY
    TYPE
    UNDEFINED_TYPE
    VAR
    VOID
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> program element
Rule 2     program -> element
Rule 3     element -> letAssignment
Rule 4     element -> declaracion
Rule 5     element -> function
Rule 6     element -> controlEstructure
Rule 7     element -> forEstructure
Rule 8     element -> statement
Rule 9     element -> expression SEMICOLON
Rule 10    element -> consolelog
Rule 11    letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON
Rule 12    letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON
Rule 13    declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
Rule 14    lista_expresiones_opt -> lista_expresiones
Rule 15    lista_expresiones_opt -> empty
Rule 16    lista_expresiones -> expression
Rule 17    lista_expresiones -> expression COMMA lista_expresiones
Rule 18    forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
Rule 19    for_init -> LET IDENTIFIER EQUAL expression
Rule 20    for_init -> LET IDENTIFIER COLON type EQUAL expression
Rule 21    for_init -> expression
Rule 22    for_init -> empty
Rule 23    for_update -> expression
Rule 24    for_update -> expression PLUSPLUS
Rule 25    for_update -> expression MINUSMINUS
Rule 26    for_update -> PLUSPLUS expression
Rule 27    for_update -> MINUSMINUS expression
Rule 28    for_update -> empty
Rule 29    function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
Rule 30    parameters -> IDENTIFIER COLON type
Rule 31    parameters -> IDENTIFIER COLON type COMMA parameters
Rule 32    parameters -> empty
Rule 33    body_function -> instruction_list
Rule 34    type -> NUMBER_TYPE
Rule 35    type -> STRING_TYPE
Rule 36    type -> BOOLEAN_TYPE
Rule 37    type -> IDENTIFIER
Rule 38    type -> type LBRACKET RBRACKET
Rule 39    expression -> expression PLUS expression
Rule 40    expression -> expression MINUS expression
Rule 41    expression -> expression TIMES expression
Rule 42    expression -> expression DIV expression
Rule 43    expression -> expression MOD expression
Rule 44    expression -> expression PLUS_ASSIGN expression
Rule 45    expression -> expression MINUS_ASSIGN expression
Rule 46    expression -> expression MULT_ASSIGN expression
Rule 47    expression -> expression DIV_ASSIGN expression
Rule 48    expression -> expression MOD_ASSIGN expression
Rule 49    expression -> expression POT expression
Rule 50    expression -> expression AND expression
Rule 51    expression -> expression OR expression
Rule 52    expression -> expression EQ expression
Rule 53    expression -> expression NEQ expression
Rule 54    expression -> expression STRICT_EQ expression
Rule 55    expression -> expression STRICT_NEQ expression
Rule 56    expression -> expression LT expression
Rule 57    expression -> expression GT expression
Rule 58    expression -> expression LE expression
Rule 59    expression -> expression GE expression
Rule 60    expression -> NOT expression
Rule 61    expression -> LPAREN expression RPAREN
Rule 62    expression -> expression DOT IDENTIFIER
Rule 63    expression -> expression LBRACKET expression RBRACKET
Rule 64    expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN
Rule 65    expression -> NUMBER
Rule 66    expression -> FLOAT
Rule 67    expression -> STRING
Rule 68    expression -> IDENTIFIER
Rule 69    expression -> expression PLUSPLUS
Rule 70    expression -> expression MINUSMINUS
Rule 71    expression -> PLUSPLUS expression
Rule 72    expression -> MINUSMINUS expression
Rule 73    consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
Rule 74    controlEstructure -> IF LPAREN expression RPAREN statement
Rule 75    controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement
Rule 76    controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
Rule 77    controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
Rule 78    statement -> LBRACE instruction_list RBRACE
Rule 79    statement -> letAssignment
Rule 80    statement -> declaracion
Rule 81    statement -> function
Rule 82    statement -> consolelog
Rule 83    statement -> expression SEMICOLON
Rule 84    statement -> controlEstructure
Rule 85    statement -> RETURN expression SEMICOLON
Rule 86    statement -> forEstructure
Rule 87    instruction_list -> instruction_list statement
Rule 88    instruction_list -> statement
Rule 89    instruction_list -> empty
Rule 90    empty -> <empty>

Terminals, with rules where they appear

AND                  : 50
ANY                  : 
ARROW                : 
AS                   : 
ASYNC                : 
AWAIT                : 
BIGINT_TYPE          : 
BOOLEAN_TYPE         : 36
BREAK                : 
CASE                 : 
CATCH                : 
CLASS                : 
COLON                : 11 13 20 29 30 31
COMMA                : 17 31
CONSOLE              : 73
CONST                : 
CONTINUE             : 
DEFAULT              : 
DIV                  : 42
DIV_ASSIGN           : 47
DOT                  : 62 73
ELSE                 : 75 76 77 77
ENUM                 : 
EQ                   : 52
EQUAL                : 11 12 13 19 20
EQUALS               : 
EXPORT               : 
FALSE                : 
FINALLY              : 
FLOAT                : 66
FOR                  : 18
FUNCTION             : 29
GE                   : 59
GT                   : 57
IDENTIFIER           : 11 12 13 19 20 29 30 31 37 62 64 68
IF                   : 74 75 76 76 77 77
IMPORT               : 
INTERFACE            : 
LBRACE               : 29 78
LBRACKET             : 13 13 38 63
LE                   : 58
LET                  : 11 12 13 19 20
LOG                  : 73
LPAREN               : 18 29 61 64 73 74 75 76 76 77 77
LT                   : 56
MINUS                : 40
MINUSMINUS           : 25 27 70 72
MINUS_ASSIGN         : 45
MOD                  : 43
MOD_ASSIGN           : 48
MULT_ASSIGN          : 46
NEQ                  : 53
NEW                  : 
NOT                  : 60
NULL_TYPE            : 
NUMBER               : 65
NUMBER_TYPE          : 34
OF                   : 
OR                   : 51
PLUS                 : 39
PLUSPLUS             : 24 26 69 71
PLUS_ASSIGN          : 44
POT                  : 49
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
RBRACE               : 29 78
RBRACKET             : 13 13 38 63
RETURN               : 85
RPAREN               : 18 29 61 64 73 74 75 76 76 77 77
SEMICOLON            : 9 11 12 13 18 18 73 83 85
STATIC               : 
STRICT_EQ            : 54
STRICT_NEQ           : 55
STRING               : 67
STRING_TYPE          : 35
SUPER                : 
SWITCH               : 
SYMBOL_TYPE          : 
THIS                 : 
TIMES                : 41
TRUE                 : 
TRY                  : 
TYPE                 : 
UNDEFINED_TYPE       : 
VAR                  : 
VOID                 : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

body_function        : 29
consolelog           : 10 82
controlEstructure    : 6 84
declaracion          : 4 80
element              : 1 2
empty                : 15 22 28 32 89
expression           : 9 11 12 16 17 18 19 20 21 23 24 25 26 27 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 50 51 51 52 52 53 53 54 54 55 55 56 56 57 57 58 58 59 59 60 61 62 63 63 69 70 71 72 74 75 76 76 77 77 83 85
forEstructure        : 7 86
for_init             : 18
for_update           : 18
function             : 5 81
instruction_list     : 33 78 87
letAssignment        : 3 79
lista_expresiones    : 14 17
lista_expresiones_opt : 13 64 73
parameters           : 29 31
program              : 1 0
statement            : 8 18 74 75 75 76 76 77 77 77 87 88
type                 : 11 13 20 29 30 31 38

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program element
    (2) program -> . element
    (3) element -> . letAssignment
    (4) element -> . declaracion
    (5) element -> . function
    (6) element -> . controlEstructure
    (7) element -> . forEstructure
    (8) element -> . statement
    (9) element -> . expression SEMICOLON
    (10) element -> . consolelog
    (11) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (12) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (13) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (29) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (74) controlEstructure -> . IF LPAREN expression RPAREN statement
    (75) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (76) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (77) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (18) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (78) statement -> . LBRACE instruction_list RBRACE
    (79) statement -> . letAssignment
    (80) statement -> . declaracion
    (81) statement -> . function
    (82) statement -> . consolelog
    (83) statement -> . expression SEMICOLON
    (84) statement -> . controlEstructure
    (85) statement -> . RETURN expression SEMICOLON
    (86) statement -> . forEstructure
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression
    (73) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON

    LET             shift and go to state 11
    FUNCTION        shift and go to state 13
    IF              shift and go to state 16
    FOR             shift and go to state 17
    LBRACE          shift and go to state 15
    RETURN          shift and go to state 18
    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24
    CONSOLE         shift and go to state 25

    program                        shift and go to state 1
    element                        shift and go to state 2
    letAssignment                  shift and go to state 3
    declaracion                    shift and go to state 4
    function                       shift and go to state 5
    controlEstructure              shift and go to state 6
    forEstructure                  shift and go to state 7
    statement                      shift and go to state 8
    expression                     shift and go to state 9
    consolelog                     shift and go to state 10

state 1

    (0) S' -> program .
    (1) program -> program . element
    (3) element -> . letAssignment
    (4) element -> . declaracion
    (5) element -> . function
    (6) element -> . controlEstructure
    (7) element -> . forEstructure
    (8) element -> . statement
    (9) element -> . expression SEMICOLON
    (10) element -> . consolelog
    (11) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (12) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (13) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (29) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (74) controlEstructure -> . IF LPAREN expression RPAREN statement
    (75) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (76) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (77) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (18) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (78) statement -> . LBRACE instruction_list RBRACE
    (79) statement -> . letAssignment
    (80) statement -> . declaracion
    (81) statement -> . function
    (82) statement -> . consolelog
    (83) statement -> . expression SEMICOLON
    (84) statement -> . controlEstructure
    (85) statement -> . RETURN expression SEMICOLON
    (86) statement -> . forEstructure
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression
    (73) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON

    LET             shift and go to state 11
    FUNCTION        shift and go to state 13
    IF              shift and go to state 16
    FOR             shift and go to state 17
    LBRACE          shift and go to state 15
    RETURN          shift and go to state 18
    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24
    CONSOLE         shift and go to state 25

    element                        shift and go to state 26
    letAssignment                  shift and go to state 3
    declaracion                    shift and go to state 4
    function                       shift and go to state 5
    controlEstructure              shift and go to state 6
    forEstructure                  shift and go to state 7
    statement                      shift and go to state 8
    expression                     shift and go to state 9
    consolelog                     shift and go to state 10

state 2

    (2) program -> element .

    LET             reduce using rule 2 (program -> element .)
    FUNCTION        reduce using rule 2 (program -> element .)
    IF              reduce using rule 2 (program -> element .)
    FOR             reduce using rule 2 (program -> element .)
    LBRACE          reduce using rule 2 (program -> element .)
    RETURN          reduce using rule 2 (program -> element .)
    NOT             reduce using rule 2 (program -> element .)
    LPAREN          reduce using rule 2 (program -> element .)
    IDENTIFIER      reduce using rule 2 (program -> element .)
    NUMBER          reduce using rule 2 (program -> element .)
    FLOAT           reduce using rule 2 (program -> element .)
    STRING          reduce using rule 2 (program -> element .)
    PLUSPLUS        reduce using rule 2 (program -> element .)
    MINUSMINUS      reduce using rule 2 (program -> element .)
    CONSOLE         reduce using rule 2 (program -> element .)
    $end            reduce using rule 2 (program -> element .)


state 3

    (3) element -> letAssignment .
    (79) statement -> letAssignment .

  ! reduce/reduce conflict for LET resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for IF resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for FOR resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for LBRACE resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for RETURN resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for NOT resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for LPAREN resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for NUMBER resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for FLOAT resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for STRING resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for PLUSPLUS resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for MINUSMINUS resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for $end resolved using rule 3 (element -> letAssignment .)
    LET             reduce using rule 3 (element -> letAssignment .)
    FUNCTION        reduce using rule 3 (element -> letAssignment .)
    IF              reduce using rule 3 (element -> letAssignment .)
    FOR             reduce using rule 3 (element -> letAssignment .)
    LBRACE          reduce using rule 3 (element -> letAssignment .)
    RETURN          reduce using rule 3 (element -> letAssignment .)
    NOT             reduce using rule 3 (element -> letAssignment .)
    LPAREN          reduce using rule 3 (element -> letAssignment .)
    IDENTIFIER      reduce using rule 3 (element -> letAssignment .)
    NUMBER          reduce using rule 3 (element -> letAssignment .)
    FLOAT           reduce using rule 3 (element -> letAssignment .)
    STRING          reduce using rule 3 (element -> letAssignment .)
    PLUSPLUS        reduce using rule 3 (element -> letAssignment .)
    MINUSMINUS      reduce using rule 3 (element -> letAssignment .)
    CONSOLE         reduce using rule 3 (element -> letAssignment .)
    $end            reduce using rule 3 (element -> letAssignment .)

  ! LET             [ reduce using rule 79 (statement -> letAssignment .) ]
  ! FUNCTION        [ reduce using rule 79 (statement -> letAssignment .) ]
  ! IF              [ reduce using rule 79 (statement -> letAssignment .) ]
  ! FOR             [ reduce using rule 79 (statement -> letAssignment .) ]
  ! LBRACE          [ reduce using rule 79 (statement -> letAssignment .) ]
  ! RETURN          [ reduce using rule 79 (statement -> letAssignment .) ]
  ! NOT             [ reduce using rule 79 (statement -> letAssignment .) ]
  ! LPAREN          [ reduce using rule 79 (statement -> letAssignment .) ]
  ! IDENTIFIER      [ reduce using rule 79 (statement -> letAssignment .) ]
  ! NUMBER          [ reduce using rule 79 (statement -> letAssignment .) ]
  ! FLOAT           [ reduce using rule 79 (statement -> letAssignment .) ]
  ! STRING          [ reduce using rule 79 (statement -> letAssignment .) ]
  ! PLUSPLUS        [ reduce using rule 79 (statement -> letAssignment .) ]
  ! MINUSMINUS      [ reduce using rule 79 (statement -> letAssignment .) ]
  ! CONSOLE         [ reduce using rule 79 (statement -> letAssignment .) ]
  ! $end            [ reduce using rule 79 (statement -> letAssignment .) ]


state 4

    (4) element -> declaracion .
    (80) statement -> declaracion .

  ! reduce/reduce conflict for LET resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for IF resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for FOR resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for LBRACE resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for RETURN resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for NOT resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for LPAREN resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for NUMBER resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for FLOAT resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for STRING resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for PLUSPLUS resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for MINUSMINUS resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for $end resolved using rule 4 (element -> declaracion .)
    LET             reduce using rule 4 (element -> declaracion .)
    FUNCTION        reduce using rule 4 (element -> declaracion .)
    IF              reduce using rule 4 (element -> declaracion .)
    FOR             reduce using rule 4 (element -> declaracion .)
    LBRACE          reduce using rule 4 (element -> declaracion .)
    RETURN          reduce using rule 4 (element -> declaracion .)
    NOT             reduce using rule 4 (element -> declaracion .)
    LPAREN          reduce using rule 4 (element -> declaracion .)
    IDENTIFIER      reduce using rule 4 (element -> declaracion .)
    NUMBER          reduce using rule 4 (element -> declaracion .)
    FLOAT           reduce using rule 4 (element -> declaracion .)
    STRING          reduce using rule 4 (element -> declaracion .)
    PLUSPLUS        reduce using rule 4 (element -> declaracion .)
    MINUSMINUS      reduce using rule 4 (element -> declaracion .)
    CONSOLE         reduce using rule 4 (element -> declaracion .)
    $end            reduce using rule 4 (element -> declaracion .)

  ! LET             [ reduce using rule 80 (statement -> declaracion .) ]
  ! FUNCTION        [ reduce using rule 80 (statement -> declaracion .) ]
  ! IF              [ reduce using rule 80 (statement -> declaracion .) ]
  ! FOR             [ reduce using rule 80 (statement -> declaracion .) ]
  ! LBRACE          [ reduce using rule 80 (statement -> declaracion .) ]
  ! RETURN          [ reduce using rule 80 (statement -> declaracion .) ]
  ! NOT             [ reduce using rule 80 (statement -> declaracion .) ]
  ! LPAREN          [ reduce using rule 80 (statement -> declaracion .) ]
  ! IDENTIFIER      [ reduce using rule 80 (statement -> declaracion .) ]
  ! NUMBER          [ reduce using rule 80 (statement -> declaracion .) ]
  ! FLOAT           [ reduce using rule 80 (statement -> declaracion .) ]
  ! STRING          [ reduce using rule 80 (statement -> declaracion .) ]
  ! PLUSPLUS        [ reduce using rule 80 (statement -> declaracion .) ]
  ! MINUSMINUS      [ reduce using rule 80 (statement -> declaracion .) ]
  ! CONSOLE         [ reduce using rule 80 (statement -> declaracion .) ]
  ! $end            [ reduce using rule 80 (statement -> declaracion .) ]


state 5

    (5) element -> function .
    (81) statement -> function .

  ! reduce/reduce conflict for LET resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for IF resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for FOR resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for LBRACE resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for RETURN resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for NOT resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for LPAREN resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for NUMBER resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for FLOAT resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for STRING resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for PLUSPLUS resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for MINUSMINUS resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for $end resolved using rule 5 (element -> function .)
    LET             reduce using rule 5 (element -> function .)
    FUNCTION        reduce using rule 5 (element -> function .)
    IF              reduce using rule 5 (element -> function .)
    FOR             reduce using rule 5 (element -> function .)
    LBRACE          reduce using rule 5 (element -> function .)
    RETURN          reduce using rule 5 (element -> function .)
    NOT             reduce using rule 5 (element -> function .)
    LPAREN          reduce using rule 5 (element -> function .)
    IDENTIFIER      reduce using rule 5 (element -> function .)
    NUMBER          reduce using rule 5 (element -> function .)
    FLOAT           reduce using rule 5 (element -> function .)
    STRING          reduce using rule 5 (element -> function .)
    PLUSPLUS        reduce using rule 5 (element -> function .)
    MINUSMINUS      reduce using rule 5 (element -> function .)
    CONSOLE         reduce using rule 5 (element -> function .)
    $end            reduce using rule 5 (element -> function .)

  ! LET             [ reduce using rule 81 (statement -> function .) ]
  ! FUNCTION        [ reduce using rule 81 (statement -> function .) ]
  ! IF              [ reduce using rule 81 (statement -> function .) ]
  ! FOR             [ reduce using rule 81 (statement -> function .) ]
  ! LBRACE          [ reduce using rule 81 (statement -> function .) ]
  ! RETURN          [ reduce using rule 81 (statement -> function .) ]
  ! NOT             [ reduce using rule 81 (statement -> function .) ]
  ! LPAREN          [ reduce using rule 81 (statement -> function .) ]
  ! IDENTIFIER      [ reduce using rule 81 (statement -> function .) ]
  ! NUMBER          [ reduce using rule 81 (statement -> function .) ]
  ! FLOAT           [ reduce using rule 81 (statement -> function .) ]
  ! STRING          [ reduce using rule 81 (statement -> function .) ]
  ! PLUSPLUS        [ reduce using rule 81 (statement -> function .) ]
  ! MINUSMINUS      [ reduce using rule 81 (statement -> function .) ]
  ! CONSOLE         [ reduce using rule 81 (statement -> function .) ]
  ! $end            [ reduce using rule 81 (statement -> function .) ]


state 6

    (6) element -> controlEstructure .
    (84) statement -> controlEstructure .

  ! reduce/reduce conflict for LET resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for IF resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for FOR resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for LBRACE resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for RETURN resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for NOT resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for LPAREN resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for NUMBER resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for FLOAT resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for STRING resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for PLUSPLUS resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for MINUSMINUS resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for $end resolved using rule 6 (element -> controlEstructure .)
    LET             reduce using rule 6 (element -> controlEstructure .)
    FUNCTION        reduce using rule 6 (element -> controlEstructure .)
    IF              reduce using rule 6 (element -> controlEstructure .)
    FOR             reduce using rule 6 (element -> controlEstructure .)
    LBRACE          reduce using rule 6 (element -> controlEstructure .)
    RETURN          reduce using rule 6 (element -> controlEstructure .)
    NOT             reduce using rule 6 (element -> controlEstructure .)
    LPAREN          reduce using rule 6 (element -> controlEstructure .)
    IDENTIFIER      reduce using rule 6 (element -> controlEstructure .)
    NUMBER          reduce using rule 6 (element -> controlEstructure .)
    FLOAT           reduce using rule 6 (element -> controlEstructure .)
    STRING          reduce using rule 6 (element -> controlEstructure .)
    PLUSPLUS        reduce using rule 6 (element -> controlEstructure .)
    MINUSMINUS      reduce using rule 6 (element -> controlEstructure .)
    CONSOLE         reduce using rule 6 (element -> controlEstructure .)
    $end            reduce using rule 6 (element -> controlEstructure .)

  ! LET             [ reduce using rule 84 (statement -> controlEstructure .) ]
  ! FUNCTION        [ reduce using rule 84 (statement -> controlEstructure .) ]
  ! IF              [ reduce using rule 84 (statement -> controlEstructure .) ]
  ! FOR             [ reduce using rule 84 (statement -> controlEstructure .) ]
  ! LBRACE          [ reduce using rule 84 (statement -> controlEstructure .) ]
  ! RETURN          [ reduce using rule 84 (statement -> controlEstructure .) ]
  ! NOT             [ reduce using rule 84 (statement -> controlEstructure .) ]
  ! LPAREN          [ reduce using rule 84 (statement -> controlEstructure .) ]
  ! IDENTIFIER      [ reduce using rule 84 (statement -> controlEstructure .) ]
  ! NUMBER          [ reduce using rule 84 (statement -> controlEstructure .) ]
  ! FLOAT           [ reduce using rule 84 (statement -> controlEstructure .) ]
  ! STRING          [ reduce using rule 84 (statement -> controlEstructure .) ]
  ! PLUSPLUS        [ reduce using rule 84 (statement -> controlEstructure .) ]
  ! MINUSMINUS      [ reduce using rule 84 (statement -> controlEstructure .) ]
  ! CONSOLE         [ reduce using rule 84 (statement -> controlEstructure .) ]
  ! $end            [ reduce using rule 84 (statement -> controlEstructure .) ]


state 7

    (7) element -> forEstructure .
    (86) statement -> forEstructure .

  ! reduce/reduce conflict for LET resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for IF resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for FOR resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for LBRACE resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for RETURN resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for NOT resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for LPAREN resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for NUMBER resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for FLOAT resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for STRING resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for PLUSPLUS resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for MINUSMINUS resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for $end resolved using rule 7 (element -> forEstructure .)
    LET             reduce using rule 7 (element -> forEstructure .)
    FUNCTION        reduce using rule 7 (element -> forEstructure .)
    IF              reduce using rule 7 (element -> forEstructure .)
    FOR             reduce using rule 7 (element -> forEstructure .)
    LBRACE          reduce using rule 7 (element -> forEstructure .)
    RETURN          reduce using rule 7 (element -> forEstructure .)
    NOT             reduce using rule 7 (element -> forEstructure .)
    LPAREN          reduce using rule 7 (element -> forEstructure .)
    IDENTIFIER      reduce using rule 7 (element -> forEstructure .)
    NUMBER          reduce using rule 7 (element -> forEstructure .)
    FLOAT           reduce using rule 7 (element -> forEstructure .)
    STRING          reduce using rule 7 (element -> forEstructure .)
    PLUSPLUS        reduce using rule 7 (element -> forEstructure .)
    MINUSMINUS      reduce using rule 7 (element -> forEstructure .)
    CONSOLE         reduce using rule 7 (element -> forEstructure .)
    $end            reduce using rule 7 (element -> forEstructure .)

  ! LET             [ reduce using rule 86 (statement -> forEstructure .) ]
  ! FUNCTION        [ reduce using rule 86 (statement -> forEstructure .) ]
  ! IF              [ reduce using rule 86 (statement -> forEstructure .) ]
  ! FOR             [ reduce using rule 86 (statement -> forEstructure .) ]
  ! LBRACE          [ reduce using rule 86 (statement -> forEstructure .) ]
  ! RETURN          [ reduce using rule 86 (statement -> forEstructure .) ]
  ! NOT             [ reduce using rule 86 (statement -> forEstructure .) ]
  ! LPAREN          [ reduce using rule 86 (statement -> forEstructure .) ]
  ! IDENTIFIER      [ reduce using rule 86 (statement -> forEstructure .) ]
  ! NUMBER          [ reduce using rule 86 (statement -> forEstructure .) ]
  ! FLOAT           [ reduce using rule 86 (statement -> forEstructure .) ]
  ! STRING          [ reduce using rule 86 (statement -> forEstructure .) ]
  ! PLUSPLUS        [ reduce using rule 86 (statement -> forEstructure .) ]
  ! MINUSMINUS      [ reduce using rule 86 (statement -> forEstructure .) ]
  ! CONSOLE         [ reduce using rule 86 (statement -> forEstructure .) ]
  ! $end            [ reduce using rule 86 (statement -> forEstructure .) ]


state 8

    (8) element -> statement .

    LET             reduce using rule 8 (element -> statement .)
    FUNCTION        reduce using rule 8 (element -> statement .)
    IF              reduce using rule 8 (element -> statement .)
    FOR             reduce using rule 8 (element -> statement .)
    LBRACE          reduce using rule 8 (element -> statement .)
    RETURN          reduce using rule 8 (element -> statement .)
    NOT             reduce using rule 8 (element -> statement .)
    LPAREN          reduce using rule 8 (element -> statement .)
    IDENTIFIER      reduce using rule 8 (element -> statement .)
    NUMBER          reduce using rule 8 (element -> statement .)
    FLOAT           reduce using rule 8 (element -> statement .)
    STRING          reduce using rule 8 (element -> statement .)
    PLUSPLUS        reduce using rule 8 (element -> statement .)
    MINUSMINUS      reduce using rule 8 (element -> statement .)
    CONSOLE         reduce using rule 8 (element -> statement .)
    $end            reduce using rule 8 (element -> statement .)


state 9

    (9) element -> expression . SEMICOLON
    (83) statement -> expression . SEMICOLON
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

    SEMICOLON       shift and go to state 27
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52


state 10

    (10) element -> consolelog .
    (82) statement -> consolelog .

  ! reduce/reduce conflict for LET resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for IF resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for FOR resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for LBRACE resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for RETURN resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for NOT resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for LPAREN resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for NUMBER resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for FLOAT resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for STRING resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for PLUSPLUS resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for MINUSMINUS resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for $end resolved using rule 10 (element -> consolelog .)
    LET             reduce using rule 10 (element -> consolelog .)
    FUNCTION        reduce using rule 10 (element -> consolelog .)
    IF              reduce using rule 10 (element -> consolelog .)
    FOR             reduce using rule 10 (element -> consolelog .)
    LBRACE          reduce using rule 10 (element -> consolelog .)
    RETURN          reduce using rule 10 (element -> consolelog .)
    NOT             reduce using rule 10 (element -> consolelog .)
    LPAREN          reduce using rule 10 (element -> consolelog .)
    IDENTIFIER      reduce using rule 10 (element -> consolelog .)
    NUMBER          reduce using rule 10 (element -> consolelog .)
    FLOAT           reduce using rule 10 (element -> consolelog .)
    STRING          reduce using rule 10 (element -> consolelog .)
    PLUSPLUS        reduce using rule 10 (element -> consolelog .)
    MINUSMINUS      reduce using rule 10 (element -> consolelog .)
    CONSOLE         reduce using rule 10 (element -> consolelog .)
    $end            reduce using rule 10 (element -> consolelog .)

  ! LET             [ reduce using rule 82 (statement -> consolelog .) ]
  ! FUNCTION        [ reduce using rule 82 (statement -> consolelog .) ]
  ! IF              [ reduce using rule 82 (statement -> consolelog .) ]
  ! FOR             [ reduce using rule 82 (statement -> consolelog .) ]
  ! LBRACE          [ reduce using rule 82 (statement -> consolelog .) ]
  ! RETURN          [ reduce using rule 82 (statement -> consolelog .) ]
  ! NOT             [ reduce using rule 82 (statement -> consolelog .) ]
  ! LPAREN          [ reduce using rule 82 (statement -> consolelog .) ]
  ! IDENTIFIER      [ reduce using rule 82 (statement -> consolelog .) ]
  ! NUMBER          [ reduce using rule 82 (statement -> consolelog .) ]
  ! FLOAT           [ reduce using rule 82 (statement -> consolelog .) ]
  ! STRING          [ reduce using rule 82 (statement -> consolelog .) ]
  ! PLUSPLUS        [ reduce using rule 82 (statement -> consolelog .) ]
  ! MINUSMINUS      [ reduce using rule 82 (statement -> consolelog .) ]
  ! CONSOLE         [ reduce using rule 82 (statement -> consolelog .) ]
  ! $end            [ reduce using rule 82 (statement -> consolelog .) ]


state 11

    (11) letAssignment -> LET . IDENTIFIER COLON type EQUAL expression SEMICOLON
    (12) letAssignment -> LET . IDENTIFIER EQUAL expression SEMICOLON
    (13) declaracion -> LET . IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON

    IDENTIFIER      shift and go to state 53


state 12

    (64) expression -> IDENTIFIER . LPAREN lista_expresiones_opt RPAREN
    (68) expression -> IDENTIFIER .

    LPAREN          shift and go to state 54
    SEMICOLON       reduce using rule 68 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 68 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 68 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 68 (expression -> IDENTIFIER .)
    DIV             reduce using rule 68 (expression -> IDENTIFIER .)
    MOD             reduce using rule 68 (expression -> IDENTIFIER .)
    PLUS_ASSIGN     reduce using rule 68 (expression -> IDENTIFIER .)
    MINUS_ASSIGN    reduce using rule 68 (expression -> IDENTIFIER .)
    MULT_ASSIGN     reduce using rule 68 (expression -> IDENTIFIER .)
    DIV_ASSIGN      reduce using rule 68 (expression -> IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 68 (expression -> IDENTIFIER .)
    POT             reduce using rule 68 (expression -> IDENTIFIER .)
    AND             reduce using rule 68 (expression -> IDENTIFIER .)
    OR              reduce using rule 68 (expression -> IDENTIFIER .)
    EQ              reduce using rule 68 (expression -> IDENTIFIER .)
    NEQ             reduce using rule 68 (expression -> IDENTIFIER .)
    STRICT_EQ       reduce using rule 68 (expression -> IDENTIFIER .)
    STRICT_NEQ      reduce using rule 68 (expression -> IDENTIFIER .)
    LT              reduce using rule 68 (expression -> IDENTIFIER .)
    GT              reduce using rule 68 (expression -> IDENTIFIER .)
    LE              reduce using rule 68 (expression -> IDENTIFIER .)
    GE              reduce using rule 68 (expression -> IDENTIFIER .)
    DOT             reduce using rule 68 (expression -> IDENTIFIER .)
    LBRACKET        reduce using rule 68 (expression -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 68 (expression -> IDENTIFIER .)
    MINUSMINUS      reduce using rule 68 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 68 (expression -> IDENTIFIER .)
    RBRACKET        reduce using rule 68 (expression -> IDENTIFIER .)
    COMMA           reduce using rule 68 (expression -> IDENTIFIER .)


state 13

    (29) function -> FUNCTION . IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE

    IDENTIFIER      shift and go to state 55


state 14

    (61) expression -> LPAREN . expression RPAREN
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 56

state 15

    (78) statement -> LBRACE . instruction_list RBRACE
    (87) instruction_list -> . instruction_list statement
    (88) instruction_list -> . statement
    (89) instruction_list -> . empty
    (78) statement -> . LBRACE instruction_list RBRACE
    (79) statement -> . letAssignment
    (80) statement -> . declaracion
    (81) statement -> . function
    (82) statement -> . consolelog
    (83) statement -> . expression SEMICOLON
    (84) statement -> . controlEstructure
    (85) statement -> . RETURN expression SEMICOLON
    (86) statement -> . forEstructure
    (90) empty -> .
    (11) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (12) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (13) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (29) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (73) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression
    (74) controlEstructure -> . IF LPAREN expression RPAREN statement
    (75) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (76) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (77) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (18) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for CONSOLE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    LBRACE          shift and go to state 15
    RETURN          shift and go to state 18
    RBRACE          reduce using rule 90 (empty -> .)
    LET             shift and go to state 11
    FUNCTION        shift and go to state 13
    CONSOLE         shift and go to state 25
    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24
    IF              shift and go to state 16
    FOR             shift and go to state 17

  ! LBRACE          [ reduce using rule 90 (empty -> .) ]
  ! RETURN          [ reduce using rule 90 (empty -> .) ]
  ! LET             [ reduce using rule 90 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 90 (empty -> .) ]
  ! CONSOLE         [ reduce using rule 90 (empty -> .) ]
  ! NOT             [ reduce using rule 90 (empty -> .) ]
  ! LPAREN          [ reduce using rule 90 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 90 (empty -> .) ]
  ! NUMBER          [ reduce using rule 90 (empty -> .) ]
  ! FLOAT           [ reduce using rule 90 (empty -> .) ]
  ! STRING          [ reduce using rule 90 (empty -> .) ]
  ! PLUSPLUS        [ reduce using rule 90 (empty -> .) ]
  ! MINUSMINUS      [ reduce using rule 90 (empty -> .) ]
  ! IF              [ reduce using rule 90 (empty -> .) ]
  ! FOR             [ reduce using rule 90 (empty -> .) ]

    instruction_list               shift and go to state 57
    statement                      shift and go to state 58
    empty                          shift and go to state 59
    letAssignment                  shift and go to state 60
    declaracion                    shift and go to state 61
    function                       shift and go to state 62
    consolelog                     shift and go to state 63
    expression                     shift and go to state 64
    controlEstructure              shift and go to state 65
    forEstructure                  shift and go to state 66

state 16

    (74) controlEstructure -> IF . LPAREN expression RPAREN statement
    (75) controlEstructure -> IF . LPAREN expression RPAREN statement ELSE statement
    (76) controlEstructure -> IF . LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (77) controlEstructure -> IF . LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement

    LPAREN          shift and go to state 67


state 17

    (18) forEstructure -> FOR . LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement

    LPAREN          shift and go to state 68


state 18

    (85) statement -> RETURN . expression SEMICOLON
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 69

state 19

    (60) expression -> NOT . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 70

state 20

    (65) expression -> NUMBER .

    SEMICOLON       reduce using rule 65 (expression -> NUMBER .)
    PLUS            reduce using rule 65 (expression -> NUMBER .)
    MINUS           reduce using rule 65 (expression -> NUMBER .)
    TIMES           reduce using rule 65 (expression -> NUMBER .)
    DIV             reduce using rule 65 (expression -> NUMBER .)
    MOD             reduce using rule 65 (expression -> NUMBER .)
    PLUS_ASSIGN     reduce using rule 65 (expression -> NUMBER .)
    MINUS_ASSIGN    reduce using rule 65 (expression -> NUMBER .)
    MULT_ASSIGN     reduce using rule 65 (expression -> NUMBER .)
    DIV_ASSIGN      reduce using rule 65 (expression -> NUMBER .)
    MOD_ASSIGN      reduce using rule 65 (expression -> NUMBER .)
    POT             reduce using rule 65 (expression -> NUMBER .)
    AND             reduce using rule 65 (expression -> NUMBER .)
    OR              reduce using rule 65 (expression -> NUMBER .)
    EQ              reduce using rule 65 (expression -> NUMBER .)
    NEQ             reduce using rule 65 (expression -> NUMBER .)
    STRICT_EQ       reduce using rule 65 (expression -> NUMBER .)
    STRICT_NEQ      reduce using rule 65 (expression -> NUMBER .)
    LT              reduce using rule 65 (expression -> NUMBER .)
    GT              reduce using rule 65 (expression -> NUMBER .)
    LE              reduce using rule 65 (expression -> NUMBER .)
    GE              reduce using rule 65 (expression -> NUMBER .)
    DOT             reduce using rule 65 (expression -> NUMBER .)
    LBRACKET        reduce using rule 65 (expression -> NUMBER .)
    PLUSPLUS        reduce using rule 65 (expression -> NUMBER .)
    MINUSMINUS      reduce using rule 65 (expression -> NUMBER .)
    RPAREN          reduce using rule 65 (expression -> NUMBER .)
    RBRACKET        reduce using rule 65 (expression -> NUMBER .)
    COMMA           reduce using rule 65 (expression -> NUMBER .)


state 21

    (66) expression -> FLOAT .

    SEMICOLON       reduce using rule 66 (expression -> FLOAT .)
    PLUS            reduce using rule 66 (expression -> FLOAT .)
    MINUS           reduce using rule 66 (expression -> FLOAT .)
    TIMES           reduce using rule 66 (expression -> FLOAT .)
    DIV             reduce using rule 66 (expression -> FLOAT .)
    MOD             reduce using rule 66 (expression -> FLOAT .)
    PLUS_ASSIGN     reduce using rule 66 (expression -> FLOAT .)
    MINUS_ASSIGN    reduce using rule 66 (expression -> FLOAT .)
    MULT_ASSIGN     reduce using rule 66 (expression -> FLOAT .)
    DIV_ASSIGN      reduce using rule 66 (expression -> FLOAT .)
    MOD_ASSIGN      reduce using rule 66 (expression -> FLOAT .)
    POT             reduce using rule 66 (expression -> FLOAT .)
    AND             reduce using rule 66 (expression -> FLOAT .)
    OR              reduce using rule 66 (expression -> FLOAT .)
    EQ              reduce using rule 66 (expression -> FLOAT .)
    NEQ             reduce using rule 66 (expression -> FLOAT .)
    STRICT_EQ       reduce using rule 66 (expression -> FLOAT .)
    STRICT_NEQ      reduce using rule 66 (expression -> FLOAT .)
    LT              reduce using rule 66 (expression -> FLOAT .)
    GT              reduce using rule 66 (expression -> FLOAT .)
    LE              reduce using rule 66 (expression -> FLOAT .)
    GE              reduce using rule 66 (expression -> FLOAT .)
    DOT             reduce using rule 66 (expression -> FLOAT .)
    LBRACKET        reduce using rule 66 (expression -> FLOAT .)
    PLUSPLUS        reduce using rule 66 (expression -> FLOAT .)
    MINUSMINUS      reduce using rule 66 (expression -> FLOAT .)
    RPAREN          reduce using rule 66 (expression -> FLOAT .)
    RBRACKET        reduce using rule 66 (expression -> FLOAT .)
    COMMA           reduce using rule 66 (expression -> FLOAT .)


state 22

    (67) expression -> STRING .

    SEMICOLON       reduce using rule 67 (expression -> STRING .)
    PLUS            reduce using rule 67 (expression -> STRING .)
    MINUS           reduce using rule 67 (expression -> STRING .)
    TIMES           reduce using rule 67 (expression -> STRING .)
    DIV             reduce using rule 67 (expression -> STRING .)
    MOD             reduce using rule 67 (expression -> STRING .)
    PLUS_ASSIGN     reduce using rule 67 (expression -> STRING .)
    MINUS_ASSIGN    reduce using rule 67 (expression -> STRING .)
    MULT_ASSIGN     reduce using rule 67 (expression -> STRING .)
    DIV_ASSIGN      reduce using rule 67 (expression -> STRING .)
    MOD_ASSIGN      reduce using rule 67 (expression -> STRING .)
    POT             reduce using rule 67 (expression -> STRING .)
    AND             reduce using rule 67 (expression -> STRING .)
    OR              reduce using rule 67 (expression -> STRING .)
    EQ              reduce using rule 67 (expression -> STRING .)
    NEQ             reduce using rule 67 (expression -> STRING .)
    STRICT_EQ       reduce using rule 67 (expression -> STRING .)
    STRICT_NEQ      reduce using rule 67 (expression -> STRING .)
    LT              reduce using rule 67 (expression -> STRING .)
    GT              reduce using rule 67 (expression -> STRING .)
    LE              reduce using rule 67 (expression -> STRING .)
    GE              reduce using rule 67 (expression -> STRING .)
    DOT             reduce using rule 67 (expression -> STRING .)
    LBRACKET        reduce using rule 67 (expression -> STRING .)
    PLUSPLUS        reduce using rule 67 (expression -> STRING .)
    MINUSMINUS      reduce using rule 67 (expression -> STRING .)
    RPAREN          reduce using rule 67 (expression -> STRING .)
    RBRACKET        reduce using rule 67 (expression -> STRING .)
    COMMA           reduce using rule 67 (expression -> STRING .)


state 23

    (71) expression -> PLUSPLUS . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 71

state 24

    (72) expression -> MINUSMINUS . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 72

state 25

    (73) consolelog -> CONSOLE . DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON

    DOT             shift and go to state 73


state 26

    (1) program -> program element .

    LET             reduce using rule 1 (program -> program element .)
    FUNCTION        reduce using rule 1 (program -> program element .)
    IF              reduce using rule 1 (program -> program element .)
    FOR             reduce using rule 1 (program -> program element .)
    LBRACE          reduce using rule 1 (program -> program element .)
    RETURN          reduce using rule 1 (program -> program element .)
    NOT             reduce using rule 1 (program -> program element .)
    LPAREN          reduce using rule 1 (program -> program element .)
    IDENTIFIER      reduce using rule 1 (program -> program element .)
    NUMBER          reduce using rule 1 (program -> program element .)
    FLOAT           reduce using rule 1 (program -> program element .)
    STRING          reduce using rule 1 (program -> program element .)
    PLUSPLUS        reduce using rule 1 (program -> program element .)
    MINUSMINUS      reduce using rule 1 (program -> program element .)
    CONSOLE         reduce using rule 1 (program -> program element .)
    $end            reduce using rule 1 (program -> program element .)


state 27

    (9) element -> expression SEMICOLON .
    (83) statement -> expression SEMICOLON .

  ! reduce/reduce conflict for LET resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for IF resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for FOR resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for LBRACE resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for RETURN resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for NOT resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for LPAREN resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for NUMBER resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for FLOAT resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for STRING resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for PLUSPLUS resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for MINUSMINUS resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for $end resolved using rule 9 (element -> expression SEMICOLON .)
    LET             reduce using rule 9 (element -> expression SEMICOLON .)
    FUNCTION        reduce using rule 9 (element -> expression SEMICOLON .)
    IF              reduce using rule 9 (element -> expression SEMICOLON .)
    FOR             reduce using rule 9 (element -> expression SEMICOLON .)
    LBRACE          reduce using rule 9 (element -> expression SEMICOLON .)
    RETURN          reduce using rule 9 (element -> expression SEMICOLON .)
    NOT             reduce using rule 9 (element -> expression SEMICOLON .)
    LPAREN          reduce using rule 9 (element -> expression SEMICOLON .)
    IDENTIFIER      reduce using rule 9 (element -> expression SEMICOLON .)
    NUMBER          reduce using rule 9 (element -> expression SEMICOLON .)
    FLOAT           reduce using rule 9 (element -> expression SEMICOLON .)
    STRING          reduce using rule 9 (element -> expression SEMICOLON .)
    PLUSPLUS        reduce using rule 9 (element -> expression SEMICOLON .)
    MINUSMINUS      reduce using rule 9 (element -> expression SEMICOLON .)
    CONSOLE         reduce using rule 9 (element -> expression SEMICOLON .)
    $end            reduce using rule 9 (element -> expression SEMICOLON .)

  ! LET             [ reduce using rule 83 (statement -> expression SEMICOLON .) ]
  ! FUNCTION        [ reduce using rule 83 (statement -> expression SEMICOLON .) ]
  ! IF              [ reduce using rule 83 (statement -> expression SEMICOLON .) ]
  ! FOR             [ reduce using rule 83 (statement -> expression SEMICOLON .) ]
  ! LBRACE          [ reduce using rule 83 (statement -> expression SEMICOLON .) ]
  ! RETURN          [ reduce using rule 83 (statement -> expression SEMICOLON .) ]
  ! NOT             [ reduce using rule 83 (statement -> expression SEMICOLON .) ]
  ! LPAREN          [ reduce using rule 83 (statement -> expression SEMICOLON .) ]
  ! IDENTIFIER      [ reduce using rule 83 (statement -> expression SEMICOLON .) ]
  ! NUMBER          [ reduce using rule 83 (statement -> expression SEMICOLON .) ]
  ! FLOAT           [ reduce using rule 83 (statement -> expression SEMICOLON .) ]
  ! STRING          [ reduce using rule 83 (statement -> expression SEMICOLON .) ]
  ! PLUSPLUS        [ reduce using rule 83 (statement -> expression SEMICOLON .) ]
  ! MINUSMINUS      [ reduce using rule 83 (statement -> expression SEMICOLON .) ]
  ! CONSOLE         [ reduce using rule 83 (statement -> expression SEMICOLON .) ]
  ! $end            [ reduce using rule 83 (statement -> expression SEMICOLON .) ]


state 28

    (39) expression -> expression PLUS . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 74

state 29

    (40) expression -> expression MINUS . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 75

state 30

    (41) expression -> expression TIMES . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 76

state 31

    (42) expression -> expression DIV . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 77

state 32

    (43) expression -> expression MOD . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 78

state 33

    (44) expression -> expression PLUS_ASSIGN . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 79

state 34

    (45) expression -> expression MINUS_ASSIGN . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 80

state 35

    (46) expression -> expression MULT_ASSIGN . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 81

state 36

    (47) expression -> expression DIV_ASSIGN . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 82

state 37

    (48) expression -> expression MOD_ASSIGN . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 83

state 38

    (49) expression -> expression POT . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 84

state 39

    (50) expression -> expression AND . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 85

state 40

    (51) expression -> expression OR . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 86

state 41

    (52) expression -> expression EQ . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 87

state 42

    (53) expression -> expression NEQ . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 88

state 43

    (54) expression -> expression STRICT_EQ . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 89

state 44

    (55) expression -> expression STRICT_NEQ . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 90

state 45

    (56) expression -> expression LT . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 91

state 46

    (57) expression -> expression GT . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 92

state 47

    (58) expression -> expression LE . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 93

state 48

    (59) expression -> expression GE . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 94

state 49

    (62) expression -> expression DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 95


state 50

    (63) expression -> expression LBRACKET . expression RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 96

state 51

    (69) expression -> expression PLUSPLUS .

    SEMICOLON       reduce using rule 69 (expression -> expression PLUSPLUS .)
    PLUS            reduce using rule 69 (expression -> expression PLUSPLUS .)
    MINUS           reduce using rule 69 (expression -> expression PLUSPLUS .)
    TIMES           reduce using rule 69 (expression -> expression PLUSPLUS .)
    DIV             reduce using rule 69 (expression -> expression PLUSPLUS .)
    MOD             reduce using rule 69 (expression -> expression PLUSPLUS .)
    PLUS_ASSIGN     reduce using rule 69 (expression -> expression PLUSPLUS .)
    MINUS_ASSIGN    reduce using rule 69 (expression -> expression PLUSPLUS .)
    MULT_ASSIGN     reduce using rule 69 (expression -> expression PLUSPLUS .)
    DIV_ASSIGN      reduce using rule 69 (expression -> expression PLUSPLUS .)
    MOD_ASSIGN      reduce using rule 69 (expression -> expression PLUSPLUS .)
    POT             reduce using rule 69 (expression -> expression PLUSPLUS .)
    AND             reduce using rule 69 (expression -> expression PLUSPLUS .)
    OR              reduce using rule 69 (expression -> expression PLUSPLUS .)
    EQ              reduce using rule 69 (expression -> expression PLUSPLUS .)
    NEQ             reduce using rule 69 (expression -> expression PLUSPLUS .)
    STRICT_EQ       reduce using rule 69 (expression -> expression PLUSPLUS .)
    STRICT_NEQ      reduce using rule 69 (expression -> expression PLUSPLUS .)
    LT              reduce using rule 69 (expression -> expression PLUSPLUS .)
    GT              reduce using rule 69 (expression -> expression PLUSPLUS .)
    LE              reduce using rule 69 (expression -> expression PLUSPLUS .)
    GE              reduce using rule 69 (expression -> expression PLUSPLUS .)
    DOT             reduce using rule 69 (expression -> expression PLUSPLUS .)
    LBRACKET        reduce using rule 69 (expression -> expression PLUSPLUS .)
    PLUSPLUS        reduce using rule 69 (expression -> expression PLUSPLUS .)
    MINUSMINUS      reduce using rule 69 (expression -> expression PLUSPLUS .)
    RPAREN          reduce using rule 69 (expression -> expression PLUSPLUS .)
    RBRACKET        reduce using rule 69 (expression -> expression PLUSPLUS .)
    COMMA           reduce using rule 69 (expression -> expression PLUSPLUS .)


state 52

    (70) expression -> expression MINUSMINUS .

    SEMICOLON       reduce using rule 70 (expression -> expression MINUSMINUS .)
    PLUS            reduce using rule 70 (expression -> expression MINUSMINUS .)
    MINUS           reduce using rule 70 (expression -> expression MINUSMINUS .)
    TIMES           reduce using rule 70 (expression -> expression MINUSMINUS .)
    DIV             reduce using rule 70 (expression -> expression MINUSMINUS .)
    MOD             reduce using rule 70 (expression -> expression MINUSMINUS .)
    PLUS_ASSIGN     reduce using rule 70 (expression -> expression MINUSMINUS .)
    MINUS_ASSIGN    reduce using rule 70 (expression -> expression MINUSMINUS .)
    MULT_ASSIGN     reduce using rule 70 (expression -> expression MINUSMINUS .)
    DIV_ASSIGN      reduce using rule 70 (expression -> expression MINUSMINUS .)
    MOD_ASSIGN      reduce using rule 70 (expression -> expression MINUSMINUS .)
    POT             reduce using rule 70 (expression -> expression MINUSMINUS .)
    AND             reduce using rule 70 (expression -> expression MINUSMINUS .)
    OR              reduce using rule 70 (expression -> expression MINUSMINUS .)
    EQ              reduce using rule 70 (expression -> expression MINUSMINUS .)
    NEQ             reduce using rule 70 (expression -> expression MINUSMINUS .)
    STRICT_EQ       reduce using rule 70 (expression -> expression MINUSMINUS .)
    STRICT_NEQ      reduce using rule 70 (expression -> expression MINUSMINUS .)
    LT              reduce using rule 70 (expression -> expression MINUSMINUS .)
    GT              reduce using rule 70 (expression -> expression MINUSMINUS .)
    LE              reduce using rule 70 (expression -> expression MINUSMINUS .)
    GE              reduce using rule 70 (expression -> expression MINUSMINUS .)
    DOT             reduce using rule 70 (expression -> expression MINUSMINUS .)
    LBRACKET        reduce using rule 70 (expression -> expression MINUSMINUS .)
    PLUSPLUS        reduce using rule 70 (expression -> expression MINUSMINUS .)
    MINUSMINUS      reduce using rule 70 (expression -> expression MINUSMINUS .)
    RPAREN          reduce using rule 70 (expression -> expression MINUSMINUS .)
    RBRACKET        reduce using rule 70 (expression -> expression MINUSMINUS .)
    COMMA           reduce using rule 70 (expression -> expression MINUSMINUS .)


state 53

    (11) letAssignment -> LET IDENTIFIER . COLON type EQUAL expression SEMICOLON
    (12) letAssignment -> LET IDENTIFIER . EQUAL expression SEMICOLON
    (13) declaracion -> LET IDENTIFIER . COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON

    COLON           shift and go to state 97
    EQUAL           shift and go to state 98


state 54

    (64) expression -> IDENTIFIER LPAREN . lista_expresiones_opt RPAREN
    (14) lista_expresiones_opt -> . lista_expresiones
    (15) lista_expresiones_opt -> . empty
    (16) lista_expresiones -> . expression
    (17) lista_expresiones -> . expression COMMA lista_expresiones
    (90) empty -> .
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    RPAREN          reduce using rule 90 (empty -> .)
    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    lista_expresiones_opt          shift and go to state 99
    lista_expresiones              shift and go to state 100
    empty                          shift and go to state 101
    expression                     shift and go to state 102

state 55

    (29) function -> FUNCTION IDENTIFIER . LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE

    LPAREN          shift and go to state 103


state 56

    (61) expression -> LPAREN expression . RPAREN
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

    RPAREN          shift and go to state 104
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52


state 57

    (78) statement -> LBRACE instruction_list . RBRACE
    (87) instruction_list -> instruction_list . statement
    (78) statement -> . LBRACE instruction_list RBRACE
    (79) statement -> . letAssignment
    (80) statement -> . declaracion
    (81) statement -> . function
    (82) statement -> . consolelog
    (83) statement -> . expression SEMICOLON
    (84) statement -> . controlEstructure
    (85) statement -> . RETURN expression SEMICOLON
    (86) statement -> . forEstructure
    (11) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (12) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (13) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (29) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (73) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression
    (74) controlEstructure -> . IF LPAREN expression RPAREN statement
    (75) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (76) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (77) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (18) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement

    RBRACE          shift and go to state 105
    LBRACE          shift and go to state 15
    RETURN          shift and go to state 18
    LET             shift and go to state 11
    FUNCTION        shift and go to state 13
    CONSOLE         shift and go to state 25
    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24
    IF              shift and go to state 16
    FOR             shift and go to state 17

    statement                      shift and go to state 106
    letAssignment                  shift and go to state 60
    declaracion                    shift and go to state 61
    function                       shift and go to state 62
    consolelog                     shift and go to state 63
    expression                     shift and go to state 64
    controlEstructure              shift and go to state 65
    forEstructure                  shift and go to state 66

state 58

    (88) instruction_list -> statement .

    RBRACE          reduce using rule 88 (instruction_list -> statement .)
    LBRACE          reduce using rule 88 (instruction_list -> statement .)
    RETURN          reduce using rule 88 (instruction_list -> statement .)
    LET             reduce using rule 88 (instruction_list -> statement .)
    FUNCTION        reduce using rule 88 (instruction_list -> statement .)
    CONSOLE         reduce using rule 88 (instruction_list -> statement .)
    NOT             reduce using rule 88 (instruction_list -> statement .)
    LPAREN          reduce using rule 88 (instruction_list -> statement .)
    IDENTIFIER      reduce using rule 88 (instruction_list -> statement .)
    NUMBER          reduce using rule 88 (instruction_list -> statement .)
    FLOAT           reduce using rule 88 (instruction_list -> statement .)
    STRING          reduce using rule 88 (instruction_list -> statement .)
    PLUSPLUS        reduce using rule 88 (instruction_list -> statement .)
    MINUSMINUS      reduce using rule 88 (instruction_list -> statement .)
    IF              reduce using rule 88 (instruction_list -> statement .)
    FOR             reduce using rule 88 (instruction_list -> statement .)


state 59

    (89) instruction_list -> empty .

    RBRACE          reduce using rule 89 (instruction_list -> empty .)
    LBRACE          reduce using rule 89 (instruction_list -> empty .)
    RETURN          reduce using rule 89 (instruction_list -> empty .)
    LET             reduce using rule 89 (instruction_list -> empty .)
    FUNCTION        reduce using rule 89 (instruction_list -> empty .)
    CONSOLE         reduce using rule 89 (instruction_list -> empty .)
    NOT             reduce using rule 89 (instruction_list -> empty .)
    LPAREN          reduce using rule 89 (instruction_list -> empty .)
    IDENTIFIER      reduce using rule 89 (instruction_list -> empty .)
    NUMBER          reduce using rule 89 (instruction_list -> empty .)
    FLOAT           reduce using rule 89 (instruction_list -> empty .)
    STRING          reduce using rule 89 (instruction_list -> empty .)
    PLUSPLUS        reduce using rule 89 (instruction_list -> empty .)
    MINUSMINUS      reduce using rule 89 (instruction_list -> empty .)
    IF              reduce using rule 89 (instruction_list -> empty .)
    FOR             reduce using rule 89 (instruction_list -> empty .)


state 60

    (79) statement -> letAssignment .

    RBRACE          reduce using rule 79 (statement -> letAssignment .)
    LBRACE          reduce using rule 79 (statement -> letAssignment .)
    RETURN          reduce using rule 79 (statement -> letAssignment .)
    LET             reduce using rule 79 (statement -> letAssignment .)
    FUNCTION        reduce using rule 79 (statement -> letAssignment .)
    CONSOLE         reduce using rule 79 (statement -> letAssignment .)
    NOT             reduce using rule 79 (statement -> letAssignment .)
    LPAREN          reduce using rule 79 (statement -> letAssignment .)
    IDENTIFIER      reduce using rule 79 (statement -> letAssignment .)
    NUMBER          reduce using rule 79 (statement -> letAssignment .)
    FLOAT           reduce using rule 79 (statement -> letAssignment .)
    STRING          reduce using rule 79 (statement -> letAssignment .)
    PLUSPLUS        reduce using rule 79 (statement -> letAssignment .)
    MINUSMINUS      reduce using rule 79 (statement -> letAssignment .)
    IF              reduce using rule 79 (statement -> letAssignment .)
    FOR             reduce using rule 79 (statement -> letAssignment .)
    ELSE            reduce using rule 79 (statement -> letAssignment .)
    $end            reduce using rule 79 (statement -> letAssignment .)


state 61

    (80) statement -> declaracion .

    RBRACE          reduce using rule 80 (statement -> declaracion .)
    LBRACE          reduce using rule 80 (statement -> declaracion .)
    RETURN          reduce using rule 80 (statement -> declaracion .)
    LET             reduce using rule 80 (statement -> declaracion .)
    FUNCTION        reduce using rule 80 (statement -> declaracion .)
    CONSOLE         reduce using rule 80 (statement -> declaracion .)
    NOT             reduce using rule 80 (statement -> declaracion .)
    LPAREN          reduce using rule 80 (statement -> declaracion .)
    IDENTIFIER      reduce using rule 80 (statement -> declaracion .)
    NUMBER          reduce using rule 80 (statement -> declaracion .)
    FLOAT           reduce using rule 80 (statement -> declaracion .)
    STRING          reduce using rule 80 (statement -> declaracion .)
    PLUSPLUS        reduce using rule 80 (statement -> declaracion .)
    MINUSMINUS      reduce using rule 80 (statement -> declaracion .)
    IF              reduce using rule 80 (statement -> declaracion .)
    FOR             reduce using rule 80 (statement -> declaracion .)
    ELSE            reduce using rule 80 (statement -> declaracion .)
    $end            reduce using rule 80 (statement -> declaracion .)


state 62

    (81) statement -> function .

    RBRACE          reduce using rule 81 (statement -> function .)
    LBRACE          reduce using rule 81 (statement -> function .)
    RETURN          reduce using rule 81 (statement -> function .)
    LET             reduce using rule 81 (statement -> function .)
    FUNCTION        reduce using rule 81 (statement -> function .)
    CONSOLE         reduce using rule 81 (statement -> function .)
    NOT             reduce using rule 81 (statement -> function .)
    LPAREN          reduce using rule 81 (statement -> function .)
    IDENTIFIER      reduce using rule 81 (statement -> function .)
    NUMBER          reduce using rule 81 (statement -> function .)
    FLOAT           reduce using rule 81 (statement -> function .)
    STRING          reduce using rule 81 (statement -> function .)
    PLUSPLUS        reduce using rule 81 (statement -> function .)
    MINUSMINUS      reduce using rule 81 (statement -> function .)
    IF              reduce using rule 81 (statement -> function .)
    FOR             reduce using rule 81 (statement -> function .)
    ELSE            reduce using rule 81 (statement -> function .)
    $end            reduce using rule 81 (statement -> function .)


state 63

    (82) statement -> consolelog .

    RBRACE          reduce using rule 82 (statement -> consolelog .)
    LBRACE          reduce using rule 82 (statement -> consolelog .)
    RETURN          reduce using rule 82 (statement -> consolelog .)
    LET             reduce using rule 82 (statement -> consolelog .)
    FUNCTION        reduce using rule 82 (statement -> consolelog .)
    CONSOLE         reduce using rule 82 (statement -> consolelog .)
    NOT             reduce using rule 82 (statement -> consolelog .)
    LPAREN          reduce using rule 82 (statement -> consolelog .)
    IDENTIFIER      reduce using rule 82 (statement -> consolelog .)
    NUMBER          reduce using rule 82 (statement -> consolelog .)
    FLOAT           reduce using rule 82 (statement -> consolelog .)
    STRING          reduce using rule 82 (statement -> consolelog .)
    PLUSPLUS        reduce using rule 82 (statement -> consolelog .)
    MINUSMINUS      reduce using rule 82 (statement -> consolelog .)
    IF              reduce using rule 82 (statement -> consolelog .)
    FOR             reduce using rule 82 (statement -> consolelog .)
    ELSE            reduce using rule 82 (statement -> consolelog .)
    $end            reduce using rule 82 (statement -> consolelog .)


state 64

    (83) statement -> expression . SEMICOLON
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

    SEMICOLON       shift and go to state 107
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52


state 65

    (84) statement -> controlEstructure .

    RBRACE          reduce using rule 84 (statement -> controlEstructure .)
    LBRACE          reduce using rule 84 (statement -> controlEstructure .)
    RETURN          reduce using rule 84 (statement -> controlEstructure .)
    LET             reduce using rule 84 (statement -> controlEstructure .)
    FUNCTION        reduce using rule 84 (statement -> controlEstructure .)
    CONSOLE         reduce using rule 84 (statement -> controlEstructure .)
    NOT             reduce using rule 84 (statement -> controlEstructure .)
    LPAREN          reduce using rule 84 (statement -> controlEstructure .)
    IDENTIFIER      reduce using rule 84 (statement -> controlEstructure .)
    NUMBER          reduce using rule 84 (statement -> controlEstructure .)
    FLOAT           reduce using rule 84 (statement -> controlEstructure .)
    STRING          reduce using rule 84 (statement -> controlEstructure .)
    PLUSPLUS        reduce using rule 84 (statement -> controlEstructure .)
    MINUSMINUS      reduce using rule 84 (statement -> controlEstructure .)
    IF              reduce using rule 84 (statement -> controlEstructure .)
    FOR             reduce using rule 84 (statement -> controlEstructure .)
    ELSE            reduce using rule 84 (statement -> controlEstructure .)
    $end            reduce using rule 84 (statement -> controlEstructure .)


state 66

    (86) statement -> forEstructure .

    RBRACE          reduce using rule 86 (statement -> forEstructure .)
    LBRACE          reduce using rule 86 (statement -> forEstructure .)
    RETURN          reduce using rule 86 (statement -> forEstructure .)
    LET             reduce using rule 86 (statement -> forEstructure .)
    FUNCTION        reduce using rule 86 (statement -> forEstructure .)
    CONSOLE         reduce using rule 86 (statement -> forEstructure .)
    NOT             reduce using rule 86 (statement -> forEstructure .)
    LPAREN          reduce using rule 86 (statement -> forEstructure .)
    IDENTIFIER      reduce using rule 86 (statement -> forEstructure .)
    NUMBER          reduce using rule 86 (statement -> forEstructure .)
    FLOAT           reduce using rule 86 (statement -> forEstructure .)
    STRING          reduce using rule 86 (statement -> forEstructure .)
    PLUSPLUS        reduce using rule 86 (statement -> forEstructure .)
    MINUSMINUS      reduce using rule 86 (statement -> forEstructure .)
    IF              reduce using rule 86 (statement -> forEstructure .)
    FOR             reduce using rule 86 (statement -> forEstructure .)
    ELSE            reduce using rule 86 (statement -> forEstructure .)
    $end            reduce using rule 86 (statement -> forEstructure .)


state 67

    (74) controlEstructure -> IF LPAREN . expression RPAREN statement
    (75) controlEstructure -> IF LPAREN . expression RPAREN statement ELSE statement
    (76) controlEstructure -> IF LPAREN . expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (77) controlEstructure -> IF LPAREN . expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 108

state 68

    (18) forEstructure -> FOR LPAREN . for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (19) for_init -> . LET IDENTIFIER EQUAL expression
    (20) for_init -> . LET IDENTIFIER COLON type EQUAL expression
    (21) for_init -> . expression
    (22) for_init -> . empty
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression
    (90) empty -> .

    LET             shift and go to state 111
    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24
    SEMICOLON       reduce using rule 90 (empty -> .)

    for_init                       shift and go to state 109
    expression                     shift and go to state 110
    empty                          shift and go to state 112

state 69

    (85) statement -> RETURN expression . SEMICOLON
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

    SEMICOLON       shift and go to state 113
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52


state 70

    (60) expression -> NOT expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 60 (expression -> NOT expression .)
    RPAREN          reduce using rule 60 (expression -> NOT expression .)
    RBRACKET        reduce using rule 60 (expression -> NOT expression .)
    COMMA           reduce using rule 60 (expression -> NOT expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52

  ! PLUS            [ reduce using rule 60 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 60 (expression -> NOT expression .) ]
  ! TIMES           [ reduce using rule 60 (expression -> NOT expression .) ]
  ! DIV             [ reduce using rule 60 (expression -> NOT expression .) ]
  ! MOD             [ reduce using rule 60 (expression -> NOT expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 60 (expression -> NOT expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 60 (expression -> NOT expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 60 (expression -> NOT expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 60 (expression -> NOT expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 60 (expression -> NOT expression .) ]
  ! POT             [ reduce using rule 60 (expression -> NOT expression .) ]
  ! AND             [ reduce using rule 60 (expression -> NOT expression .) ]
  ! OR              [ reduce using rule 60 (expression -> NOT expression .) ]
  ! EQ              [ reduce using rule 60 (expression -> NOT expression .) ]
  ! NEQ             [ reduce using rule 60 (expression -> NOT expression .) ]
  ! STRICT_EQ       [ reduce using rule 60 (expression -> NOT expression .) ]
  ! STRICT_NEQ      [ reduce using rule 60 (expression -> NOT expression .) ]
  ! LT              [ reduce using rule 60 (expression -> NOT expression .) ]
  ! GT              [ reduce using rule 60 (expression -> NOT expression .) ]
  ! LE              [ reduce using rule 60 (expression -> NOT expression .) ]
  ! GE              [ reduce using rule 60 (expression -> NOT expression .) ]
  ! DOT             [ reduce using rule 60 (expression -> NOT expression .) ]
  ! LBRACKET        [ reduce using rule 60 (expression -> NOT expression .) ]
  ! PLUSPLUS        [ reduce using rule 60 (expression -> NOT expression .) ]
  ! MINUSMINUS      [ reduce using rule 60 (expression -> NOT expression .) ]


state 71

    (71) expression -> PLUSPLUS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 71 (expression -> PLUSPLUS expression .)
    RPAREN          reduce using rule 71 (expression -> PLUSPLUS expression .)
    RBRACKET        reduce using rule 71 (expression -> PLUSPLUS expression .)
    COMMA           reduce using rule 71 (expression -> PLUSPLUS expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52

  ! PLUS            [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! MINUS           [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! TIMES           [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! DIV             [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! MOD             [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! POT             [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! AND             [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! OR              [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! EQ              [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! NEQ             [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! STRICT_EQ       [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! STRICT_NEQ      [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! LT              [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! GT              [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! LE              [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! GE              [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! DOT             [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! LBRACKET        [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! PLUSPLUS        [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! MINUSMINUS      [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]


state 72

    (72) expression -> MINUSMINUS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 72 (expression -> MINUSMINUS expression .)
    RPAREN          reduce using rule 72 (expression -> MINUSMINUS expression .)
    RBRACKET        reduce using rule 72 (expression -> MINUSMINUS expression .)
    COMMA           reduce using rule 72 (expression -> MINUSMINUS expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52

  ! PLUS            [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! MINUS           [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! TIMES           [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! DIV             [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! MOD             [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! POT             [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! AND             [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! OR              [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! EQ              [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! NEQ             [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! STRICT_EQ       [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! STRICT_NEQ      [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! LT              [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! GT              [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! LE              [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! GE              [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! DOT             [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! LBRACKET        [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! PLUSPLUS        [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! MINUSMINUS      [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]


state 73

    (73) consolelog -> CONSOLE DOT . LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON

    LOG             shift and go to state 114


state 74

    (39) expression -> expression PLUS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 39 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 39 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 39 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 39 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52

  ! PLUS            [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! DIV             [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! POT             [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! OR              [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! EQ              [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! NEQ             [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! STRICT_EQ       [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! STRICT_NEQ      [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! LT              [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! GT              [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! LE              [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! GE              [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! DOT             [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! LBRACKET        [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! PLUSPLUS        [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! MINUSMINUS      [ reduce using rule 39 (expression -> expression PLUS expression .) ]


state 75

    (40) expression -> expression MINUS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 40 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 40 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 40 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 40 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52

  ! PLUS            [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! DIV             [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! POT             [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! OR              [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! EQ              [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! NEQ             [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! STRICT_EQ       [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! STRICT_NEQ      [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! LT              [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! GT              [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! LE              [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! GE              [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! DOT             [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! LBRACKET        [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! PLUSPLUS        [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! MINUSMINUS      [ reduce using rule 40 (expression -> expression MINUS expression .) ]


state 76

    (41) expression -> expression TIMES expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 41 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 41 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 41 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 41 (expression -> expression TIMES expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52

  ! PLUS            [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! DIV             [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! MOD             [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! POT             [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! AND             [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! OR              [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! EQ              [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! NEQ             [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! STRICT_EQ       [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! STRICT_NEQ      [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! LT              [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! GT              [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! LE              [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! GE              [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! DOT             [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! LBRACKET        [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! PLUSPLUS        [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! MINUSMINUS      [ reduce using rule 41 (expression -> expression TIMES expression .) ]


state 77

    (42) expression -> expression DIV expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 42 (expression -> expression DIV expression .)
    RPAREN          reduce using rule 42 (expression -> expression DIV expression .)
    RBRACKET        reduce using rule 42 (expression -> expression DIV expression .)
    COMMA           reduce using rule 42 (expression -> expression DIV expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52

  ! PLUS            [ reduce using rule 42 (expression -> expression DIV expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression DIV expression .) ]
  ! TIMES           [ reduce using rule 42 (expression -> expression DIV expression .) ]
  ! DIV             [ reduce using rule 42 (expression -> expression DIV expression .) ]
  ! MOD             [ reduce using rule 42 (expression -> expression DIV expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 42 (expression -> expression DIV expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 42 (expression -> expression DIV expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 42 (expression -> expression DIV expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 42 (expression -> expression DIV expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 42 (expression -> expression DIV expression .) ]
  ! POT             [ reduce using rule 42 (expression -> expression DIV expression .) ]
  ! AND             [ reduce using rule 42 (expression -> expression DIV expression .) ]
  ! OR              [ reduce using rule 42 (expression -> expression DIV expression .) ]
  ! EQ              [ reduce using rule 42 (expression -> expression DIV expression .) ]
  ! NEQ             [ reduce using rule 42 (expression -> expression DIV expression .) ]
  ! STRICT_EQ       [ reduce using rule 42 (expression -> expression DIV expression .) ]
  ! STRICT_NEQ      [ reduce using rule 42 (expression -> expression DIV expression .) ]
  ! LT              [ reduce using rule 42 (expression -> expression DIV expression .) ]
  ! GT              [ reduce using rule 42 (expression -> expression DIV expression .) ]
  ! LE              [ reduce using rule 42 (expression -> expression DIV expression .) ]
  ! GE              [ reduce using rule 42 (expression -> expression DIV expression .) ]
  ! DOT             [ reduce using rule 42 (expression -> expression DIV expression .) ]
  ! LBRACKET        [ reduce using rule 42 (expression -> expression DIV expression .) ]
  ! PLUSPLUS        [ reduce using rule 42 (expression -> expression DIV expression .) ]
  ! MINUSMINUS      [ reduce using rule 42 (expression -> expression DIV expression .) ]


state 78

    (43) expression -> expression MOD expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 43 (expression -> expression MOD expression .)
    RPAREN          reduce using rule 43 (expression -> expression MOD expression .)
    RBRACKET        reduce using rule 43 (expression -> expression MOD expression .)
    COMMA           reduce using rule 43 (expression -> expression MOD expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52

  ! PLUS            [ reduce using rule 43 (expression -> expression MOD expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> expression MOD expression .) ]
  ! TIMES           [ reduce using rule 43 (expression -> expression MOD expression .) ]
  ! DIV             [ reduce using rule 43 (expression -> expression MOD expression .) ]
  ! MOD             [ reduce using rule 43 (expression -> expression MOD expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 43 (expression -> expression MOD expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 43 (expression -> expression MOD expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 43 (expression -> expression MOD expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 43 (expression -> expression MOD expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 43 (expression -> expression MOD expression .) ]
  ! POT             [ reduce using rule 43 (expression -> expression MOD expression .) ]
  ! AND             [ reduce using rule 43 (expression -> expression MOD expression .) ]
  ! OR              [ reduce using rule 43 (expression -> expression MOD expression .) ]
  ! EQ              [ reduce using rule 43 (expression -> expression MOD expression .) ]
  ! NEQ             [ reduce using rule 43 (expression -> expression MOD expression .) ]
  ! STRICT_EQ       [ reduce using rule 43 (expression -> expression MOD expression .) ]
  ! STRICT_NEQ      [ reduce using rule 43 (expression -> expression MOD expression .) ]
  ! LT              [ reduce using rule 43 (expression -> expression MOD expression .) ]
  ! GT              [ reduce using rule 43 (expression -> expression MOD expression .) ]
  ! LE              [ reduce using rule 43 (expression -> expression MOD expression .) ]
  ! GE              [ reduce using rule 43 (expression -> expression MOD expression .) ]
  ! DOT             [ reduce using rule 43 (expression -> expression MOD expression .) ]
  ! LBRACKET        [ reduce using rule 43 (expression -> expression MOD expression .) ]
  ! PLUSPLUS        [ reduce using rule 43 (expression -> expression MOD expression .) ]
  ! MINUSMINUS      [ reduce using rule 43 (expression -> expression MOD expression .) ]


state 79

    (44) expression -> expression PLUS_ASSIGN expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 44 (expression -> expression PLUS_ASSIGN expression .)
    RPAREN          reduce using rule 44 (expression -> expression PLUS_ASSIGN expression .)
    RBRACKET        reduce using rule 44 (expression -> expression PLUS_ASSIGN expression .)
    COMMA           reduce using rule 44 (expression -> expression PLUS_ASSIGN expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52

  ! PLUS            [ reduce using rule 44 (expression -> expression PLUS_ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression PLUS_ASSIGN expression .) ]
  ! TIMES           [ reduce using rule 44 (expression -> expression PLUS_ASSIGN expression .) ]
  ! DIV             [ reduce using rule 44 (expression -> expression PLUS_ASSIGN expression .) ]
  ! MOD             [ reduce using rule 44 (expression -> expression PLUS_ASSIGN expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 44 (expression -> expression PLUS_ASSIGN expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 44 (expression -> expression PLUS_ASSIGN expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 44 (expression -> expression PLUS_ASSIGN expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 44 (expression -> expression PLUS_ASSIGN expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 44 (expression -> expression PLUS_ASSIGN expression .) ]
  ! POT             [ reduce using rule 44 (expression -> expression PLUS_ASSIGN expression .) ]
  ! AND             [ reduce using rule 44 (expression -> expression PLUS_ASSIGN expression .) ]
  ! OR              [ reduce using rule 44 (expression -> expression PLUS_ASSIGN expression .) ]
  ! EQ              [ reduce using rule 44 (expression -> expression PLUS_ASSIGN expression .) ]
  ! NEQ             [ reduce using rule 44 (expression -> expression PLUS_ASSIGN expression .) ]
  ! STRICT_EQ       [ reduce using rule 44 (expression -> expression PLUS_ASSIGN expression .) ]
  ! STRICT_NEQ      [ reduce using rule 44 (expression -> expression PLUS_ASSIGN expression .) ]
  ! LT              [ reduce using rule 44 (expression -> expression PLUS_ASSIGN expression .) ]
  ! GT              [ reduce using rule 44 (expression -> expression PLUS_ASSIGN expression .) ]
  ! LE              [ reduce using rule 44 (expression -> expression PLUS_ASSIGN expression .) ]
  ! GE              [ reduce using rule 44 (expression -> expression PLUS_ASSIGN expression .) ]
  ! DOT             [ reduce using rule 44 (expression -> expression PLUS_ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 44 (expression -> expression PLUS_ASSIGN expression .) ]
  ! PLUSPLUS        [ reduce using rule 44 (expression -> expression PLUS_ASSIGN expression .) ]
  ! MINUSMINUS      [ reduce using rule 44 (expression -> expression PLUS_ASSIGN expression .) ]


state 80

    (45) expression -> expression MINUS_ASSIGN expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 45 (expression -> expression MINUS_ASSIGN expression .)
    RPAREN          reduce using rule 45 (expression -> expression MINUS_ASSIGN expression .)
    RBRACKET        reduce using rule 45 (expression -> expression MINUS_ASSIGN expression .)
    COMMA           reduce using rule 45 (expression -> expression MINUS_ASSIGN expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52

  ! PLUS            [ reduce using rule 45 (expression -> expression MINUS_ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> expression MINUS_ASSIGN expression .) ]
  ! TIMES           [ reduce using rule 45 (expression -> expression MINUS_ASSIGN expression .) ]
  ! DIV             [ reduce using rule 45 (expression -> expression MINUS_ASSIGN expression .) ]
  ! MOD             [ reduce using rule 45 (expression -> expression MINUS_ASSIGN expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 45 (expression -> expression MINUS_ASSIGN expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 45 (expression -> expression MINUS_ASSIGN expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 45 (expression -> expression MINUS_ASSIGN expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 45 (expression -> expression MINUS_ASSIGN expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 45 (expression -> expression MINUS_ASSIGN expression .) ]
  ! POT             [ reduce using rule 45 (expression -> expression MINUS_ASSIGN expression .) ]
  ! AND             [ reduce using rule 45 (expression -> expression MINUS_ASSIGN expression .) ]
  ! OR              [ reduce using rule 45 (expression -> expression MINUS_ASSIGN expression .) ]
  ! EQ              [ reduce using rule 45 (expression -> expression MINUS_ASSIGN expression .) ]
  ! NEQ             [ reduce using rule 45 (expression -> expression MINUS_ASSIGN expression .) ]
  ! STRICT_EQ       [ reduce using rule 45 (expression -> expression MINUS_ASSIGN expression .) ]
  ! STRICT_NEQ      [ reduce using rule 45 (expression -> expression MINUS_ASSIGN expression .) ]
  ! LT              [ reduce using rule 45 (expression -> expression MINUS_ASSIGN expression .) ]
  ! GT              [ reduce using rule 45 (expression -> expression MINUS_ASSIGN expression .) ]
  ! LE              [ reduce using rule 45 (expression -> expression MINUS_ASSIGN expression .) ]
  ! GE              [ reduce using rule 45 (expression -> expression MINUS_ASSIGN expression .) ]
  ! DOT             [ reduce using rule 45 (expression -> expression MINUS_ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 45 (expression -> expression MINUS_ASSIGN expression .) ]
  ! PLUSPLUS        [ reduce using rule 45 (expression -> expression MINUS_ASSIGN expression .) ]
  ! MINUSMINUS      [ reduce using rule 45 (expression -> expression MINUS_ASSIGN expression .) ]


state 81

    (46) expression -> expression MULT_ASSIGN expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 46 (expression -> expression MULT_ASSIGN expression .)
    RPAREN          reduce using rule 46 (expression -> expression MULT_ASSIGN expression .)
    RBRACKET        reduce using rule 46 (expression -> expression MULT_ASSIGN expression .)
    COMMA           reduce using rule 46 (expression -> expression MULT_ASSIGN expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52

  ! PLUS            [ reduce using rule 46 (expression -> expression MULT_ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression MULT_ASSIGN expression .) ]
  ! TIMES           [ reduce using rule 46 (expression -> expression MULT_ASSIGN expression .) ]
  ! DIV             [ reduce using rule 46 (expression -> expression MULT_ASSIGN expression .) ]
  ! MOD             [ reduce using rule 46 (expression -> expression MULT_ASSIGN expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 46 (expression -> expression MULT_ASSIGN expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 46 (expression -> expression MULT_ASSIGN expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 46 (expression -> expression MULT_ASSIGN expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 46 (expression -> expression MULT_ASSIGN expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 46 (expression -> expression MULT_ASSIGN expression .) ]
  ! POT             [ reduce using rule 46 (expression -> expression MULT_ASSIGN expression .) ]
  ! AND             [ reduce using rule 46 (expression -> expression MULT_ASSIGN expression .) ]
  ! OR              [ reduce using rule 46 (expression -> expression MULT_ASSIGN expression .) ]
  ! EQ              [ reduce using rule 46 (expression -> expression MULT_ASSIGN expression .) ]
  ! NEQ             [ reduce using rule 46 (expression -> expression MULT_ASSIGN expression .) ]
  ! STRICT_EQ       [ reduce using rule 46 (expression -> expression MULT_ASSIGN expression .) ]
  ! STRICT_NEQ      [ reduce using rule 46 (expression -> expression MULT_ASSIGN expression .) ]
  ! LT              [ reduce using rule 46 (expression -> expression MULT_ASSIGN expression .) ]
  ! GT              [ reduce using rule 46 (expression -> expression MULT_ASSIGN expression .) ]
  ! LE              [ reduce using rule 46 (expression -> expression MULT_ASSIGN expression .) ]
  ! GE              [ reduce using rule 46 (expression -> expression MULT_ASSIGN expression .) ]
  ! DOT             [ reduce using rule 46 (expression -> expression MULT_ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 46 (expression -> expression MULT_ASSIGN expression .) ]
  ! PLUSPLUS        [ reduce using rule 46 (expression -> expression MULT_ASSIGN expression .) ]
  ! MINUSMINUS      [ reduce using rule 46 (expression -> expression MULT_ASSIGN expression .) ]


state 82

    (47) expression -> expression DIV_ASSIGN expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 47 (expression -> expression DIV_ASSIGN expression .)
    RPAREN          reduce using rule 47 (expression -> expression DIV_ASSIGN expression .)
    RBRACKET        reduce using rule 47 (expression -> expression DIV_ASSIGN expression .)
    COMMA           reduce using rule 47 (expression -> expression DIV_ASSIGN expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52

  ! PLUS            [ reduce using rule 47 (expression -> expression DIV_ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> expression DIV_ASSIGN expression .) ]
  ! TIMES           [ reduce using rule 47 (expression -> expression DIV_ASSIGN expression .) ]
  ! DIV             [ reduce using rule 47 (expression -> expression DIV_ASSIGN expression .) ]
  ! MOD             [ reduce using rule 47 (expression -> expression DIV_ASSIGN expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 47 (expression -> expression DIV_ASSIGN expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 47 (expression -> expression DIV_ASSIGN expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 47 (expression -> expression DIV_ASSIGN expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 47 (expression -> expression DIV_ASSIGN expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 47 (expression -> expression DIV_ASSIGN expression .) ]
  ! POT             [ reduce using rule 47 (expression -> expression DIV_ASSIGN expression .) ]
  ! AND             [ reduce using rule 47 (expression -> expression DIV_ASSIGN expression .) ]
  ! OR              [ reduce using rule 47 (expression -> expression DIV_ASSIGN expression .) ]
  ! EQ              [ reduce using rule 47 (expression -> expression DIV_ASSIGN expression .) ]
  ! NEQ             [ reduce using rule 47 (expression -> expression DIV_ASSIGN expression .) ]
  ! STRICT_EQ       [ reduce using rule 47 (expression -> expression DIV_ASSIGN expression .) ]
  ! STRICT_NEQ      [ reduce using rule 47 (expression -> expression DIV_ASSIGN expression .) ]
  ! LT              [ reduce using rule 47 (expression -> expression DIV_ASSIGN expression .) ]
  ! GT              [ reduce using rule 47 (expression -> expression DIV_ASSIGN expression .) ]
  ! LE              [ reduce using rule 47 (expression -> expression DIV_ASSIGN expression .) ]
  ! GE              [ reduce using rule 47 (expression -> expression DIV_ASSIGN expression .) ]
  ! DOT             [ reduce using rule 47 (expression -> expression DIV_ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 47 (expression -> expression DIV_ASSIGN expression .) ]
  ! PLUSPLUS        [ reduce using rule 47 (expression -> expression DIV_ASSIGN expression .) ]
  ! MINUSMINUS      [ reduce using rule 47 (expression -> expression DIV_ASSIGN expression .) ]


state 83

    (48) expression -> expression MOD_ASSIGN expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 48 (expression -> expression MOD_ASSIGN expression .)
    RPAREN          reduce using rule 48 (expression -> expression MOD_ASSIGN expression .)
    RBRACKET        reduce using rule 48 (expression -> expression MOD_ASSIGN expression .)
    COMMA           reduce using rule 48 (expression -> expression MOD_ASSIGN expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52

  ! PLUS            [ reduce using rule 48 (expression -> expression MOD_ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 48 (expression -> expression MOD_ASSIGN expression .) ]
  ! TIMES           [ reduce using rule 48 (expression -> expression MOD_ASSIGN expression .) ]
  ! DIV             [ reduce using rule 48 (expression -> expression MOD_ASSIGN expression .) ]
  ! MOD             [ reduce using rule 48 (expression -> expression MOD_ASSIGN expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 48 (expression -> expression MOD_ASSIGN expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 48 (expression -> expression MOD_ASSIGN expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 48 (expression -> expression MOD_ASSIGN expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 48 (expression -> expression MOD_ASSIGN expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 48 (expression -> expression MOD_ASSIGN expression .) ]
  ! POT             [ reduce using rule 48 (expression -> expression MOD_ASSIGN expression .) ]
  ! AND             [ reduce using rule 48 (expression -> expression MOD_ASSIGN expression .) ]
  ! OR              [ reduce using rule 48 (expression -> expression MOD_ASSIGN expression .) ]
  ! EQ              [ reduce using rule 48 (expression -> expression MOD_ASSIGN expression .) ]
  ! NEQ             [ reduce using rule 48 (expression -> expression MOD_ASSIGN expression .) ]
  ! STRICT_EQ       [ reduce using rule 48 (expression -> expression MOD_ASSIGN expression .) ]
  ! STRICT_NEQ      [ reduce using rule 48 (expression -> expression MOD_ASSIGN expression .) ]
  ! LT              [ reduce using rule 48 (expression -> expression MOD_ASSIGN expression .) ]
  ! GT              [ reduce using rule 48 (expression -> expression MOD_ASSIGN expression .) ]
  ! LE              [ reduce using rule 48 (expression -> expression MOD_ASSIGN expression .) ]
  ! GE              [ reduce using rule 48 (expression -> expression MOD_ASSIGN expression .) ]
  ! DOT             [ reduce using rule 48 (expression -> expression MOD_ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 48 (expression -> expression MOD_ASSIGN expression .) ]
  ! PLUSPLUS        [ reduce using rule 48 (expression -> expression MOD_ASSIGN expression .) ]
  ! MINUSMINUS      [ reduce using rule 48 (expression -> expression MOD_ASSIGN expression .) ]


state 84

    (49) expression -> expression POT expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 49 (expression -> expression POT expression .)
    RPAREN          reduce using rule 49 (expression -> expression POT expression .)
    RBRACKET        reduce using rule 49 (expression -> expression POT expression .)
    COMMA           reduce using rule 49 (expression -> expression POT expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52

  ! PLUS            [ reduce using rule 49 (expression -> expression POT expression .) ]
  ! MINUS           [ reduce using rule 49 (expression -> expression POT expression .) ]
  ! TIMES           [ reduce using rule 49 (expression -> expression POT expression .) ]
  ! DIV             [ reduce using rule 49 (expression -> expression POT expression .) ]
  ! MOD             [ reduce using rule 49 (expression -> expression POT expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 49 (expression -> expression POT expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 49 (expression -> expression POT expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 49 (expression -> expression POT expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 49 (expression -> expression POT expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 49 (expression -> expression POT expression .) ]
  ! POT             [ reduce using rule 49 (expression -> expression POT expression .) ]
  ! AND             [ reduce using rule 49 (expression -> expression POT expression .) ]
  ! OR              [ reduce using rule 49 (expression -> expression POT expression .) ]
  ! EQ              [ reduce using rule 49 (expression -> expression POT expression .) ]
  ! NEQ             [ reduce using rule 49 (expression -> expression POT expression .) ]
  ! STRICT_EQ       [ reduce using rule 49 (expression -> expression POT expression .) ]
  ! STRICT_NEQ      [ reduce using rule 49 (expression -> expression POT expression .) ]
  ! LT              [ reduce using rule 49 (expression -> expression POT expression .) ]
  ! GT              [ reduce using rule 49 (expression -> expression POT expression .) ]
  ! LE              [ reduce using rule 49 (expression -> expression POT expression .) ]
  ! GE              [ reduce using rule 49 (expression -> expression POT expression .) ]
  ! DOT             [ reduce using rule 49 (expression -> expression POT expression .) ]
  ! LBRACKET        [ reduce using rule 49 (expression -> expression POT expression .) ]
  ! PLUSPLUS        [ reduce using rule 49 (expression -> expression POT expression .) ]
  ! MINUSMINUS      [ reduce using rule 49 (expression -> expression POT expression .) ]


state 85

    (50) expression -> expression AND expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 50 (expression -> expression AND expression .)
    RPAREN          reduce using rule 50 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 50 (expression -> expression AND expression .)
    COMMA           reduce using rule 50 (expression -> expression AND expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52

  ! PLUS            [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! DIV             [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! MOD             [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! POT             [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! EQ              [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! NEQ             [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! STRICT_EQ       [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! STRICT_NEQ      [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! LE              [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! GE              [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! DOT             [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! LBRACKET        [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! PLUSPLUS        [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! MINUSMINUS      [ reduce using rule 50 (expression -> expression AND expression .) ]


state 86

    (51) expression -> expression OR expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 51 (expression -> expression OR expression .)
    RPAREN          reduce using rule 51 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 51 (expression -> expression OR expression .)
    COMMA           reduce using rule 51 (expression -> expression OR expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52

  ! PLUS            [ reduce using rule 51 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 51 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 51 (expression -> expression OR expression .) ]
  ! DIV             [ reduce using rule 51 (expression -> expression OR expression .) ]
  ! MOD             [ reduce using rule 51 (expression -> expression OR expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 51 (expression -> expression OR expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 51 (expression -> expression OR expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 51 (expression -> expression OR expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 51 (expression -> expression OR expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 51 (expression -> expression OR expression .) ]
  ! POT             [ reduce using rule 51 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 51 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 51 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 51 (expression -> expression OR expression .) ]
  ! NEQ             [ reduce using rule 51 (expression -> expression OR expression .) ]
  ! STRICT_EQ       [ reduce using rule 51 (expression -> expression OR expression .) ]
  ! STRICT_NEQ      [ reduce using rule 51 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 51 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 51 (expression -> expression OR expression .) ]
  ! LE              [ reduce using rule 51 (expression -> expression OR expression .) ]
  ! GE              [ reduce using rule 51 (expression -> expression OR expression .) ]
  ! DOT             [ reduce using rule 51 (expression -> expression OR expression .) ]
  ! LBRACKET        [ reduce using rule 51 (expression -> expression OR expression .) ]
  ! PLUSPLUS        [ reduce using rule 51 (expression -> expression OR expression .) ]
  ! MINUSMINUS      [ reduce using rule 51 (expression -> expression OR expression .) ]


state 87

    (52) expression -> expression EQ expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 52 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 52 (expression -> expression EQ expression .)
    RBRACKET        reduce using rule 52 (expression -> expression EQ expression .)
    COMMA           reduce using rule 52 (expression -> expression EQ expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52

  ! PLUS            [ reduce using rule 52 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 52 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 52 (expression -> expression EQ expression .) ]
  ! DIV             [ reduce using rule 52 (expression -> expression EQ expression .) ]
  ! MOD             [ reduce using rule 52 (expression -> expression EQ expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 52 (expression -> expression EQ expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 52 (expression -> expression EQ expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 52 (expression -> expression EQ expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 52 (expression -> expression EQ expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 52 (expression -> expression EQ expression .) ]
  ! POT             [ reduce using rule 52 (expression -> expression EQ expression .) ]
  ! AND             [ reduce using rule 52 (expression -> expression EQ expression .) ]
  ! OR              [ reduce using rule 52 (expression -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 52 (expression -> expression EQ expression .) ]
  ! NEQ             [ reduce using rule 52 (expression -> expression EQ expression .) ]
  ! STRICT_EQ       [ reduce using rule 52 (expression -> expression EQ expression .) ]
  ! STRICT_NEQ      [ reduce using rule 52 (expression -> expression EQ expression .) ]
  ! LT              [ reduce using rule 52 (expression -> expression EQ expression .) ]
  ! GT              [ reduce using rule 52 (expression -> expression EQ expression .) ]
  ! LE              [ reduce using rule 52 (expression -> expression EQ expression .) ]
  ! GE              [ reduce using rule 52 (expression -> expression EQ expression .) ]
  ! DOT             [ reduce using rule 52 (expression -> expression EQ expression .) ]
  ! LBRACKET        [ reduce using rule 52 (expression -> expression EQ expression .) ]
  ! PLUSPLUS        [ reduce using rule 52 (expression -> expression EQ expression .) ]
  ! MINUSMINUS      [ reduce using rule 52 (expression -> expression EQ expression .) ]


state 88

    (53) expression -> expression NEQ expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 53 (expression -> expression NEQ expression .)
    RPAREN          reduce using rule 53 (expression -> expression NEQ expression .)
    RBRACKET        reduce using rule 53 (expression -> expression NEQ expression .)
    COMMA           reduce using rule 53 (expression -> expression NEQ expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52

  ! PLUS            [ reduce using rule 53 (expression -> expression NEQ expression .) ]
  ! MINUS           [ reduce using rule 53 (expression -> expression NEQ expression .) ]
  ! TIMES           [ reduce using rule 53 (expression -> expression NEQ expression .) ]
  ! DIV             [ reduce using rule 53 (expression -> expression NEQ expression .) ]
  ! MOD             [ reduce using rule 53 (expression -> expression NEQ expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 53 (expression -> expression NEQ expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 53 (expression -> expression NEQ expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 53 (expression -> expression NEQ expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 53 (expression -> expression NEQ expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 53 (expression -> expression NEQ expression .) ]
  ! POT             [ reduce using rule 53 (expression -> expression NEQ expression .) ]
  ! AND             [ reduce using rule 53 (expression -> expression NEQ expression .) ]
  ! OR              [ reduce using rule 53 (expression -> expression NEQ expression .) ]
  ! EQ              [ reduce using rule 53 (expression -> expression NEQ expression .) ]
  ! NEQ             [ reduce using rule 53 (expression -> expression NEQ expression .) ]
  ! STRICT_EQ       [ reduce using rule 53 (expression -> expression NEQ expression .) ]
  ! STRICT_NEQ      [ reduce using rule 53 (expression -> expression NEQ expression .) ]
  ! LT              [ reduce using rule 53 (expression -> expression NEQ expression .) ]
  ! GT              [ reduce using rule 53 (expression -> expression NEQ expression .) ]
  ! LE              [ reduce using rule 53 (expression -> expression NEQ expression .) ]
  ! GE              [ reduce using rule 53 (expression -> expression NEQ expression .) ]
  ! DOT             [ reduce using rule 53 (expression -> expression NEQ expression .) ]
  ! LBRACKET        [ reduce using rule 53 (expression -> expression NEQ expression .) ]
  ! PLUSPLUS        [ reduce using rule 53 (expression -> expression NEQ expression .) ]
  ! MINUSMINUS      [ reduce using rule 53 (expression -> expression NEQ expression .) ]


state 89

    (54) expression -> expression STRICT_EQ expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 54 (expression -> expression STRICT_EQ expression .)
    RPAREN          reduce using rule 54 (expression -> expression STRICT_EQ expression .)
    RBRACKET        reduce using rule 54 (expression -> expression STRICT_EQ expression .)
    COMMA           reduce using rule 54 (expression -> expression STRICT_EQ expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52

  ! PLUS            [ reduce using rule 54 (expression -> expression STRICT_EQ expression .) ]
  ! MINUS           [ reduce using rule 54 (expression -> expression STRICT_EQ expression .) ]
  ! TIMES           [ reduce using rule 54 (expression -> expression STRICT_EQ expression .) ]
  ! DIV             [ reduce using rule 54 (expression -> expression STRICT_EQ expression .) ]
  ! MOD             [ reduce using rule 54 (expression -> expression STRICT_EQ expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 54 (expression -> expression STRICT_EQ expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 54 (expression -> expression STRICT_EQ expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 54 (expression -> expression STRICT_EQ expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 54 (expression -> expression STRICT_EQ expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 54 (expression -> expression STRICT_EQ expression .) ]
  ! POT             [ reduce using rule 54 (expression -> expression STRICT_EQ expression .) ]
  ! AND             [ reduce using rule 54 (expression -> expression STRICT_EQ expression .) ]
  ! OR              [ reduce using rule 54 (expression -> expression STRICT_EQ expression .) ]
  ! EQ              [ reduce using rule 54 (expression -> expression STRICT_EQ expression .) ]
  ! NEQ             [ reduce using rule 54 (expression -> expression STRICT_EQ expression .) ]
  ! STRICT_EQ       [ reduce using rule 54 (expression -> expression STRICT_EQ expression .) ]
  ! STRICT_NEQ      [ reduce using rule 54 (expression -> expression STRICT_EQ expression .) ]
  ! LT              [ reduce using rule 54 (expression -> expression STRICT_EQ expression .) ]
  ! GT              [ reduce using rule 54 (expression -> expression STRICT_EQ expression .) ]
  ! LE              [ reduce using rule 54 (expression -> expression STRICT_EQ expression .) ]
  ! GE              [ reduce using rule 54 (expression -> expression STRICT_EQ expression .) ]
  ! DOT             [ reduce using rule 54 (expression -> expression STRICT_EQ expression .) ]
  ! LBRACKET        [ reduce using rule 54 (expression -> expression STRICT_EQ expression .) ]
  ! PLUSPLUS        [ reduce using rule 54 (expression -> expression STRICT_EQ expression .) ]
  ! MINUSMINUS      [ reduce using rule 54 (expression -> expression STRICT_EQ expression .) ]


state 90

    (55) expression -> expression STRICT_NEQ expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 55 (expression -> expression STRICT_NEQ expression .)
    RPAREN          reduce using rule 55 (expression -> expression STRICT_NEQ expression .)
    RBRACKET        reduce using rule 55 (expression -> expression STRICT_NEQ expression .)
    COMMA           reduce using rule 55 (expression -> expression STRICT_NEQ expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52

  ! PLUS            [ reduce using rule 55 (expression -> expression STRICT_NEQ expression .) ]
  ! MINUS           [ reduce using rule 55 (expression -> expression STRICT_NEQ expression .) ]
  ! TIMES           [ reduce using rule 55 (expression -> expression STRICT_NEQ expression .) ]
  ! DIV             [ reduce using rule 55 (expression -> expression STRICT_NEQ expression .) ]
  ! MOD             [ reduce using rule 55 (expression -> expression STRICT_NEQ expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 55 (expression -> expression STRICT_NEQ expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 55 (expression -> expression STRICT_NEQ expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 55 (expression -> expression STRICT_NEQ expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 55 (expression -> expression STRICT_NEQ expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 55 (expression -> expression STRICT_NEQ expression .) ]
  ! POT             [ reduce using rule 55 (expression -> expression STRICT_NEQ expression .) ]
  ! AND             [ reduce using rule 55 (expression -> expression STRICT_NEQ expression .) ]
  ! OR              [ reduce using rule 55 (expression -> expression STRICT_NEQ expression .) ]
  ! EQ              [ reduce using rule 55 (expression -> expression STRICT_NEQ expression .) ]
  ! NEQ             [ reduce using rule 55 (expression -> expression STRICT_NEQ expression .) ]
  ! STRICT_EQ       [ reduce using rule 55 (expression -> expression STRICT_NEQ expression .) ]
  ! STRICT_NEQ      [ reduce using rule 55 (expression -> expression STRICT_NEQ expression .) ]
  ! LT              [ reduce using rule 55 (expression -> expression STRICT_NEQ expression .) ]
  ! GT              [ reduce using rule 55 (expression -> expression STRICT_NEQ expression .) ]
  ! LE              [ reduce using rule 55 (expression -> expression STRICT_NEQ expression .) ]
  ! GE              [ reduce using rule 55 (expression -> expression STRICT_NEQ expression .) ]
  ! DOT             [ reduce using rule 55 (expression -> expression STRICT_NEQ expression .) ]
  ! LBRACKET        [ reduce using rule 55 (expression -> expression STRICT_NEQ expression .) ]
  ! PLUSPLUS        [ reduce using rule 55 (expression -> expression STRICT_NEQ expression .) ]
  ! MINUSMINUS      [ reduce using rule 55 (expression -> expression STRICT_NEQ expression .) ]


state 91

    (56) expression -> expression LT expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 56 (expression -> expression LT expression .)
    RPAREN          reduce using rule 56 (expression -> expression LT expression .)
    RBRACKET        reduce using rule 56 (expression -> expression LT expression .)
    COMMA           reduce using rule 56 (expression -> expression LT expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52

  ! PLUS            [ reduce using rule 56 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 56 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 56 (expression -> expression LT expression .) ]
  ! DIV             [ reduce using rule 56 (expression -> expression LT expression .) ]
  ! MOD             [ reduce using rule 56 (expression -> expression LT expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 56 (expression -> expression LT expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 56 (expression -> expression LT expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 56 (expression -> expression LT expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 56 (expression -> expression LT expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 56 (expression -> expression LT expression .) ]
  ! POT             [ reduce using rule 56 (expression -> expression LT expression .) ]
  ! AND             [ reduce using rule 56 (expression -> expression LT expression .) ]
  ! OR              [ reduce using rule 56 (expression -> expression LT expression .) ]
  ! EQ              [ reduce using rule 56 (expression -> expression LT expression .) ]
  ! NEQ             [ reduce using rule 56 (expression -> expression LT expression .) ]
  ! STRICT_EQ       [ reduce using rule 56 (expression -> expression LT expression .) ]
  ! STRICT_NEQ      [ reduce using rule 56 (expression -> expression LT expression .) ]
  ! LT              [ reduce using rule 56 (expression -> expression LT expression .) ]
  ! GT              [ reduce using rule 56 (expression -> expression LT expression .) ]
  ! LE              [ reduce using rule 56 (expression -> expression LT expression .) ]
  ! GE              [ reduce using rule 56 (expression -> expression LT expression .) ]
  ! DOT             [ reduce using rule 56 (expression -> expression LT expression .) ]
  ! LBRACKET        [ reduce using rule 56 (expression -> expression LT expression .) ]
  ! PLUSPLUS        [ reduce using rule 56 (expression -> expression LT expression .) ]
  ! MINUSMINUS      [ reduce using rule 56 (expression -> expression LT expression .) ]


state 92

    (57) expression -> expression GT expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 57 (expression -> expression GT expression .)
    RPAREN          reduce using rule 57 (expression -> expression GT expression .)
    RBRACKET        reduce using rule 57 (expression -> expression GT expression .)
    COMMA           reduce using rule 57 (expression -> expression GT expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52

  ! PLUS            [ reduce using rule 57 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 57 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 57 (expression -> expression GT expression .) ]
  ! DIV             [ reduce using rule 57 (expression -> expression GT expression .) ]
  ! MOD             [ reduce using rule 57 (expression -> expression GT expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 57 (expression -> expression GT expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 57 (expression -> expression GT expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 57 (expression -> expression GT expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 57 (expression -> expression GT expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 57 (expression -> expression GT expression .) ]
  ! POT             [ reduce using rule 57 (expression -> expression GT expression .) ]
  ! AND             [ reduce using rule 57 (expression -> expression GT expression .) ]
  ! OR              [ reduce using rule 57 (expression -> expression GT expression .) ]
  ! EQ              [ reduce using rule 57 (expression -> expression GT expression .) ]
  ! NEQ             [ reduce using rule 57 (expression -> expression GT expression .) ]
  ! STRICT_EQ       [ reduce using rule 57 (expression -> expression GT expression .) ]
  ! STRICT_NEQ      [ reduce using rule 57 (expression -> expression GT expression .) ]
  ! LT              [ reduce using rule 57 (expression -> expression GT expression .) ]
  ! GT              [ reduce using rule 57 (expression -> expression GT expression .) ]
  ! LE              [ reduce using rule 57 (expression -> expression GT expression .) ]
  ! GE              [ reduce using rule 57 (expression -> expression GT expression .) ]
  ! DOT             [ reduce using rule 57 (expression -> expression GT expression .) ]
  ! LBRACKET        [ reduce using rule 57 (expression -> expression GT expression .) ]
  ! PLUSPLUS        [ reduce using rule 57 (expression -> expression GT expression .) ]
  ! MINUSMINUS      [ reduce using rule 57 (expression -> expression GT expression .) ]


state 93

    (58) expression -> expression LE expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 58 (expression -> expression LE expression .)
    RPAREN          reduce using rule 58 (expression -> expression LE expression .)
    RBRACKET        reduce using rule 58 (expression -> expression LE expression .)
    COMMA           reduce using rule 58 (expression -> expression LE expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52

  ! PLUS            [ reduce using rule 58 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 58 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 58 (expression -> expression LE expression .) ]
  ! DIV             [ reduce using rule 58 (expression -> expression LE expression .) ]
  ! MOD             [ reduce using rule 58 (expression -> expression LE expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 58 (expression -> expression LE expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 58 (expression -> expression LE expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 58 (expression -> expression LE expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 58 (expression -> expression LE expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 58 (expression -> expression LE expression .) ]
  ! POT             [ reduce using rule 58 (expression -> expression LE expression .) ]
  ! AND             [ reduce using rule 58 (expression -> expression LE expression .) ]
  ! OR              [ reduce using rule 58 (expression -> expression LE expression .) ]
  ! EQ              [ reduce using rule 58 (expression -> expression LE expression .) ]
  ! NEQ             [ reduce using rule 58 (expression -> expression LE expression .) ]
  ! STRICT_EQ       [ reduce using rule 58 (expression -> expression LE expression .) ]
  ! STRICT_NEQ      [ reduce using rule 58 (expression -> expression LE expression .) ]
  ! LT              [ reduce using rule 58 (expression -> expression LE expression .) ]
  ! GT              [ reduce using rule 58 (expression -> expression LE expression .) ]
  ! LE              [ reduce using rule 58 (expression -> expression LE expression .) ]
  ! GE              [ reduce using rule 58 (expression -> expression LE expression .) ]
  ! DOT             [ reduce using rule 58 (expression -> expression LE expression .) ]
  ! LBRACKET        [ reduce using rule 58 (expression -> expression LE expression .) ]
  ! PLUSPLUS        [ reduce using rule 58 (expression -> expression LE expression .) ]
  ! MINUSMINUS      [ reduce using rule 58 (expression -> expression LE expression .) ]


state 94

    (59) expression -> expression GE expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 59 (expression -> expression GE expression .)
    RPAREN          reduce using rule 59 (expression -> expression GE expression .)
    RBRACKET        reduce using rule 59 (expression -> expression GE expression .)
    COMMA           reduce using rule 59 (expression -> expression GE expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52

  ! PLUS            [ reduce using rule 59 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 59 (expression -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 59 (expression -> expression GE expression .) ]
  ! DIV             [ reduce using rule 59 (expression -> expression GE expression .) ]
  ! MOD             [ reduce using rule 59 (expression -> expression GE expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 59 (expression -> expression GE expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 59 (expression -> expression GE expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 59 (expression -> expression GE expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 59 (expression -> expression GE expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 59 (expression -> expression GE expression .) ]
  ! POT             [ reduce using rule 59 (expression -> expression GE expression .) ]
  ! AND             [ reduce using rule 59 (expression -> expression GE expression .) ]
  ! OR              [ reduce using rule 59 (expression -> expression GE expression .) ]
  ! EQ              [ reduce using rule 59 (expression -> expression GE expression .) ]
  ! NEQ             [ reduce using rule 59 (expression -> expression GE expression .) ]
  ! STRICT_EQ       [ reduce using rule 59 (expression -> expression GE expression .) ]
  ! STRICT_NEQ      [ reduce using rule 59 (expression -> expression GE expression .) ]
  ! LT              [ reduce using rule 59 (expression -> expression GE expression .) ]
  ! GT              [ reduce using rule 59 (expression -> expression GE expression .) ]
  ! LE              [ reduce using rule 59 (expression -> expression GE expression .) ]
  ! GE              [ reduce using rule 59 (expression -> expression GE expression .) ]
  ! DOT             [ reduce using rule 59 (expression -> expression GE expression .) ]
  ! LBRACKET        [ reduce using rule 59 (expression -> expression GE expression .) ]
  ! PLUSPLUS        [ reduce using rule 59 (expression -> expression GE expression .) ]
  ! MINUSMINUS      [ reduce using rule 59 (expression -> expression GE expression .) ]


state 95

    (62) expression -> expression DOT IDENTIFIER .

    SEMICOLON       reduce using rule 62 (expression -> expression DOT IDENTIFIER .)
    PLUS            reduce using rule 62 (expression -> expression DOT IDENTIFIER .)
    MINUS           reduce using rule 62 (expression -> expression DOT IDENTIFIER .)
    TIMES           reduce using rule 62 (expression -> expression DOT IDENTIFIER .)
    DIV             reduce using rule 62 (expression -> expression DOT IDENTIFIER .)
    MOD             reduce using rule 62 (expression -> expression DOT IDENTIFIER .)
    PLUS_ASSIGN     reduce using rule 62 (expression -> expression DOT IDENTIFIER .)
    MINUS_ASSIGN    reduce using rule 62 (expression -> expression DOT IDENTIFIER .)
    MULT_ASSIGN     reduce using rule 62 (expression -> expression DOT IDENTIFIER .)
    DIV_ASSIGN      reduce using rule 62 (expression -> expression DOT IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 62 (expression -> expression DOT IDENTIFIER .)
    POT             reduce using rule 62 (expression -> expression DOT IDENTIFIER .)
    AND             reduce using rule 62 (expression -> expression DOT IDENTIFIER .)
    OR              reduce using rule 62 (expression -> expression DOT IDENTIFIER .)
    EQ              reduce using rule 62 (expression -> expression DOT IDENTIFIER .)
    NEQ             reduce using rule 62 (expression -> expression DOT IDENTIFIER .)
    STRICT_EQ       reduce using rule 62 (expression -> expression DOT IDENTIFIER .)
    STRICT_NEQ      reduce using rule 62 (expression -> expression DOT IDENTIFIER .)
    LT              reduce using rule 62 (expression -> expression DOT IDENTIFIER .)
    GT              reduce using rule 62 (expression -> expression DOT IDENTIFIER .)
    LE              reduce using rule 62 (expression -> expression DOT IDENTIFIER .)
    GE              reduce using rule 62 (expression -> expression DOT IDENTIFIER .)
    DOT             reduce using rule 62 (expression -> expression DOT IDENTIFIER .)
    LBRACKET        reduce using rule 62 (expression -> expression DOT IDENTIFIER .)
    PLUSPLUS        reduce using rule 62 (expression -> expression DOT IDENTIFIER .)
    MINUSMINUS      reduce using rule 62 (expression -> expression DOT IDENTIFIER .)
    RPAREN          reduce using rule 62 (expression -> expression DOT IDENTIFIER .)
    RBRACKET        reduce using rule 62 (expression -> expression DOT IDENTIFIER .)
    COMMA           reduce using rule 62 (expression -> expression DOT IDENTIFIER .)


state 96

    (63) expression -> expression LBRACKET expression . RBRACKET
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

    RBRACKET        shift and go to state 115
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52


state 97

    (11) letAssignment -> LET IDENTIFIER COLON . type EQUAL expression SEMICOLON
    (13) declaracion -> LET IDENTIFIER COLON . type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (34) type -> . NUMBER_TYPE
    (35) type -> . STRING_TYPE
    (36) type -> . BOOLEAN_TYPE
    (37) type -> . IDENTIFIER
    (38) type -> . type LBRACKET RBRACKET

    NUMBER_TYPE     shift and go to state 118
    STRING_TYPE     shift and go to state 119
    BOOLEAN_TYPE    shift and go to state 120
    IDENTIFIER      shift and go to state 116

    type                           shift and go to state 117

state 98

    (12) letAssignment -> LET IDENTIFIER EQUAL . expression SEMICOLON
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 121

state 99

    (64) expression -> IDENTIFIER LPAREN lista_expresiones_opt . RPAREN

    RPAREN          shift and go to state 122


state 100

    (14) lista_expresiones_opt -> lista_expresiones .

    RPAREN          reduce using rule 14 (lista_expresiones_opt -> lista_expresiones .)
    RBRACKET        reduce using rule 14 (lista_expresiones_opt -> lista_expresiones .)


state 101

    (15) lista_expresiones_opt -> empty .

    RPAREN          reduce using rule 15 (lista_expresiones_opt -> empty .)
    RBRACKET        reduce using rule 15 (lista_expresiones_opt -> empty .)


state 102

    (16) lista_expresiones -> expression .
    (17) lista_expresiones -> expression . COMMA lista_expresiones
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

    RPAREN          reduce using rule 16 (lista_expresiones -> expression .)
    RBRACKET        reduce using rule 16 (lista_expresiones -> expression .)
    COMMA           shift and go to state 123
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52


state 103

    (29) function -> FUNCTION IDENTIFIER LPAREN . parameters RPAREN COLON type LBRACE body_function RBRACE
    (30) parameters -> . IDENTIFIER COLON type
    (31) parameters -> . IDENTIFIER COLON type COMMA parameters
    (32) parameters -> . empty
    (90) empty -> .

    IDENTIFIER      shift and go to state 124
    RPAREN          reduce using rule 90 (empty -> .)

    parameters                     shift and go to state 125
    empty                          shift and go to state 126

state 104

    (61) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 61 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 61 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 61 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 61 (expression -> LPAREN expression RPAREN .)
    DIV             reduce using rule 61 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 61 (expression -> LPAREN expression RPAREN .)
    PLUS_ASSIGN     reduce using rule 61 (expression -> LPAREN expression RPAREN .)
    MINUS_ASSIGN    reduce using rule 61 (expression -> LPAREN expression RPAREN .)
    MULT_ASSIGN     reduce using rule 61 (expression -> LPAREN expression RPAREN .)
    DIV_ASSIGN      reduce using rule 61 (expression -> LPAREN expression RPAREN .)
    MOD_ASSIGN      reduce using rule 61 (expression -> LPAREN expression RPAREN .)
    POT             reduce using rule 61 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 61 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 61 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 61 (expression -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 61 (expression -> LPAREN expression RPAREN .)
    STRICT_EQ       reduce using rule 61 (expression -> LPAREN expression RPAREN .)
    STRICT_NEQ      reduce using rule 61 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 61 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 61 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 61 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 61 (expression -> LPAREN expression RPAREN .)
    DOT             reduce using rule 61 (expression -> LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 61 (expression -> LPAREN expression RPAREN .)
    PLUSPLUS        reduce using rule 61 (expression -> LPAREN expression RPAREN .)
    MINUSMINUS      reduce using rule 61 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 61 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 61 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 61 (expression -> LPAREN expression RPAREN .)


state 105

    (78) statement -> LBRACE instruction_list RBRACE .

    LET             reduce using rule 78 (statement -> LBRACE instruction_list RBRACE .)
    FUNCTION        reduce using rule 78 (statement -> LBRACE instruction_list RBRACE .)
    IF              reduce using rule 78 (statement -> LBRACE instruction_list RBRACE .)
    FOR             reduce using rule 78 (statement -> LBRACE instruction_list RBRACE .)
    LBRACE          reduce using rule 78 (statement -> LBRACE instruction_list RBRACE .)
    RETURN          reduce using rule 78 (statement -> LBRACE instruction_list RBRACE .)
    NOT             reduce using rule 78 (statement -> LBRACE instruction_list RBRACE .)
    LPAREN          reduce using rule 78 (statement -> LBRACE instruction_list RBRACE .)
    IDENTIFIER      reduce using rule 78 (statement -> LBRACE instruction_list RBRACE .)
    NUMBER          reduce using rule 78 (statement -> LBRACE instruction_list RBRACE .)
    FLOAT           reduce using rule 78 (statement -> LBRACE instruction_list RBRACE .)
    STRING          reduce using rule 78 (statement -> LBRACE instruction_list RBRACE .)
    PLUSPLUS        reduce using rule 78 (statement -> LBRACE instruction_list RBRACE .)
    MINUSMINUS      reduce using rule 78 (statement -> LBRACE instruction_list RBRACE .)
    CONSOLE         reduce using rule 78 (statement -> LBRACE instruction_list RBRACE .)
    $end            reduce using rule 78 (statement -> LBRACE instruction_list RBRACE .)
    RBRACE          reduce using rule 78 (statement -> LBRACE instruction_list RBRACE .)
    ELSE            reduce using rule 78 (statement -> LBRACE instruction_list RBRACE .)


state 106

    (87) instruction_list -> instruction_list statement .

    RBRACE          reduce using rule 87 (instruction_list -> instruction_list statement .)
    LBRACE          reduce using rule 87 (instruction_list -> instruction_list statement .)
    RETURN          reduce using rule 87 (instruction_list -> instruction_list statement .)
    LET             reduce using rule 87 (instruction_list -> instruction_list statement .)
    FUNCTION        reduce using rule 87 (instruction_list -> instruction_list statement .)
    CONSOLE         reduce using rule 87 (instruction_list -> instruction_list statement .)
    NOT             reduce using rule 87 (instruction_list -> instruction_list statement .)
    LPAREN          reduce using rule 87 (instruction_list -> instruction_list statement .)
    IDENTIFIER      reduce using rule 87 (instruction_list -> instruction_list statement .)
    NUMBER          reduce using rule 87 (instruction_list -> instruction_list statement .)
    FLOAT           reduce using rule 87 (instruction_list -> instruction_list statement .)
    STRING          reduce using rule 87 (instruction_list -> instruction_list statement .)
    PLUSPLUS        reduce using rule 87 (instruction_list -> instruction_list statement .)
    MINUSMINUS      reduce using rule 87 (instruction_list -> instruction_list statement .)
    IF              reduce using rule 87 (instruction_list -> instruction_list statement .)
    FOR             reduce using rule 87 (instruction_list -> instruction_list statement .)


state 107

    (83) statement -> expression SEMICOLON .

    RBRACE          reduce using rule 83 (statement -> expression SEMICOLON .)
    LBRACE          reduce using rule 83 (statement -> expression SEMICOLON .)
    RETURN          reduce using rule 83 (statement -> expression SEMICOLON .)
    LET             reduce using rule 83 (statement -> expression SEMICOLON .)
    FUNCTION        reduce using rule 83 (statement -> expression SEMICOLON .)
    CONSOLE         reduce using rule 83 (statement -> expression SEMICOLON .)
    NOT             reduce using rule 83 (statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 83 (statement -> expression SEMICOLON .)
    IDENTIFIER      reduce using rule 83 (statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 83 (statement -> expression SEMICOLON .)
    FLOAT           reduce using rule 83 (statement -> expression SEMICOLON .)
    STRING          reduce using rule 83 (statement -> expression SEMICOLON .)
    PLUSPLUS        reduce using rule 83 (statement -> expression SEMICOLON .)
    MINUSMINUS      reduce using rule 83 (statement -> expression SEMICOLON .)
    IF              reduce using rule 83 (statement -> expression SEMICOLON .)
    FOR             reduce using rule 83 (statement -> expression SEMICOLON .)
    ELSE            reduce using rule 83 (statement -> expression SEMICOLON .)
    $end            reduce using rule 83 (statement -> expression SEMICOLON .)


state 108

    (74) controlEstructure -> IF LPAREN expression . RPAREN statement
    (75) controlEstructure -> IF LPAREN expression . RPAREN statement ELSE statement
    (76) controlEstructure -> IF LPAREN expression . RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (77) controlEstructure -> IF LPAREN expression . RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

    RPAREN          shift and go to state 127
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52


state 109

    (18) forEstructure -> FOR LPAREN for_init . SEMICOLON expression SEMICOLON for_update RPAREN statement

    SEMICOLON       shift and go to state 128


state 110

    (21) for_init -> expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

    SEMICOLON       reduce using rule 21 (for_init -> expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52


state 111

    (19) for_init -> LET . IDENTIFIER EQUAL expression
    (20) for_init -> LET . IDENTIFIER COLON type EQUAL expression

    IDENTIFIER      shift and go to state 129


state 112

    (22) for_init -> empty .

    SEMICOLON       reduce using rule 22 (for_init -> empty .)


state 113

    (85) statement -> RETURN expression SEMICOLON .

    LET             reduce using rule 85 (statement -> RETURN expression SEMICOLON .)
    FUNCTION        reduce using rule 85 (statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 85 (statement -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 85 (statement -> RETURN expression SEMICOLON .)
    LBRACE          reduce using rule 85 (statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 85 (statement -> RETURN expression SEMICOLON .)
    NOT             reduce using rule 85 (statement -> RETURN expression SEMICOLON .)
    LPAREN          reduce using rule 85 (statement -> RETURN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 85 (statement -> RETURN expression SEMICOLON .)
    NUMBER          reduce using rule 85 (statement -> RETURN expression SEMICOLON .)
    FLOAT           reduce using rule 85 (statement -> RETURN expression SEMICOLON .)
    STRING          reduce using rule 85 (statement -> RETURN expression SEMICOLON .)
    PLUSPLUS        reduce using rule 85 (statement -> RETURN expression SEMICOLON .)
    MINUSMINUS      reduce using rule 85 (statement -> RETURN expression SEMICOLON .)
    CONSOLE         reduce using rule 85 (statement -> RETURN expression SEMICOLON .)
    $end            reduce using rule 85 (statement -> RETURN expression SEMICOLON .)
    RBRACE          reduce using rule 85 (statement -> RETURN expression SEMICOLON .)
    ELSE            reduce using rule 85 (statement -> RETURN expression SEMICOLON .)


state 114

    (73) consolelog -> CONSOLE DOT LOG . LPAREN lista_expresiones_opt RPAREN SEMICOLON

    LPAREN          shift and go to state 130


state 115

    (63) expression -> expression LBRACKET expression RBRACKET .

    SEMICOLON       reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    DIV             reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    MOD             reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    PLUS_ASSIGN     reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    MINUS_ASSIGN    reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    MULT_ASSIGN     reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    DIV_ASSIGN      reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    MOD_ASSIGN      reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    POT             reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    AND             reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    OR              reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    EQ              reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    NEQ             reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    STRICT_EQ       reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    STRICT_NEQ      reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    LT              reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    GT              reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    LE              reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    GE              reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    DOT             reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    PLUSPLUS        reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    MINUSMINUS      reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 63 (expression -> expression LBRACKET expression RBRACKET .)


state 116

    (37) type -> IDENTIFIER .

    EQUAL           reduce using rule 37 (type -> IDENTIFIER .)
    LBRACKET        reduce using rule 37 (type -> IDENTIFIER .)
    COMMA           reduce using rule 37 (type -> IDENTIFIER .)
    RPAREN          reduce using rule 37 (type -> IDENTIFIER .)
    LBRACE          reduce using rule 37 (type -> IDENTIFIER .)


state 117

    (11) letAssignment -> LET IDENTIFIER COLON type . EQUAL expression SEMICOLON
    (13) declaracion -> LET IDENTIFIER COLON type . LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (38) type -> type . LBRACKET RBRACKET

    EQUAL           shift and go to state 131
    LBRACKET        shift and go to state 132


state 118

    (34) type -> NUMBER_TYPE .

    EQUAL           reduce using rule 34 (type -> NUMBER_TYPE .)
    LBRACKET        reduce using rule 34 (type -> NUMBER_TYPE .)
    COMMA           reduce using rule 34 (type -> NUMBER_TYPE .)
    RPAREN          reduce using rule 34 (type -> NUMBER_TYPE .)
    LBRACE          reduce using rule 34 (type -> NUMBER_TYPE .)


state 119

    (35) type -> STRING_TYPE .

    EQUAL           reduce using rule 35 (type -> STRING_TYPE .)
    LBRACKET        reduce using rule 35 (type -> STRING_TYPE .)
    COMMA           reduce using rule 35 (type -> STRING_TYPE .)
    RPAREN          reduce using rule 35 (type -> STRING_TYPE .)
    LBRACE          reduce using rule 35 (type -> STRING_TYPE .)


state 120

    (36) type -> BOOLEAN_TYPE .

    EQUAL           reduce using rule 36 (type -> BOOLEAN_TYPE .)
    LBRACKET        reduce using rule 36 (type -> BOOLEAN_TYPE .)
    COMMA           reduce using rule 36 (type -> BOOLEAN_TYPE .)
    RPAREN          reduce using rule 36 (type -> BOOLEAN_TYPE .)
    LBRACE          reduce using rule 36 (type -> BOOLEAN_TYPE .)


state 121

    (12) letAssignment -> LET IDENTIFIER EQUAL expression . SEMICOLON
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

    SEMICOLON       shift and go to state 133
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52


state 122

    (64) expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .

    SEMICOLON       reduce using rule 64 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    PLUS            reduce using rule 64 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    MINUS           reduce using rule 64 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    TIMES           reduce using rule 64 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    DIV             reduce using rule 64 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    MOD             reduce using rule 64 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    PLUS_ASSIGN     reduce using rule 64 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    MINUS_ASSIGN    reduce using rule 64 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    MULT_ASSIGN     reduce using rule 64 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    DIV_ASSIGN      reduce using rule 64 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    MOD_ASSIGN      reduce using rule 64 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    POT             reduce using rule 64 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    AND             reduce using rule 64 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    OR              reduce using rule 64 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    EQ              reduce using rule 64 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    NEQ             reduce using rule 64 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    STRICT_EQ       reduce using rule 64 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    STRICT_NEQ      reduce using rule 64 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    LT              reduce using rule 64 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    GT              reduce using rule 64 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    LE              reduce using rule 64 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    GE              reduce using rule 64 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    DOT             reduce using rule 64 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    LBRACKET        reduce using rule 64 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    PLUSPLUS        reduce using rule 64 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    MINUSMINUS      reduce using rule 64 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    RPAREN          reduce using rule 64 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    RBRACKET        reduce using rule 64 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    COMMA           reduce using rule 64 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)


state 123

    (17) lista_expresiones -> expression COMMA . lista_expresiones
    (16) lista_expresiones -> . expression
    (17) lista_expresiones -> . expression COMMA lista_expresiones
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 102
    lista_expresiones              shift and go to state 134

state 124

    (30) parameters -> IDENTIFIER . COLON type
    (31) parameters -> IDENTIFIER . COLON type COMMA parameters

    COLON           shift and go to state 135


state 125

    (29) function -> FUNCTION IDENTIFIER LPAREN parameters . RPAREN COLON type LBRACE body_function RBRACE

    RPAREN          shift and go to state 136


state 126

    (32) parameters -> empty .

    RPAREN          reduce using rule 32 (parameters -> empty .)


state 127

    (74) controlEstructure -> IF LPAREN expression RPAREN . statement
    (75) controlEstructure -> IF LPAREN expression RPAREN . statement ELSE statement
    (76) controlEstructure -> IF LPAREN expression RPAREN . statement ELSE IF LPAREN expression RPAREN statement
    (77) controlEstructure -> IF LPAREN expression RPAREN . statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (78) statement -> . LBRACE instruction_list RBRACE
    (79) statement -> . letAssignment
    (80) statement -> . declaracion
    (81) statement -> . function
    (82) statement -> . consolelog
    (83) statement -> . expression SEMICOLON
    (84) statement -> . controlEstructure
    (85) statement -> . RETURN expression SEMICOLON
    (86) statement -> . forEstructure
    (11) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (12) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (13) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (29) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (73) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression
    (74) controlEstructure -> . IF LPAREN expression RPAREN statement
    (75) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (76) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (77) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (18) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement

    LBRACE          shift and go to state 15
    RETURN          shift and go to state 18
    LET             shift and go to state 11
    FUNCTION        shift and go to state 13
    CONSOLE         shift and go to state 25
    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24
    IF              shift and go to state 16
    FOR             shift and go to state 17

    expression                     shift and go to state 64
    statement                      shift and go to state 137
    letAssignment                  shift and go to state 60
    declaracion                    shift and go to state 61
    function                       shift and go to state 62
    consolelog                     shift and go to state 63
    controlEstructure              shift and go to state 65
    forEstructure                  shift and go to state 66

state 128

    (18) forEstructure -> FOR LPAREN for_init SEMICOLON . expression SEMICOLON for_update RPAREN statement
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 138

state 129

    (19) for_init -> LET IDENTIFIER . EQUAL expression
    (20) for_init -> LET IDENTIFIER . COLON type EQUAL expression

    EQUAL           shift and go to state 139
    COLON           shift and go to state 140


state 130

    (73) consolelog -> CONSOLE DOT LOG LPAREN . lista_expresiones_opt RPAREN SEMICOLON
    (14) lista_expresiones_opt -> . lista_expresiones
    (15) lista_expresiones_opt -> . empty
    (16) lista_expresiones -> . expression
    (17) lista_expresiones -> . expression COMMA lista_expresiones
    (90) empty -> .
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    RPAREN          reduce using rule 90 (empty -> .)
    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    lista_expresiones_opt          shift and go to state 141
    lista_expresiones              shift and go to state 100
    empty                          shift and go to state 101
    expression                     shift and go to state 102

state 131

    (11) letAssignment -> LET IDENTIFIER COLON type EQUAL . expression SEMICOLON
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 142

state 132

    (13) declaracion -> LET IDENTIFIER COLON type LBRACKET . RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (38) type -> type LBRACKET . RBRACKET

    RBRACKET        shift and go to state 143


state 133

    (12) letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .

    LET             reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    FUNCTION        reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    IF              reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    FOR             reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    LBRACE          reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    RETURN          reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    NOT             reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    LPAREN          reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    IDENTIFIER      reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    NUMBER          reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    FLOAT           reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    STRING          reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    PLUSPLUS        reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    MINUSMINUS      reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    CONSOLE         reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    $end            reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    RBRACE          reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    ELSE            reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)


state 134

    (17) lista_expresiones -> expression COMMA lista_expresiones .

    RPAREN          reduce using rule 17 (lista_expresiones -> expression COMMA lista_expresiones .)
    RBRACKET        reduce using rule 17 (lista_expresiones -> expression COMMA lista_expresiones .)


state 135

    (30) parameters -> IDENTIFIER COLON . type
    (31) parameters -> IDENTIFIER COLON . type COMMA parameters
    (34) type -> . NUMBER_TYPE
    (35) type -> . STRING_TYPE
    (36) type -> . BOOLEAN_TYPE
    (37) type -> . IDENTIFIER
    (38) type -> . type LBRACKET RBRACKET

    NUMBER_TYPE     shift and go to state 118
    STRING_TYPE     shift and go to state 119
    BOOLEAN_TYPE    shift and go to state 120
    IDENTIFIER      shift and go to state 116

    type                           shift and go to state 144

state 136

    (29) function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN . COLON type LBRACE body_function RBRACE

    COLON           shift and go to state 145


state 137

    (74) controlEstructure -> IF LPAREN expression RPAREN statement .
    (75) controlEstructure -> IF LPAREN expression RPAREN statement . ELSE statement
    (76) controlEstructure -> IF LPAREN expression RPAREN statement . ELSE IF LPAREN expression RPAREN statement
    (77) controlEstructure -> IF LPAREN expression RPAREN statement . ELSE IF LPAREN expression RPAREN statement ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    LET             reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    FUNCTION        reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    IF              reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    FOR             reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    NOT             reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    IDENTIFIER      reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    NUMBER          reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    FLOAT           reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    STRING          reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    PLUSPLUS        reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    MINUSMINUS      reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    CONSOLE         reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    $end            reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 146

  ! ELSE            [ reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .) ]


state 138

    (18) forEstructure -> FOR LPAREN for_init SEMICOLON expression . SEMICOLON for_update RPAREN statement
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

    SEMICOLON       shift and go to state 147
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52


state 139

    (19) for_init -> LET IDENTIFIER EQUAL . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 148

state 140

    (20) for_init -> LET IDENTIFIER COLON . type EQUAL expression
    (34) type -> . NUMBER_TYPE
    (35) type -> . STRING_TYPE
    (36) type -> . BOOLEAN_TYPE
    (37) type -> . IDENTIFIER
    (38) type -> . type LBRACKET RBRACKET

    NUMBER_TYPE     shift and go to state 118
    STRING_TYPE     shift and go to state 119
    BOOLEAN_TYPE    shift and go to state 120
    IDENTIFIER      shift and go to state 116

    type                           shift and go to state 149

state 141

    (73) consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt . RPAREN SEMICOLON

    RPAREN          shift and go to state 150


state 142

    (11) letAssignment -> LET IDENTIFIER COLON type EQUAL expression . SEMICOLON
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

    SEMICOLON       shift and go to state 151
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52


state 143

    (13) declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET . EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (38) type -> type LBRACKET RBRACKET .

  ! shift/reduce conflict for EQUAL resolved as shift
    EQUAL           shift and go to state 152
    LBRACKET        reduce using rule 38 (type -> type LBRACKET RBRACKET .)

  ! EQUAL           [ reduce using rule 38 (type -> type LBRACKET RBRACKET .) ]


state 144

    (30) parameters -> IDENTIFIER COLON type .
    (31) parameters -> IDENTIFIER COLON type . COMMA parameters
    (38) type -> type . LBRACKET RBRACKET

    RPAREN          reduce using rule 30 (parameters -> IDENTIFIER COLON type .)
    COMMA           shift and go to state 153
    LBRACKET        shift and go to state 154


state 145

    (29) function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON . type LBRACE body_function RBRACE
    (34) type -> . NUMBER_TYPE
    (35) type -> . STRING_TYPE
    (36) type -> . BOOLEAN_TYPE
    (37) type -> . IDENTIFIER
    (38) type -> . type LBRACKET RBRACKET

    NUMBER_TYPE     shift and go to state 118
    STRING_TYPE     shift and go to state 119
    BOOLEAN_TYPE    shift and go to state 120
    IDENTIFIER      shift and go to state 116

    type                           shift and go to state 155

state 146

    (75) controlEstructure -> IF LPAREN expression RPAREN statement ELSE . statement
    (76) controlEstructure -> IF LPAREN expression RPAREN statement ELSE . IF LPAREN expression RPAREN statement
    (77) controlEstructure -> IF LPAREN expression RPAREN statement ELSE . IF LPAREN expression RPAREN statement ELSE statement
    (78) statement -> . LBRACE instruction_list RBRACE
    (79) statement -> . letAssignment
    (80) statement -> . declaracion
    (81) statement -> . function
    (82) statement -> . consolelog
    (83) statement -> . expression SEMICOLON
    (84) statement -> . controlEstructure
    (85) statement -> . RETURN expression SEMICOLON
    (86) statement -> . forEstructure
    (11) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (12) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (13) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (29) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (73) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression
    (74) controlEstructure -> . IF LPAREN expression RPAREN statement
    (75) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (76) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (77) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (18) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement

    IF              shift and go to state 156
    LBRACE          shift and go to state 15
    RETURN          shift and go to state 18
    LET             shift and go to state 11
    FUNCTION        shift and go to state 13
    CONSOLE         shift and go to state 25
    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24
    FOR             shift and go to state 17

    expression                     shift and go to state 64
    statement                      shift and go to state 157
    letAssignment                  shift and go to state 60
    declaracion                    shift and go to state 61
    function                       shift and go to state 62
    consolelog                     shift and go to state 63
    controlEstructure              shift and go to state 65
    forEstructure                  shift and go to state 66

state 147

    (18) forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON . for_update RPAREN statement
    (23) for_update -> . expression
    (24) for_update -> . expression PLUSPLUS
    (25) for_update -> . expression MINUSMINUS
    (26) for_update -> . PLUSPLUS expression
    (27) for_update -> . MINUSMINUS expression
    (28) for_update -> . empty
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression
    (90) empty -> .

    PLUSPLUS        shift and go to state 160
    MINUSMINUS      shift and go to state 161
    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    RPAREN          reduce using rule 90 (empty -> .)

    expression                     shift and go to state 158
    for_update                     shift and go to state 159
    empty                          shift and go to state 162

state 148

    (19) for_init -> LET IDENTIFIER EQUAL expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

    SEMICOLON       reduce using rule 19 (for_init -> LET IDENTIFIER EQUAL expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52


state 149

    (20) for_init -> LET IDENTIFIER COLON type . EQUAL expression
    (38) type -> type . LBRACKET RBRACKET

    EQUAL           shift and go to state 163
    LBRACKET        shift and go to state 154


state 150

    (73) consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 164


state 151

    (11) letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .

    LET             reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    FUNCTION        reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    IF              reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    FOR             reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    LBRACE          reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    RETURN          reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    NOT             reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    LPAREN          reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    IDENTIFIER      reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    NUMBER          reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    FLOAT           reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    STRING          reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    PLUSPLUS        reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    MINUSMINUS      reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    CONSOLE         reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    $end            reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    RBRACE          reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    ELSE            reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)


state 152

    (13) declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL . LBRACKET lista_expresiones_opt RBRACKET SEMICOLON

    LBRACKET        shift and go to state 165


state 153

    (31) parameters -> IDENTIFIER COLON type COMMA . parameters
    (30) parameters -> . IDENTIFIER COLON type
    (31) parameters -> . IDENTIFIER COLON type COMMA parameters
    (32) parameters -> . empty
    (90) empty -> .

    IDENTIFIER      shift and go to state 124
    RPAREN          reduce using rule 90 (empty -> .)

    parameters                     shift and go to state 166
    empty                          shift and go to state 126

state 154

    (38) type -> type LBRACKET . RBRACKET

    RBRACKET        shift and go to state 167


state 155

    (29) function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type . LBRACE body_function RBRACE
    (38) type -> type . LBRACKET RBRACKET

    LBRACE          shift and go to state 168
    LBRACKET        shift and go to state 154


state 156

    (76) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF . LPAREN expression RPAREN statement
    (77) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF . LPAREN expression RPAREN statement ELSE statement
    (74) controlEstructure -> IF . LPAREN expression RPAREN statement
    (75) controlEstructure -> IF . LPAREN expression RPAREN statement ELSE statement
    (76) controlEstructure -> IF . LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (77) controlEstructure -> IF . LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement

    LPAREN          shift and go to state 169


state 157

    (75) controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .

    LET             reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    FUNCTION        reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    IF              reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    FOR             reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    LBRACE          reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    RETURN          reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    NOT             reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    LPAREN          reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    IDENTIFIER      reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    NUMBER          reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    FLOAT           reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    STRING          reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    PLUSPLUS        reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    MINUSMINUS      reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    CONSOLE         reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    $end            reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    RBRACE          reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSE            reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)


state 158

    (23) for_update -> expression .
    (24) for_update -> expression . PLUSPLUS
    (25) for_update -> expression . MINUSMINUS
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

    RPAREN          reduce using rule 23 (for_update -> expression .)
    PLUSPLUS        shift and go to state 170
    MINUSMINUS      shift and go to state 171
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50


state 159

    (18) forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update . RPAREN statement

    RPAREN          shift and go to state 172


state 160

    (26) for_update -> PLUSPLUS . expression
    (71) expression -> PLUSPLUS . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 173

state 161

    (27) for_update -> MINUSMINUS . expression
    (72) expression -> MINUSMINUS . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 174

state 162

    (28) for_update -> empty .

    RPAREN          reduce using rule 28 (for_update -> empty .)


state 163

    (20) for_init -> LET IDENTIFIER COLON type EQUAL . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 175

state 164

    (73) consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .

    LET             reduce using rule 73 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 73 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    IF              reduce using rule 73 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    FOR             reduce using rule 73 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    LBRACE          reduce using rule 73 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    RETURN          reduce using rule 73 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    NOT             reduce using rule 73 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    LPAREN          reduce using rule 73 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 73 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    NUMBER          reduce using rule 73 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    FLOAT           reduce using rule 73 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    STRING          reduce using rule 73 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    PLUSPLUS        reduce using rule 73 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    MINUSMINUS      reduce using rule 73 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    CONSOLE         reduce using rule 73 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    $end            reduce using rule 73 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    RBRACE          reduce using rule 73 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    ELSE            reduce using rule 73 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)


state 165

    (13) declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET . lista_expresiones_opt RBRACKET SEMICOLON
    (14) lista_expresiones_opt -> . lista_expresiones
    (15) lista_expresiones_opt -> . empty
    (16) lista_expresiones -> . expression
    (17) lista_expresiones -> . expression COMMA lista_expresiones
    (90) empty -> .
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    RBRACKET        reduce using rule 90 (empty -> .)
    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    lista_expresiones_opt          shift and go to state 176
    lista_expresiones              shift and go to state 100
    empty                          shift and go to state 101
    expression                     shift and go to state 102

state 166

    (31) parameters -> IDENTIFIER COLON type COMMA parameters .

    RPAREN          reduce using rule 31 (parameters -> IDENTIFIER COLON type COMMA parameters .)


state 167

    (38) type -> type LBRACKET RBRACKET .

    COMMA           reduce using rule 38 (type -> type LBRACKET RBRACKET .)
    LBRACKET        reduce using rule 38 (type -> type LBRACKET RBRACKET .)
    RPAREN          reduce using rule 38 (type -> type LBRACKET RBRACKET .)
    EQUAL           reduce using rule 38 (type -> type LBRACKET RBRACKET .)
    LBRACE          reduce using rule 38 (type -> type LBRACKET RBRACKET .)


state 168

    (29) function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE . body_function RBRACE
    (33) body_function -> . instruction_list
    (87) instruction_list -> . instruction_list statement
    (88) instruction_list -> . statement
    (89) instruction_list -> . empty
    (78) statement -> . LBRACE instruction_list RBRACE
    (79) statement -> . letAssignment
    (80) statement -> . declaracion
    (81) statement -> . function
    (82) statement -> . consolelog
    (83) statement -> . expression SEMICOLON
    (84) statement -> . controlEstructure
    (85) statement -> . RETURN expression SEMICOLON
    (86) statement -> . forEstructure
    (90) empty -> .
    (11) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (12) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (13) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (29) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (73) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression
    (74) controlEstructure -> . IF LPAREN expression RPAREN statement
    (75) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (76) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (77) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (18) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for CONSOLE resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    LBRACE          shift and go to state 15
    RETURN          shift and go to state 18
    RBRACE          reduce using rule 90 (empty -> .)
    LET             shift and go to state 11
    FUNCTION        shift and go to state 13
    CONSOLE         shift and go to state 25
    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24
    IF              shift and go to state 16
    FOR             shift and go to state 17

  ! LBRACE          [ reduce using rule 90 (empty -> .) ]
  ! RETURN          [ reduce using rule 90 (empty -> .) ]
  ! LET             [ reduce using rule 90 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 90 (empty -> .) ]
  ! CONSOLE         [ reduce using rule 90 (empty -> .) ]
  ! NOT             [ reduce using rule 90 (empty -> .) ]
  ! LPAREN          [ reduce using rule 90 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 90 (empty -> .) ]
  ! NUMBER          [ reduce using rule 90 (empty -> .) ]
  ! FLOAT           [ reduce using rule 90 (empty -> .) ]
  ! STRING          [ reduce using rule 90 (empty -> .) ]
  ! PLUSPLUS        [ reduce using rule 90 (empty -> .) ]
  ! MINUSMINUS      [ reduce using rule 90 (empty -> .) ]
  ! IF              [ reduce using rule 90 (empty -> .) ]
  ! FOR             [ reduce using rule 90 (empty -> .) ]

    body_function                  shift and go to state 177
    instruction_list               shift and go to state 178
    statement                      shift and go to state 58
    empty                          shift and go to state 59
    letAssignment                  shift and go to state 60
    declaracion                    shift and go to state 61
    function                       shift and go to state 62
    consolelog                     shift and go to state 63
    expression                     shift and go to state 64
    controlEstructure              shift and go to state 65
    forEstructure                  shift and go to state 66

state 169

    (76) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN . expression RPAREN statement
    (77) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN . expression RPAREN statement ELSE statement
    (74) controlEstructure -> IF LPAREN . expression RPAREN statement
    (75) controlEstructure -> IF LPAREN . expression RPAREN statement ELSE statement
    (76) controlEstructure -> IF LPAREN . expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (77) controlEstructure -> IF LPAREN . expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression

    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24

    expression                     shift and go to state 179

state 170

    (24) for_update -> expression PLUSPLUS .
    (69) expression -> expression PLUSPLUS .

  ! reduce/reduce conflict for RPAREN resolved using rule 24 (for_update -> expression PLUSPLUS .)
    RPAREN          reduce using rule 24 (for_update -> expression PLUSPLUS .)
    PLUSPLUS        reduce using rule 69 (expression -> expression PLUSPLUS .)
    MINUSMINUS      reduce using rule 69 (expression -> expression PLUSPLUS .)
    PLUS            reduce using rule 69 (expression -> expression PLUSPLUS .)
    MINUS           reduce using rule 69 (expression -> expression PLUSPLUS .)
    TIMES           reduce using rule 69 (expression -> expression PLUSPLUS .)
    DIV             reduce using rule 69 (expression -> expression PLUSPLUS .)
    MOD             reduce using rule 69 (expression -> expression PLUSPLUS .)
    PLUS_ASSIGN     reduce using rule 69 (expression -> expression PLUSPLUS .)
    MINUS_ASSIGN    reduce using rule 69 (expression -> expression PLUSPLUS .)
    MULT_ASSIGN     reduce using rule 69 (expression -> expression PLUSPLUS .)
    DIV_ASSIGN      reduce using rule 69 (expression -> expression PLUSPLUS .)
    MOD_ASSIGN      reduce using rule 69 (expression -> expression PLUSPLUS .)
    POT             reduce using rule 69 (expression -> expression PLUSPLUS .)
    AND             reduce using rule 69 (expression -> expression PLUSPLUS .)
    OR              reduce using rule 69 (expression -> expression PLUSPLUS .)
    EQ              reduce using rule 69 (expression -> expression PLUSPLUS .)
    NEQ             reduce using rule 69 (expression -> expression PLUSPLUS .)
    STRICT_EQ       reduce using rule 69 (expression -> expression PLUSPLUS .)
    STRICT_NEQ      reduce using rule 69 (expression -> expression PLUSPLUS .)
    LT              reduce using rule 69 (expression -> expression PLUSPLUS .)
    GT              reduce using rule 69 (expression -> expression PLUSPLUS .)
    LE              reduce using rule 69 (expression -> expression PLUSPLUS .)
    GE              reduce using rule 69 (expression -> expression PLUSPLUS .)
    DOT             reduce using rule 69 (expression -> expression PLUSPLUS .)
    LBRACKET        reduce using rule 69 (expression -> expression PLUSPLUS .)

  ! RPAREN          [ reduce using rule 69 (expression -> expression PLUSPLUS .) ]


state 171

    (25) for_update -> expression MINUSMINUS .
    (70) expression -> expression MINUSMINUS .

  ! reduce/reduce conflict for RPAREN resolved using rule 25 (for_update -> expression MINUSMINUS .)
    RPAREN          reduce using rule 25 (for_update -> expression MINUSMINUS .)
    PLUSPLUS        reduce using rule 70 (expression -> expression MINUSMINUS .)
    MINUSMINUS      reduce using rule 70 (expression -> expression MINUSMINUS .)
    PLUS            reduce using rule 70 (expression -> expression MINUSMINUS .)
    MINUS           reduce using rule 70 (expression -> expression MINUSMINUS .)
    TIMES           reduce using rule 70 (expression -> expression MINUSMINUS .)
    DIV             reduce using rule 70 (expression -> expression MINUSMINUS .)
    MOD             reduce using rule 70 (expression -> expression MINUSMINUS .)
    PLUS_ASSIGN     reduce using rule 70 (expression -> expression MINUSMINUS .)
    MINUS_ASSIGN    reduce using rule 70 (expression -> expression MINUSMINUS .)
    MULT_ASSIGN     reduce using rule 70 (expression -> expression MINUSMINUS .)
    DIV_ASSIGN      reduce using rule 70 (expression -> expression MINUSMINUS .)
    MOD_ASSIGN      reduce using rule 70 (expression -> expression MINUSMINUS .)
    POT             reduce using rule 70 (expression -> expression MINUSMINUS .)
    AND             reduce using rule 70 (expression -> expression MINUSMINUS .)
    OR              reduce using rule 70 (expression -> expression MINUSMINUS .)
    EQ              reduce using rule 70 (expression -> expression MINUSMINUS .)
    NEQ             reduce using rule 70 (expression -> expression MINUSMINUS .)
    STRICT_EQ       reduce using rule 70 (expression -> expression MINUSMINUS .)
    STRICT_NEQ      reduce using rule 70 (expression -> expression MINUSMINUS .)
    LT              reduce using rule 70 (expression -> expression MINUSMINUS .)
    GT              reduce using rule 70 (expression -> expression MINUSMINUS .)
    LE              reduce using rule 70 (expression -> expression MINUSMINUS .)
    GE              reduce using rule 70 (expression -> expression MINUSMINUS .)
    DOT             reduce using rule 70 (expression -> expression MINUSMINUS .)
    LBRACKET        reduce using rule 70 (expression -> expression MINUSMINUS .)

  ! RPAREN          [ reduce using rule 70 (expression -> expression MINUSMINUS .) ]


state 172

    (18) forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN . statement
    (78) statement -> . LBRACE instruction_list RBRACE
    (79) statement -> . letAssignment
    (80) statement -> . declaracion
    (81) statement -> . function
    (82) statement -> . consolelog
    (83) statement -> . expression SEMICOLON
    (84) statement -> . controlEstructure
    (85) statement -> . RETURN expression SEMICOLON
    (86) statement -> . forEstructure
    (11) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (12) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (13) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (29) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (73) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression
    (74) controlEstructure -> . IF LPAREN expression RPAREN statement
    (75) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (76) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (77) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (18) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement

    LBRACE          shift and go to state 15
    RETURN          shift and go to state 18
    LET             shift and go to state 11
    FUNCTION        shift and go to state 13
    CONSOLE         shift and go to state 25
    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24
    IF              shift and go to state 16
    FOR             shift and go to state 17

    expression                     shift and go to state 64
    statement                      shift and go to state 180
    letAssignment                  shift and go to state 60
    declaracion                    shift and go to state 61
    function                       shift and go to state 62
    consolelog                     shift and go to state 63
    controlEstructure              shift and go to state 65
    forEstructure                  shift and go to state 66

state 173

    (26) for_update -> PLUSPLUS expression .
    (71) expression -> PLUSPLUS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

  ! reduce/reduce conflict for RPAREN resolved using rule 26 (for_update -> PLUSPLUS expression .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    RPAREN          reduce using rule 26 (for_update -> PLUSPLUS expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52

  ! PLUSPLUS        [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! MINUSMINUS      [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! PLUS            [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! MINUS           [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! TIMES           [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! DIV             [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! MOD             [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! POT             [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! AND             [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! OR              [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! EQ              [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! NEQ             [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! STRICT_EQ       [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! STRICT_NEQ      [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! LT              [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! GT              [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! LE              [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! GE              [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! DOT             [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! LBRACKET        [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]
  ! RPAREN          [ reduce using rule 71 (expression -> PLUSPLUS expression .) ]


state 174

    (27) for_update -> MINUSMINUS expression .
    (72) expression -> MINUSMINUS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

  ! reduce/reduce conflict for RPAREN resolved using rule 27 (for_update -> MINUSMINUS expression .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    RPAREN          reduce using rule 27 (for_update -> MINUSMINUS expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52

  ! PLUSPLUS        [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! MINUSMINUS      [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! PLUS            [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! MINUS           [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! TIMES           [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! DIV             [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! MOD             [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! POT             [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! AND             [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! OR              [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! EQ              [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! NEQ             [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! STRICT_EQ       [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! STRICT_NEQ      [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! LT              [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! GT              [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! LE              [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! GE              [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! DOT             [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! LBRACKET        [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]
  ! RPAREN          [ reduce using rule 72 (expression -> MINUSMINUS expression .) ]


state 175

    (20) for_init -> LET IDENTIFIER COLON type EQUAL expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

    SEMICOLON       reduce using rule 20 (for_init -> LET IDENTIFIER COLON type EQUAL expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52


state 176

    (13) declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt . RBRACKET SEMICOLON

    RBRACKET        shift and go to state 181


state 177

    (29) function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function . RBRACE

    RBRACE          shift and go to state 182


state 178

    (33) body_function -> instruction_list .
    (87) instruction_list -> instruction_list . statement
    (78) statement -> . LBRACE instruction_list RBRACE
    (79) statement -> . letAssignment
    (80) statement -> . declaracion
    (81) statement -> . function
    (82) statement -> . consolelog
    (83) statement -> . expression SEMICOLON
    (84) statement -> . controlEstructure
    (85) statement -> . RETURN expression SEMICOLON
    (86) statement -> . forEstructure
    (11) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (12) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (13) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (29) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (73) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression
    (74) controlEstructure -> . IF LPAREN expression RPAREN statement
    (75) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (76) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (77) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (18) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement

    RBRACE          reduce using rule 33 (body_function -> instruction_list .)
    LBRACE          shift and go to state 15
    RETURN          shift and go to state 18
    LET             shift and go to state 11
    FUNCTION        shift and go to state 13
    CONSOLE         shift and go to state 25
    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24
    IF              shift and go to state 16
    FOR             shift and go to state 17

    statement                      shift and go to state 106
    letAssignment                  shift and go to state 60
    declaracion                    shift and go to state 61
    function                       shift and go to state 62
    consolelog                     shift and go to state 63
    expression                     shift and go to state 64
    controlEstructure              shift and go to state 65
    forEstructure                  shift and go to state 66

state 179

    (76) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression . RPAREN statement
    (77) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression . RPAREN statement ELSE statement
    (74) controlEstructure -> IF LPAREN expression . RPAREN statement
    (75) controlEstructure -> IF LPAREN expression . RPAREN statement ELSE statement
    (76) controlEstructure -> IF LPAREN expression . RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (77) controlEstructure -> IF LPAREN expression . RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIV expression
    (43) expression -> expression . MOD expression
    (44) expression -> expression . PLUS_ASSIGN expression
    (45) expression -> expression . MINUS_ASSIGN expression
    (46) expression -> expression . MULT_ASSIGN expression
    (47) expression -> expression . DIV_ASSIGN expression
    (48) expression -> expression . MOD_ASSIGN expression
    (49) expression -> expression . POT expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . OR expression
    (52) expression -> expression . EQ expression
    (53) expression -> expression . NEQ expression
    (54) expression -> expression . STRICT_EQ expression
    (55) expression -> expression . STRICT_NEQ expression
    (56) expression -> expression . LT expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GE expression
    (62) expression -> expression . DOT IDENTIFIER
    (63) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . PLUSPLUS
    (70) expression -> expression . MINUSMINUS

    RPAREN          shift and go to state 183
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    MOD             shift and go to state 32
    PLUS_ASSIGN     shift and go to state 33
    MINUS_ASSIGN    shift and go to state 34
    MULT_ASSIGN     shift and go to state 35
    DIV_ASSIGN      shift and go to state 36
    MOD_ASSIGN      shift and go to state 37
    POT             shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    STRICT_EQ       shift and go to state 43
    STRICT_NEQ      shift and go to state 44
    LT              shift and go to state 45
    GT              shift and go to state 46
    LE              shift and go to state 47
    GE              shift and go to state 48
    DOT             shift and go to state 49
    LBRACKET        shift and go to state 50
    PLUSPLUS        shift and go to state 51
    MINUSMINUS      shift and go to state 52


state 180

    (18) forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .

    LET             reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    FUNCTION        reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    IF              reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    FOR             reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    LBRACE          reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    RETURN          reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    NOT             reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    LPAREN          reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    IDENTIFIER      reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    NUMBER          reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    FLOAT           reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    STRING          reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    PLUSPLUS        reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    MINUSMINUS      reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    CONSOLE         reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    $end            reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    RBRACE          reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    ELSE            reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)


state 181

    (13) declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 184


state 182

    (29) function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .

    LET             reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    FUNCTION        reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    IF              reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    FOR             reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    LBRACE          reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    RETURN          reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    NOT             reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    LPAREN          reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    IDENTIFIER      reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    NUMBER          reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    FLOAT           reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    STRING          reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    PLUSPLUS        reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    MINUSMINUS      reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    CONSOLE         reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    $end            reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    RBRACE          reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    ELSE            reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)


state 183

    (76) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN . statement
    (77) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN . statement ELSE statement
    (74) controlEstructure -> IF LPAREN expression RPAREN . statement
    (75) controlEstructure -> IF LPAREN expression RPAREN . statement ELSE statement
    (76) controlEstructure -> IF LPAREN expression RPAREN . statement ELSE IF LPAREN expression RPAREN statement
    (77) controlEstructure -> IF LPAREN expression RPAREN . statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (78) statement -> . LBRACE instruction_list RBRACE
    (79) statement -> . letAssignment
    (80) statement -> . declaracion
    (81) statement -> . function
    (82) statement -> . consolelog
    (83) statement -> . expression SEMICOLON
    (84) statement -> . controlEstructure
    (85) statement -> . RETURN expression SEMICOLON
    (86) statement -> . forEstructure
    (11) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (12) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (13) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (29) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (73) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression
    (74) controlEstructure -> . IF LPAREN expression RPAREN statement
    (75) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (76) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (77) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (18) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement

    LBRACE          shift and go to state 15
    RETURN          shift and go to state 18
    LET             shift and go to state 11
    FUNCTION        shift and go to state 13
    CONSOLE         shift and go to state 25
    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24
    IF              shift and go to state 16
    FOR             shift and go to state 17

    expression                     shift and go to state 64
    statement                      shift and go to state 185
    letAssignment                  shift and go to state 60
    declaracion                    shift and go to state 61
    function                       shift and go to state 62
    consolelog                     shift and go to state 63
    controlEstructure              shift and go to state 65
    forEstructure                  shift and go to state 66

state 184

    (13) declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .

    LET             reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    FUNCTION        reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    IF              reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    FOR             reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    LBRACE          reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    RETURN          reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    NOT             reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    LPAREN          reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    IDENTIFIER      reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    NUMBER          reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    FLOAT           reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    STRING          reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    PLUSPLUS        reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    MINUSMINUS      reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    CONSOLE         reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    $end            reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    RBRACE          reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    ELSE            reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)


state 185

    (76) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .
    (77) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement . ELSE statement
    (74) controlEstructure -> IF LPAREN expression RPAREN statement .
    (75) controlEstructure -> IF LPAREN expression RPAREN statement . ELSE statement
    (76) controlEstructure -> IF LPAREN expression RPAREN statement . ELSE IF LPAREN expression RPAREN statement
    (77) controlEstructure -> IF LPAREN expression RPAREN statement . ELSE IF LPAREN expression RPAREN statement ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! reduce/reduce conflict for LET resolved using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for IF resolved using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for FOR resolved using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for LBRACE resolved using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for RETURN resolved using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for NOT resolved using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for LPAREN resolved using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for NUMBER resolved using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for FLOAT resolved using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for STRING resolved using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for PLUSPLUS resolved using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for MINUSMINUS resolved using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for $end resolved using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for RBRACE resolved using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 186
    LET             reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    FUNCTION        reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    IF              reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    FOR             reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    NOT             reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    IDENTIFIER      reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    NUMBER          reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    FLOAT           reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    STRING          reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    PLUSPLUS        reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    MINUSMINUS      reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    CONSOLE         reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    $end            reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .)

  ! LET             [ reduce using rule 76 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! FUNCTION        [ reduce using rule 76 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! IF              [ reduce using rule 76 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! FOR             [ reduce using rule 76 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! LBRACE          [ reduce using rule 76 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! RETURN          [ reduce using rule 76 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! NOT             [ reduce using rule 76 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! LPAREN          [ reduce using rule 76 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! IDENTIFIER      [ reduce using rule 76 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! NUMBER          [ reduce using rule 76 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! FLOAT           [ reduce using rule 76 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! STRING          [ reduce using rule 76 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! PLUSPLUS        [ reduce using rule 76 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! MINUSMINUS      [ reduce using rule 76 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! CONSOLE         [ reduce using rule 76 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! $end            [ reduce using rule 76 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! RBRACE          [ reduce using rule 76 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! ELSE            [ reduce using rule 76 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! ELSE            [ reduce using rule 74 (controlEstructure -> IF LPAREN expression RPAREN statement .) ]


state 186

    (77) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE . statement
    (75) controlEstructure -> IF LPAREN expression RPAREN statement ELSE . statement
    (76) controlEstructure -> IF LPAREN expression RPAREN statement ELSE . IF LPAREN expression RPAREN statement
    (77) controlEstructure -> IF LPAREN expression RPAREN statement ELSE . IF LPAREN expression RPAREN statement ELSE statement
    (78) statement -> . LBRACE instruction_list RBRACE
    (79) statement -> . letAssignment
    (80) statement -> . declaracion
    (81) statement -> . function
    (82) statement -> . consolelog
    (83) statement -> . expression SEMICOLON
    (84) statement -> . controlEstructure
    (85) statement -> . RETURN expression SEMICOLON
    (86) statement -> . forEstructure
    (11) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (12) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (13) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (29) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (73) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIV expression
    (43) expression -> . expression MOD expression
    (44) expression -> . expression PLUS_ASSIGN expression
    (45) expression -> . expression MINUS_ASSIGN expression
    (46) expression -> . expression MULT_ASSIGN expression
    (47) expression -> . expression DIV_ASSIGN expression
    (48) expression -> . expression MOD_ASSIGN expression
    (49) expression -> . expression POT expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression OR expression
    (52) expression -> . expression EQ expression
    (53) expression -> . expression NEQ expression
    (54) expression -> . expression STRICT_EQ expression
    (55) expression -> . expression STRICT_NEQ expression
    (56) expression -> . expression LT expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GE expression
    (60) expression -> . NOT expression
    (61) expression -> . LPAREN expression RPAREN
    (62) expression -> . expression DOT IDENTIFIER
    (63) expression -> . expression LBRACKET expression RBRACKET
    (64) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (65) expression -> . NUMBER
    (66) expression -> . FLOAT
    (67) expression -> . STRING
    (68) expression -> . IDENTIFIER
    (69) expression -> . expression PLUSPLUS
    (70) expression -> . expression MINUSMINUS
    (71) expression -> . PLUSPLUS expression
    (72) expression -> . MINUSMINUS expression
    (74) controlEstructure -> . IF LPAREN expression RPAREN statement
    (75) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (76) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (77) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (18) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement

    IF              shift and go to state 156
    LBRACE          shift and go to state 15
    RETURN          shift and go to state 18
    LET             shift and go to state 11
    FUNCTION        shift and go to state 13
    CONSOLE         shift and go to state 25
    NOT             shift and go to state 19
    LPAREN          shift and go to state 14
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 20
    FLOAT           shift and go to state 21
    STRING          shift and go to state 22
    PLUSPLUS        shift and go to state 23
    MINUSMINUS      shift and go to state 24
    FOR             shift and go to state 17

    expression                     shift and go to state 64
    statement                      shift and go to state 187
    letAssignment                  shift and go to state 60
    declaracion                    shift and go to state 61
    function                       shift and go to state 62
    consolelog                     shift and go to state 63
    controlEstructure              shift and go to state 65
    forEstructure                  shift and go to state 66

state 187

    (77) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .
    (75) controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .

  ! reduce/reduce conflict for ELSE resolved using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for LET resolved using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for IF resolved using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for FOR resolved using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for LBRACE resolved using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for RETURN resolved using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for NOT resolved using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for LPAREN resolved using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for NUMBER resolved using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for FLOAT resolved using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for STRING resolved using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for PLUSPLUS resolved using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for MINUSMINUS resolved using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for $end resolved using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for RBRACE resolved using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSE            reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    LET             reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    FUNCTION        reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    IF              reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    FOR             reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    LBRACE          reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    RETURN          reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    NOT             reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    LPAREN          reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    IDENTIFIER      reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    NUMBER          reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    FLOAT           reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    STRING          reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    PLUSPLUS        reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    MINUSMINUS      reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    CONSOLE         reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    $end            reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    RBRACE          reduce using rule 75 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)

  ! LET             [ reduce using rule 77 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! FUNCTION        [ reduce using rule 77 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! IF              [ reduce using rule 77 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! FOR             [ reduce using rule 77 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! LBRACE          [ reduce using rule 77 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! RETURN          [ reduce using rule 77 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! NOT             [ reduce using rule 77 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! LPAREN          [ reduce using rule 77 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! IDENTIFIER      [ reduce using rule 77 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! NUMBER          [ reduce using rule 77 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! FLOAT           [ reduce using rule 77 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! STRING          [ reduce using rule 77 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! PLUSPLUS        [ reduce using rule 77 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! MINUSMINUS      [ reduce using rule 77 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! CONSOLE         [ reduce using rule 77 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! $end            [ reduce using rule 77 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! RBRACE          [ reduce using rule 77 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! ELSE            [ reduce using rule 77 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LBRACE in state 15 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 15 resolved as shift
WARNING: shift/reduce conflict for LET in state 15 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 15 resolved as shift
WARNING: shift/reduce conflict for CONSOLE in state 15 resolved as shift
WARNING: shift/reduce conflict for NOT in state 15 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 15 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 15 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 15 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 15 resolved as shift
WARNING: shift/reduce conflict for STRING in state 15 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 15 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 15 resolved as shift
WARNING: shift/reduce conflict for IF in state 15 resolved as shift
WARNING: shift/reduce conflict for FOR in state 15 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 70 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 70 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 70 resolved as shift
WARNING: shift/reduce conflict for DIV in state 70 resolved as shift
WARNING: shift/reduce conflict for MOD in state 70 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 70 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 70 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 70 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 70 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 70 resolved as shift
WARNING: shift/reduce conflict for POT in state 70 resolved as shift
WARNING: shift/reduce conflict for AND in state 70 resolved as shift
WARNING: shift/reduce conflict for OR in state 70 resolved as shift
WARNING: shift/reduce conflict for EQ in state 70 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 70 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 70 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 70 resolved as shift
WARNING: shift/reduce conflict for LT in state 70 resolved as shift
WARNING: shift/reduce conflict for GT in state 70 resolved as shift
WARNING: shift/reduce conflict for LE in state 70 resolved as shift
WARNING: shift/reduce conflict for GE in state 70 resolved as shift
WARNING: shift/reduce conflict for DOT in state 70 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 70 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 70 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 70 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 71 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 71 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 71 resolved as shift
WARNING: shift/reduce conflict for DIV in state 71 resolved as shift
WARNING: shift/reduce conflict for MOD in state 71 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 71 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 71 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 71 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 71 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 71 resolved as shift
WARNING: shift/reduce conflict for POT in state 71 resolved as shift
WARNING: shift/reduce conflict for AND in state 71 resolved as shift
WARNING: shift/reduce conflict for OR in state 71 resolved as shift
WARNING: shift/reduce conflict for EQ in state 71 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 71 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 71 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 71 resolved as shift
WARNING: shift/reduce conflict for LT in state 71 resolved as shift
WARNING: shift/reduce conflict for GT in state 71 resolved as shift
WARNING: shift/reduce conflict for LE in state 71 resolved as shift
WARNING: shift/reduce conflict for GE in state 71 resolved as shift
WARNING: shift/reduce conflict for DOT in state 71 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 71 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 71 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 71 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 72 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 72 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 72 resolved as shift
WARNING: shift/reduce conflict for DIV in state 72 resolved as shift
WARNING: shift/reduce conflict for MOD in state 72 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 72 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 72 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 72 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 72 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 72 resolved as shift
WARNING: shift/reduce conflict for POT in state 72 resolved as shift
WARNING: shift/reduce conflict for AND in state 72 resolved as shift
WARNING: shift/reduce conflict for OR in state 72 resolved as shift
WARNING: shift/reduce conflict for EQ in state 72 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 72 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 72 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 72 resolved as shift
WARNING: shift/reduce conflict for LT in state 72 resolved as shift
WARNING: shift/reduce conflict for GT in state 72 resolved as shift
WARNING: shift/reduce conflict for LE in state 72 resolved as shift
WARNING: shift/reduce conflict for GE in state 72 resolved as shift
WARNING: shift/reduce conflict for DOT in state 72 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 72 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 72 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 72 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 74 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 74 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 74 resolved as shift
WARNING: shift/reduce conflict for DIV in state 74 resolved as shift
WARNING: shift/reduce conflict for MOD in state 74 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 74 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 74 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 74 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 74 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 74 resolved as shift
WARNING: shift/reduce conflict for POT in state 74 resolved as shift
WARNING: shift/reduce conflict for AND in state 74 resolved as shift
WARNING: shift/reduce conflict for OR in state 74 resolved as shift
WARNING: shift/reduce conflict for EQ in state 74 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 74 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 74 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 74 resolved as shift
WARNING: shift/reduce conflict for LT in state 74 resolved as shift
WARNING: shift/reduce conflict for GT in state 74 resolved as shift
WARNING: shift/reduce conflict for LE in state 74 resolved as shift
WARNING: shift/reduce conflict for GE in state 74 resolved as shift
WARNING: shift/reduce conflict for DOT in state 74 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 74 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 74 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 74 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 75 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 75 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 75 resolved as shift
WARNING: shift/reduce conflict for DIV in state 75 resolved as shift
WARNING: shift/reduce conflict for MOD in state 75 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 75 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 75 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 75 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 75 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 75 resolved as shift
WARNING: shift/reduce conflict for POT in state 75 resolved as shift
WARNING: shift/reduce conflict for AND in state 75 resolved as shift
WARNING: shift/reduce conflict for OR in state 75 resolved as shift
WARNING: shift/reduce conflict for EQ in state 75 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 75 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 75 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 75 resolved as shift
WARNING: shift/reduce conflict for LT in state 75 resolved as shift
WARNING: shift/reduce conflict for GT in state 75 resolved as shift
WARNING: shift/reduce conflict for LE in state 75 resolved as shift
WARNING: shift/reduce conflict for GE in state 75 resolved as shift
WARNING: shift/reduce conflict for DOT in state 75 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 75 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 75 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 75 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 76 resolved as shift
WARNING: shift/reduce conflict for DIV in state 76 resolved as shift
WARNING: shift/reduce conflict for MOD in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 76 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 76 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 76 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 76 resolved as shift
WARNING: shift/reduce conflict for POT in state 76 resolved as shift
WARNING: shift/reduce conflict for AND in state 76 resolved as shift
WARNING: shift/reduce conflict for OR in state 76 resolved as shift
WARNING: shift/reduce conflict for EQ in state 76 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 76 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 76 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 76 resolved as shift
WARNING: shift/reduce conflict for LT in state 76 resolved as shift
WARNING: shift/reduce conflict for GT in state 76 resolved as shift
WARNING: shift/reduce conflict for LE in state 76 resolved as shift
WARNING: shift/reduce conflict for GE in state 76 resolved as shift
WARNING: shift/reduce conflict for DOT in state 76 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 77 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 77 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 77 resolved as shift
WARNING: shift/reduce conflict for DIV in state 77 resolved as shift
WARNING: shift/reduce conflict for MOD in state 77 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 77 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 77 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 77 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 77 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 77 resolved as shift
WARNING: shift/reduce conflict for POT in state 77 resolved as shift
WARNING: shift/reduce conflict for AND in state 77 resolved as shift
WARNING: shift/reduce conflict for OR in state 77 resolved as shift
WARNING: shift/reduce conflict for EQ in state 77 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 77 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 77 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 77 resolved as shift
WARNING: shift/reduce conflict for LT in state 77 resolved as shift
WARNING: shift/reduce conflict for GT in state 77 resolved as shift
WARNING: shift/reduce conflict for LE in state 77 resolved as shift
WARNING: shift/reduce conflict for GE in state 77 resolved as shift
WARNING: shift/reduce conflict for DOT in state 77 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 77 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 77 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 77 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 78 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 78 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 78 resolved as shift
WARNING: shift/reduce conflict for DIV in state 78 resolved as shift
WARNING: shift/reduce conflict for MOD in state 78 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 78 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 78 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 78 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 78 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 78 resolved as shift
WARNING: shift/reduce conflict for POT in state 78 resolved as shift
WARNING: shift/reduce conflict for AND in state 78 resolved as shift
WARNING: shift/reduce conflict for OR in state 78 resolved as shift
WARNING: shift/reduce conflict for EQ in state 78 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 78 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 78 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 78 resolved as shift
WARNING: shift/reduce conflict for LT in state 78 resolved as shift
WARNING: shift/reduce conflict for GT in state 78 resolved as shift
WARNING: shift/reduce conflict for LE in state 78 resolved as shift
WARNING: shift/reduce conflict for GE in state 78 resolved as shift
WARNING: shift/reduce conflict for DOT in state 78 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 78 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 78 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 78 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 79 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 79 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 79 resolved as shift
WARNING: shift/reduce conflict for DIV in state 79 resolved as shift
WARNING: shift/reduce conflict for MOD in state 79 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 79 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 79 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 79 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 79 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 79 resolved as shift
WARNING: shift/reduce conflict for POT in state 79 resolved as shift
WARNING: shift/reduce conflict for AND in state 79 resolved as shift
WARNING: shift/reduce conflict for OR in state 79 resolved as shift
WARNING: shift/reduce conflict for EQ in state 79 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 79 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 79 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 79 resolved as shift
WARNING: shift/reduce conflict for LT in state 79 resolved as shift
WARNING: shift/reduce conflict for GT in state 79 resolved as shift
WARNING: shift/reduce conflict for LE in state 79 resolved as shift
WARNING: shift/reduce conflict for GE in state 79 resolved as shift
WARNING: shift/reduce conflict for DOT in state 79 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 79 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 79 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 79 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 80 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 80 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 80 resolved as shift
WARNING: shift/reduce conflict for DIV in state 80 resolved as shift
WARNING: shift/reduce conflict for MOD in state 80 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 80 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 80 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 80 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 80 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 80 resolved as shift
WARNING: shift/reduce conflict for POT in state 80 resolved as shift
WARNING: shift/reduce conflict for AND in state 80 resolved as shift
WARNING: shift/reduce conflict for OR in state 80 resolved as shift
WARNING: shift/reduce conflict for EQ in state 80 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 80 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 80 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 80 resolved as shift
WARNING: shift/reduce conflict for LT in state 80 resolved as shift
WARNING: shift/reduce conflict for GT in state 80 resolved as shift
WARNING: shift/reduce conflict for LE in state 80 resolved as shift
WARNING: shift/reduce conflict for GE in state 80 resolved as shift
WARNING: shift/reduce conflict for DOT in state 80 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 80 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 80 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 80 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 81 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 81 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 81 resolved as shift
WARNING: shift/reduce conflict for DIV in state 81 resolved as shift
WARNING: shift/reduce conflict for MOD in state 81 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 81 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 81 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 81 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 81 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 81 resolved as shift
WARNING: shift/reduce conflict for POT in state 81 resolved as shift
WARNING: shift/reduce conflict for AND in state 81 resolved as shift
WARNING: shift/reduce conflict for OR in state 81 resolved as shift
WARNING: shift/reduce conflict for EQ in state 81 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 81 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 81 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 81 resolved as shift
WARNING: shift/reduce conflict for LT in state 81 resolved as shift
WARNING: shift/reduce conflict for GT in state 81 resolved as shift
WARNING: shift/reduce conflict for LE in state 81 resolved as shift
WARNING: shift/reduce conflict for GE in state 81 resolved as shift
WARNING: shift/reduce conflict for DOT in state 81 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 81 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 81 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 81 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 82 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 82 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 82 resolved as shift
WARNING: shift/reduce conflict for DIV in state 82 resolved as shift
WARNING: shift/reduce conflict for MOD in state 82 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 82 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 82 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 82 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 82 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 82 resolved as shift
WARNING: shift/reduce conflict for POT in state 82 resolved as shift
WARNING: shift/reduce conflict for AND in state 82 resolved as shift
WARNING: shift/reduce conflict for OR in state 82 resolved as shift
WARNING: shift/reduce conflict for EQ in state 82 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 82 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 82 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 82 resolved as shift
WARNING: shift/reduce conflict for LT in state 82 resolved as shift
WARNING: shift/reduce conflict for GT in state 82 resolved as shift
WARNING: shift/reduce conflict for LE in state 82 resolved as shift
WARNING: shift/reduce conflict for GE in state 82 resolved as shift
WARNING: shift/reduce conflict for DOT in state 82 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 82 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 82 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 82 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 83 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 83 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 83 resolved as shift
WARNING: shift/reduce conflict for DIV in state 83 resolved as shift
WARNING: shift/reduce conflict for MOD in state 83 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 83 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 83 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 83 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 83 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 83 resolved as shift
WARNING: shift/reduce conflict for POT in state 83 resolved as shift
WARNING: shift/reduce conflict for AND in state 83 resolved as shift
WARNING: shift/reduce conflict for OR in state 83 resolved as shift
WARNING: shift/reduce conflict for EQ in state 83 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 83 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 83 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 83 resolved as shift
WARNING: shift/reduce conflict for LT in state 83 resolved as shift
WARNING: shift/reduce conflict for GT in state 83 resolved as shift
WARNING: shift/reduce conflict for LE in state 83 resolved as shift
WARNING: shift/reduce conflict for GE in state 83 resolved as shift
WARNING: shift/reduce conflict for DOT in state 83 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 83 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 83 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 83 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 84 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 84 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 84 resolved as shift
WARNING: shift/reduce conflict for DIV in state 84 resolved as shift
WARNING: shift/reduce conflict for MOD in state 84 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 84 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 84 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 84 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 84 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 84 resolved as shift
WARNING: shift/reduce conflict for POT in state 84 resolved as shift
WARNING: shift/reduce conflict for AND in state 84 resolved as shift
WARNING: shift/reduce conflict for OR in state 84 resolved as shift
WARNING: shift/reduce conflict for EQ in state 84 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 84 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 84 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 84 resolved as shift
WARNING: shift/reduce conflict for LT in state 84 resolved as shift
WARNING: shift/reduce conflict for GT in state 84 resolved as shift
WARNING: shift/reduce conflict for LE in state 84 resolved as shift
WARNING: shift/reduce conflict for GE in state 84 resolved as shift
WARNING: shift/reduce conflict for DOT in state 84 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 84 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 84 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 84 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 85 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 85 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 85 resolved as shift
WARNING: shift/reduce conflict for DIV in state 85 resolved as shift
WARNING: shift/reduce conflict for MOD in state 85 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 85 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 85 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 85 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 85 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 85 resolved as shift
WARNING: shift/reduce conflict for POT in state 85 resolved as shift
WARNING: shift/reduce conflict for AND in state 85 resolved as shift
WARNING: shift/reduce conflict for OR in state 85 resolved as shift
WARNING: shift/reduce conflict for EQ in state 85 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 85 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 85 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 85 resolved as shift
WARNING: shift/reduce conflict for LT in state 85 resolved as shift
WARNING: shift/reduce conflict for GT in state 85 resolved as shift
WARNING: shift/reduce conflict for LE in state 85 resolved as shift
WARNING: shift/reduce conflict for GE in state 85 resolved as shift
WARNING: shift/reduce conflict for DOT in state 85 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 85 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 85 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 85 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 86 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 86 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 86 resolved as shift
WARNING: shift/reduce conflict for DIV in state 86 resolved as shift
WARNING: shift/reduce conflict for MOD in state 86 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 86 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 86 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 86 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 86 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 86 resolved as shift
WARNING: shift/reduce conflict for POT in state 86 resolved as shift
WARNING: shift/reduce conflict for AND in state 86 resolved as shift
WARNING: shift/reduce conflict for OR in state 86 resolved as shift
WARNING: shift/reduce conflict for EQ in state 86 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 86 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 86 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 86 resolved as shift
WARNING: shift/reduce conflict for LT in state 86 resolved as shift
WARNING: shift/reduce conflict for GT in state 86 resolved as shift
WARNING: shift/reduce conflict for LE in state 86 resolved as shift
WARNING: shift/reduce conflict for GE in state 86 resolved as shift
WARNING: shift/reduce conflict for DOT in state 86 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 86 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 86 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 86 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 87 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 87 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 87 resolved as shift
WARNING: shift/reduce conflict for DIV in state 87 resolved as shift
WARNING: shift/reduce conflict for MOD in state 87 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 87 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 87 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 87 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 87 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 87 resolved as shift
WARNING: shift/reduce conflict for POT in state 87 resolved as shift
WARNING: shift/reduce conflict for AND in state 87 resolved as shift
WARNING: shift/reduce conflict for OR in state 87 resolved as shift
WARNING: shift/reduce conflict for EQ in state 87 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 87 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 87 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 87 resolved as shift
WARNING: shift/reduce conflict for LT in state 87 resolved as shift
WARNING: shift/reduce conflict for GT in state 87 resolved as shift
WARNING: shift/reduce conflict for LE in state 87 resolved as shift
WARNING: shift/reduce conflict for GE in state 87 resolved as shift
WARNING: shift/reduce conflict for DOT in state 87 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 87 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 87 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 87 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 88 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 88 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 88 resolved as shift
WARNING: shift/reduce conflict for DIV in state 88 resolved as shift
WARNING: shift/reduce conflict for MOD in state 88 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 88 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 88 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 88 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 88 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 88 resolved as shift
WARNING: shift/reduce conflict for POT in state 88 resolved as shift
WARNING: shift/reduce conflict for AND in state 88 resolved as shift
WARNING: shift/reduce conflict for OR in state 88 resolved as shift
WARNING: shift/reduce conflict for EQ in state 88 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 88 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 88 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 88 resolved as shift
WARNING: shift/reduce conflict for LT in state 88 resolved as shift
WARNING: shift/reduce conflict for GT in state 88 resolved as shift
WARNING: shift/reduce conflict for LE in state 88 resolved as shift
WARNING: shift/reduce conflict for GE in state 88 resolved as shift
WARNING: shift/reduce conflict for DOT in state 88 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 88 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 88 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 88 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 89 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 89 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 89 resolved as shift
WARNING: shift/reduce conflict for DIV in state 89 resolved as shift
WARNING: shift/reduce conflict for MOD in state 89 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 89 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 89 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 89 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 89 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 89 resolved as shift
WARNING: shift/reduce conflict for POT in state 89 resolved as shift
WARNING: shift/reduce conflict for AND in state 89 resolved as shift
WARNING: shift/reduce conflict for OR in state 89 resolved as shift
WARNING: shift/reduce conflict for EQ in state 89 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 89 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 89 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 89 resolved as shift
WARNING: shift/reduce conflict for LT in state 89 resolved as shift
WARNING: shift/reduce conflict for GT in state 89 resolved as shift
WARNING: shift/reduce conflict for LE in state 89 resolved as shift
WARNING: shift/reduce conflict for GE in state 89 resolved as shift
WARNING: shift/reduce conflict for DOT in state 89 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 89 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 89 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 89 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 90 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 90 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 90 resolved as shift
WARNING: shift/reduce conflict for DIV in state 90 resolved as shift
WARNING: shift/reduce conflict for MOD in state 90 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 90 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 90 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 90 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 90 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 90 resolved as shift
WARNING: shift/reduce conflict for POT in state 90 resolved as shift
WARNING: shift/reduce conflict for AND in state 90 resolved as shift
WARNING: shift/reduce conflict for OR in state 90 resolved as shift
WARNING: shift/reduce conflict for EQ in state 90 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 90 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 90 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 90 resolved as shift
WARNING: shift/reduce conflict for LT in state 90 resolved as shift
WARNING: shift/reduce conflict for GT in state 90 resolved as shift
WARNING: shift/reduce conflict for LE in state 90 resolved as shift
WARNING: shift/reduce conflict for GE in state 90 resolved as shift
WARNING: shift/reduce conflict for DOT in state 90 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 90 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 90 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 90 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 91 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 91 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 91 resolved as shift
WARNING: shift/reduce conflict for DIV in state 91 resolved as shift
WARNING: shift/reduce conflict for MOD in state 91 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 91 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 91 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 91 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 91 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 91 resolved as shift
WARNING: shift/reduce conflict for POT in state 91 resolved as shift
WARNING: shift/reduce conflict for AND in state 91 resolved as shift
WARNING: shift/reduce conflict for OR in state 91 resolved as shift
WARNING: shift/reduce conflict for EQ in state 91 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 91 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 91 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 91 resolved as shift
WARNING: shift/reduce conflict for LT in state 91 resolved as shift
WARNING: shift/reduce conflict for GT in state 91 resolved as shift
WARNING: shift/reduce conflict for LE in state 91 resolved as shift
WARNING: shift/reduce conflict for GE in state 91 resolved as shift
WARNING: shift/reduce conflict for DOT in state 91 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 91 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 91 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 91 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 92 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 92 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 92 resolved as shift
WARNING: shift/reduce conflict for DIV in state 92 resolved as shift
WARNING: shift/reduce conflict for MOD in state 92 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 92 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 92 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 92 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 92 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 92 resolved as shift
WARNING: shift/reduce conflict for POT in state 92 resolved as shift
WARNING: shift/reduce conflict for AND in state 92 resolved as shift
WARNING: shift/reduce conflict for OR in state 92 resolved as shift
WARNING: shift/reduce conflict for EQ in state 92 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 92 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 92 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 92 resolved as shift
WARNING: shift/reduce conflict for LT in state 92 resolved as shift
WARNING: shift/reduce conflict for GT in state 92 resolved as shift
WARNING: shift/reduce conflict for LE in state 92 resolved as shift
WARNING: shift/reduce conflict for GE in state 92 resolved as shift
WARNING: shift/reduce conflict for DOT in state 92 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 92 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 92 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 92 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 93 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 93 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 93 resolved as shift
WARNING: shift/reduce conflict for DIV in state 93 resolved as shift
WARNING: shift/reduce conflict for MOD in state 93 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 93 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 93 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 93 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 93 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 93 resolved as shift
WARNING: shift/reduce conflict for POT in state 93 resolved as shift
WARNING: shift/reduce conflict for AND in state 93 resolved as shift
WARNING: shift/reduce conflict for OR in state 93 resolved as shift
WARNING: shift/reduce conflict for EQ in state 93 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 93 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 93 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 93 resolved as shift
WARNING: shift/reduce conflict for LT in state 93 resolved as shift
WARNING: shift/reduce conflict for GT in state 93 resolved as shift
WARNING: shift/reduce conflict for LE in state 93 resolved as shift
WARNING: shift/reduce conflict for GE in state 93 resolved as shift
WARNING: shift/reduce conflict for DOT in state 93 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 93 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 93 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 93 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 94 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 94 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 94 resolved as shift
WARNING: shift/reduce conflict for DIV in state 94 resolved as shift
WARNING: shift/reduce conflict for MOD in state 94 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 94 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 94 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 94 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 94 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 94 resolved as shift
WARNING: shift/reduce conflict for POT in state 94 resolved as shift
WARNING: shift/reduce conflict for AND in state 94 resolved as shift
WARNING: shift/reduce conflict for OR in state 94 resolved as shift
WARNING: shift/reduce conflict for EQ in state 94 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 94 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 94 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 94 resolved as shift
WARNING: shift/reduce conflict for LT in state 94 resolved as shift
WARNING: shift/reduce conflict for GT in state 94 resolved as shift
WARNING: shift/reduce conflict for LE in state 94 resolved as shift
WARNING: shift/reduce conflict for GE in state 94 resolved as shift
WARNING: shift/reduce conflict for DOT in state 94 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 94 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 94 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 94 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 137 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 143 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 168 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 168 resolved as shift
WARNING: shift/reduce conflict for LET in state 168 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 168 resolved as shift
WARNING: shift/reduce conflict for CONSOLE in state 168 resolved as shift
WARNING: shift/reduce conflict for NOT in state 168 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 168 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 168 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 168 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 168 resolved as shift
WARNING: shift/reduce conflict for STRING in state 168 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 168 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 168 resolved as shift
WARNING: shift/reduce conflict for IF in state 168 resolved as shift
WARNING: shift/reduce conflict for FOR in state 168 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 173 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 173 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 173 resolved as shift
WARNING: shift/reduce conflict for DIV in state 173 resolved as shift
WARNING: shift/reduce conflict for MOD in state 173 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 173 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 173 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 173 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 173 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 173 resolved as shift
WARNING: shift/reduce conflict for POT in state 173 resolved as shift
WARNING: shift/reduce conflict for AND in state 173 resolved as shift
WARNING: shift/reduce conflict for OR in state 173 resolved as shift
WARNING: shift/reduce conflict for EQ in state 173 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 173 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 173 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 173 resolved as shift
WARNING: shift/reduce conflict for LT in state 173 resolved as shift
WARNING: shift/reduce conflict for GT in state 173 resolved as shift
WARNING: shift/reduce conflict for LE in state 173 resolved as shift
WARNING: shift/reduce conflict for GE in state 173 resolved as shift
WARNING: shift/reduce conflict for DOT in state 173 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 173 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 173 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 173 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 174 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 174 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 174 resolved as shift
WARNING: shift/reduce conflict for DIV in state 174 resolved as shift
WARNING: shift/reduce conflict for MOD in state 174 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 174 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 174 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 174 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 174 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 174 resolved as shift
WARNING: shift/reduce conflict for POT in state 174 resolved as shift
WARNING: shift/reduce conflict for AND in state 174 resolved as shift
WARNING: shift/reduce conflict for OR in state 174 resolved as shift
WARNING: shift/reduce conflict for EQ in state 174 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 174 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 174 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 174 resolved as shift
WARNING: shift/reduce conflict for LT in state 174 resolved as shift
WARNING: shift/reduce conflict for GT in state 174 resolved as shift
WARNING: shift/reduce conflict for LE in state 174 resolved as shift
WARNING: shift/reduce conflict for GE in state 174 resolved as shift
WARNING: shift/reduce conflict for DOT in state 174 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 174 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 174 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 174 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 185 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 185 resolved as shift
WARNING: reduce/reduce conflict in state 3 resolved using rule (element -> letAssignment)
WARNING: rejected rule (statement -> letAssignment) in state 3
WARNING: reduce/reduce conflict in state 4 resolved using rule (element -> declaracion)
WARNING: rejected rule (statement -> declaracion) in state 4
WARNING: reduce/reduce conflict in state 5 resolved using rule (element -> function)
WARNING: rejected rule (statement -> function) in state 5
WARNING: reduce/reduce conflict in state 6 resolved using rule (element -> controlEstructure)
WARNING: rejected rule (statement -> controlEstructure) in state 6
WARNING: reduce/reduce conflict in state 7 resolved using rule (element -> forEstructure)
WARNING: rejected rule (statement -> forEstructure) in state 7
WARNING: reduce/reduce conflict in state 10 resolved using rule (element -> consolelog)
WARNING: rejected rule (statement -> consolelog) in state 10
WARNING: reduce/reduce conflict in state 27 resolved using rule (element -> expression SEMICOLON)
WARNING: rejected rule (statement -> expression SEMICOLON) in state 27
WARNING: reduce/reduce conflict in state 170 resolved using rule (for_update -> expression PLUSPLUS)
WARNING: rejected rule (expression -> expression PLUSPLUS) in state 170
WARNING: reduce/reduce conflict in state 171 resolved using rule (for_update -> expression MINUSMINUS)
WARNING: rejected rule (expression -> expression MINUSMINUS) in state 171
WARNING: reduce/reduce conflict in state 173 resolved using rule (for_update -> PLUSPLUS expression)
WARNING: rejected rule (expression -> PLUSPLUS expression) in state 173
WARNING: reduce/reduce conflict in state 174 resolved using rule (for_update -> MINUSMINUS expression)
WARNING: rejected rule (expression -> MINUSMINUS expression) in state 174
WARNING: reduce/reduce conflict in state 185 resolved using rule (controlEstructure -> IF LPAREN expression RPAREN statement)
WARNING: rejected rule (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement) in state 185
WARNING: reduce/reduce conflict in state 187 resolved using rule (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement)
WARNING: rejected rule (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement) in state 187
WARNING: Rule (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement) is never reduced
WARNING: Rule (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement) is never reduced
