Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ANY
    AS
    ASYNC
    AWAIT
    BIGINT_TYPE
    BREAK
    CASE
    CATCH
    CLASS
    CONTINUE
    DEFAULT
    ENUM
    EXPORT
    FINALLY
    IMPORT
    INTERFACE
    NEW
    NULL_TYPE
    OF
    PRIVATE
    PROTECTED
    PUBLIC
    STATIC
    SUPER
    SWITCH
    SYMBOL_TYPE
    THIS
    TRY
    TYPE
    UNDEFINED_TYPE
    VOID

Grammar

Rule 0     S' -> program
Rule 1     program -> program element
Rule 2     program -> element
Rule 3     element -> letAssignment
Rule 4     element -> declaracion
Rule 5     element -> function
Rule 6     element -> controlEstructure
Rule 7     element -> forEstructure
Rule 8     element -> statement
Rule 9     element -> expression SEMICOLON
Rule 10    element -> consolelog
Rule 11    letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON
Rule 12    letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON
Rule 13    declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
Rule 14    lista_expresiones_opt -> lista_expresiones
Rule 15    lista_expresiones_opt -> empty
Rule 16    lista_expresiones -> expression
Rule 17    lista_expresiones -> expression COMMA lista_expresiones
Rule 18    forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
Rule 19    for_init -> LET IDENTIFIER EQUAL expression
Rule 20    for_init -> LET IDENTIFIER COLON type EQUAL expression
Rule 21    for_init -> expression
Rule 22    for_init -> empty
Rule 23    for_update -> expression
Rule 24    for_update -> expression PLUSPLUS
Rule 25    for_update -> expression MINUSMINUS
Rule 26    for_update -> PLUSPLUS expression
Rule 27    for_update -> MINUSMINUS expression
Rule 28    for_update -> empty
Rule 29    function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
Rule 30    parameters -> IDENTIFIER COLON type
Rule 31    parameters -> IDENTIFIER COLON type COMMA parameters
Rule 32    parameters -> empty
Rule 33    body_function -> instruction_list
Rule 34    type -> LBRACKET type COMMA type RBRACKET
Rule 35    expression -> LBRACKET expression COMMA expression RBRACKET
Rule 36    type -> NUMBER_TYPE
Rule 37    type -> STRING_TYPE
Rule 38    type -> BOOLEAN_TYPE
Rule 39    type -> IDENTIFIER
Rule 40    type -> type LBRACKET RBRACKET
Rule 41    expression -> expression PLUS expression
Rule 42    expression -> expression MINUS expression
Rule 43    expression -> expression TIMES expression
Rule 44    expression -> expression DIV expression
Rule 45    expression -> expression MOD expression
Rule 46    expression -> expression PLUS_ASSIGN expression
Rule 47    expression -> expression MINUS_ASSIGN expression
Rule 48    expression -> expression MULT_ASSIGN expression
Rule 49    expression -> expression DIV_ASSIGN expression
Rule 50    expression -> expression MOD_ASSIGN expression
Rule 51    expression -> expression POT expression
Rule 52    expression -> expression AND expression
Rule 53    expression -> expression OR expression
Rule 54    expression -> expression EQ expression
Rule 55    expression -> expression NEQ expression
Rule 56    expression -> expression STRICT_EQ expression
Rule 57    expression -> expression STRICT_NEQ expression
Rule 58    expression -> expression LT expression
Rule 59    expression -> expression GT expression
Rule 60    expression -> expression LE expression
Rule 61    expression -> expression GE expression
Rule 62    expression -> PROMPT LPAREN STRING RPAREN
Rule 63    expression -> NOT expression
Rule 64    expression -> LPAREN expression RPAREN
Rule 65    expression -> expression DOT IDENTIFIER
Rule 66    expression -> expression LBRACKET expression RBRACKET
Rule 67    expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN
Rule 68    expression -> NUMBER
Rule 69    expression -> FLOAT
Rule 70    expression -> STRING
Rule 71    expression -> IDENTIFIER
Rule 72    expression -> TRUE
Rule 73    expression -> FALSE
Rule 74    expression -> expression PLUSPLUS
Rule 75    expression -> expression MINUSMINUS
Rule 76    expression -> PLUSPLUS expression
Rule 77    expression -> MINUSMINUS expression
Rule 78    consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
Rule 79    controlEstructure -> IF LPAREN expression RPAREN statement
Rule 80    controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement
Rule 81    controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
Rule 82    controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
Rule 83    statement -> LBRACE instruction_list RBRACE
Rule 84    statement -> letAssignment
Rule 85    statement -> declaracion
Rule 86    statement -> function
Rule 87    statement -> consolelog
Rule 88    statement -> expression SEMICOLON
Rule 89    statement -> controlEstructure
Rule 90    statement -> RETURN expression SEMICOLON
Rule 91    statement -> forEstructure
Rule 92    statement -> varAssignment
Rule 93    instruction_list -> instruction_list statement
Rule 94    instruction_list -> statement
Rule 95    instruction_list -> empty
Rule 96    empty -> <empty>
Rule 97    controlEstructure -> WHILE LPAREN expression RPAREN statement
Rule 98    varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
Rule 99    varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON
Rule 100   function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON

Terminals, with rules where they appear

AND                  : 52
ANY                  : 
ARROW                : 100
AS                   : 
ASYNC                : 
AWAIT                : 
BIGINT_TYPE          : 
BOOLEAN_TYPE         : 38
BREAK                : 
CASE                 : 
CATCH                : 
CLASS                : 
COLON                : 11 13 20 29 30 31 98
COMMA                : 17 31 34 35
CONSOLE              : 78
CONST                : 100
CONTINUE             : 
DEFAULT              : 
DIV                  : 44
DIV_ASSIGN           : 49
DOT                  : 65 78
ELSE                 : 80 81 82 82
ENUM                 : 
EQ                   : 54
EQUAL                : 11 12 13 19 20 98 99 100
EXPORT               : 
FALSE                : 73
FINALLY              : 
FLOAT                : 69
FOR                  : 18
FUNCTION             : 29
GE                   : 61
GT                   : 59
IDENTIFIER           : 11 12 13 19 20 29 30 31 39 65 67 71 98 99 100
IF                   : 79 80 81 81 82 82
IMPORT               : 
INTERFACE            : 
LBRACE               : 29 83 100
LBRACKET             : 13 13 34 35 40 66
LE                   : 60
LET                  : 11 12 13 19 20
LOG                  : 78
LPAREN               : 18 29 62 64 67 78 79 80 81 81 82 82 97 100
LT                   : 58
MINUS                : 42
MINUSMINUS           : 25 27 75 77
MINUS_ASSIGN         : 47
MOD                  : 45
MOD_ASSIGN           : 50
MULT_ASSIGN          : 48
NEQ                  : 55
NEW                  : 
NOT                  : 63
NULL_TYPE            : 
NUMBER               : 68
NUMBER_TYPE          : 36
OF                   : 
OR                   : 53
PLUS                 : 41
PLUSPLUS             : 24 26 74 76
PLUS_ASSIGN          : 46
POT                  : 51
PRIVATE              : 
PROMPT               : 62
PROTECTED            : 
PUBLIC               : 
RBRACE               : 29 83 100
RBRACKET             : 13 13 34 35 40 66
RETURN               : 90
RPAREN               : 18 29 62 64 67 78 79 80 81 81 82 82 97 100
SEMICOLON            : 9 11 12 13 18 18 78 88 90 98 99 100
STATIC               : 
STRICT_EQ            : 56
STRICT_NEQ           : 57
STRING               : 62 70
STRING_TYPE          : 37
SUPER                : 
SWITCH               : 
SYMBOL_TYPE          : 
THIS                 : 
TIMES                : 43
TRUE                 : 72
TRY                  : 
TYPE                 : 
UNDEFINED_TYPE       : 
VAR                  : 98 99
VOID                 : 
WHILE                : 97
error                : 

Nonterminals, with rules where they appear

body_function        : 29 100
consolelog           : 10 87
controlEstructure    : 6 89
declaracion          : 4 85
element              : 1 2
empty                : 15 22 28 32 95
expression           : 9 11 12 16 17 18 19 20 21 23 24 25 26 27 35 35 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 50 51 51 52 52 53 53 54 54 55 55 56 56 57 57 58 58 59 59 60 60 61 61 63 64 65 66 66 74 75 76 77 79 80 81 81 82 82 88 90 97 98 99
forEstructure        : 7 91
for_init             : 18
for_update           : 18
function             : 5 86
instruction_list     : 33 83 93
letAssignment        : 3 84
lista_expresiones    : 14 17
lista_expresiones_opt : 13 67 78
parameters           : 29 31 100
program              : 1 0
statement            : 8 18 79 80 80 81 81 82 82 82 93 94 97
type                 : 11 13 20 29 30 31 34 34 40 98
varAssignment        : 92

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program element
    (2) program -> . element
    (3) element -> . letAssignment
    (4) element -> . declaracion
    (5) element -> . function
    (6) element -> . controlEstructure
    (7) element -> . forEstructure
    (8) element -> . statement
    (9) element -> . expression SEMICOLON
    (10) element -> . consolelog
    (11) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (12) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (13) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (29) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (100) function -> . CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (79) controlEstructure -> . IF LPAREN expression RPAREN statement
    (80) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (81) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (82) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (97) controlEstructure -> . WHILE LPAREN expression RPAREN statement
    (18) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (83) statement -> . LBRACE instruction_list RBRACE
    (84) statement -> . letAssignment
    (85) statement -> . declaracion
    (86) statement -> . function
    (87) statement -> . consolelog
    (88) statement -> . expression SEMICOLON
    (89) statement -> . controlEstructure
    (90) statement -> . RETURN expression SEMICOLON
    (91) statement -> . forEstructure
    (92) statement -> . varAssignment
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression
    (78) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (98) varAssignment -> . VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
    (99) varAssignment -> . VAR IDENTIFIER EQUAL expression SEMICOLON

    LET             shift and go to state 11
    FUNCTION        shift and go to state 14
    CONST           shift and go to state 17
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    LBRACE          shift and go to state 16
    RETURN          shift and go to state 21
    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31
    CONSOLE         shift and go to state 32
    VAR             shift and go to state 33

    program                        shift and go to state 1
    element                        shift and go to state 2
    letAssignment                  shift and go to state 3
    declaracion                    shift and go to state 4
    function                       shift and go to state 5
    controlEstructure              shift and go to state 6
    forEstructure                  shift and go to state 7
    statement                      shift and go to state 8
    expression                     shift and go to state 9
    consolelog                     shift and go to state 10
    varAssignment                  shift and go to state 22

state 1

    (0) S' -> program .
    (1) program -> program . element
    (3) element -> . letAssignment
    (4) element -> . declaracion
    (5) element -> . function
    (6) element -> . controlEstructure
    (7) element -> . forEstructure
    (8) element -> . statement
    (9) element -> . expression SEMICOLON
    (10) element -> . consolelog
    (11) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (12) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (13) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (29) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (100) function -> . CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (79) controlEstructure -> . IF LPAREN expression RPAREN statement
    (80) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (81) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (82) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (97) controlEstructure -> . WHILE LPAREN expression RPAREN statement
    (18) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (83) statement -> . LBRACE instruction_list RBRACE
    (84) statement -> . letAssignment
    (85) statement -> . declaracion
    (86) statement -> . function
    (87) statement -> . consolelog
    (88) statement -> . expression SEMICOLON
    (89) statement -> . controlEstructure
    (90) statement -> . RETURN expression SEMICOLON
    (91) statement -> . forEstructure
    (92) statement -> . varAssignment
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression
    (78) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (98) varAssignment -> . VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
    (99) varAssignment -> . VAR IDENTIFIER EQUAL expression SEMICOLON

    LET             shift and go to state 11
    FUNCTION        shift and go to state 14
    CONST           shift and go to state 17
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    LBRACE          shift and go to state 16
    RETURN          shift and go to state 21
    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31
    CONSOLE         shift and go to state 32
    VAR             shift and go to state 33

    element                        shift and go to state 34
    letAssignment                  shift and go to state 3
    declaracion                    shift and go to state 4
    function                       shift and go to state 5
    controlEstructure              shift and go to state 6
    forEstructure                  shift and go to state 7
    statement                      shift and go to state 8
    expression                     shift and go to state 9
    consolelog                     shift and go to state 10
    varAssignment                  shift and go to state 22

state 2

    (2) program -> element .

    LET             reduce using rule 2 (program -> element .)
    FUNCTION        reduce using rule 2 (program -> element .)
    CONST           reduce using rule 2 (program -> element .)
    IF              reduce using rule 2 (program -> element .)
    WHILE           reduce using rule 2 (program -> element .)
    FOR             reduce using rule 2 (program -> element .)
    LBRACE          reduce using rule 2 (program -> element .)
    RETURN          reduce using rule 2 (program -> element .)
    LBRACKET        reduce using rule 2 (program -> element .)
    PROMPT          reduce using rule 2 (program -> element .)
    NOT             reduce using rule 2 (program -> element .)
    LPAREN          reduce using rule 2 (program -> element .)
    IDENTIFIER      reduce using rule 2 (program -> element .)
    NUMBER          reduce using rule 2 (program -> element .)
    FLOAT           reduce using rule 2 (program -> element .)
    STRING          reduce using rule 2 (program -> element .)
    TRUE            reduce using rule 2 (program -> element .)
    FALSE           reduce using rule 2 (program -> element .)
    PLUSPLUS        reduce using rule 2 (program -> element .)
    MINUSMINUS      reduce using rule 2 (program -> element .)
    CONSOLE         reduce using rule 2 (program -> element .)
    VAR             reduce using rule 2 (program -> element .)
    $end            reduce using rule 2 (program -> element .)


state 3

    (3) element -> letAssignment .
    (84) statement -> letAssignment .

  ! reduce/reduce conflict for LET resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for CONST resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for IF resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for WHILE resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for FOR resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for LBRACE resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for RETURN resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for PROMPT resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for NOT resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for LPAREN resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for NUMBER resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for FLOAT resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for STRING resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for TRUE resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for FALSE resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for PLUSPLUS resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for MINUSMINUS resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for VAR resolved using rule 3 (element -> letAssignment .)
  ! reduce/reduce conflict for $end resolved using rule 3 (element -> letAssignment .)
    LET             reduce using rule 3 (element -> letAssignment .)
    FUNCTION        reduce using rule 3 (element -> letAssignment .)
    CONST           reduce using rule 3 (element -> letAssignment .)
    IF              reduce using rule 3 (element -> letAssignment .)
    WHILE           reduce using rule 3 (element -> letAssignment .)
    FOR             reduce using rule 3 (element -> letAssignment .)
    LBRACE          reduce using rule 3 (element -> letAssignment .)
    RETURN          reduce using rule 3 (element -> letAssignment .)
    LBRACKET        reduce using rule 3 (element -> letAssignment .)
    PROMPT          reduce using rule 3 (element -> letAssignment .)
    NOT             reduce using rule 3 (element -> letAssignment .)
    LPAREN          reduce using rule 3 (element -> letAssignment .)
    IDENTIFIER      reduce using rule 3 (element -> letAssignment .)
    NUMBER          reduce using rule 3 (element -> letAssignment .)
    FLOAT           reduce using rule 3 (element -> letAssignment .)
    STRING          reduce using rule 3 (element -> letAssignment .)
    TRUE            reduce using rule 3 (element -> letAssignment .)
    FALSE           reduce using rule 3 (element -> letAssignment .)
    PLUSPLUS        reduce using rule 3 (element -> letAssignment .)
    MINUSMINUS      reduce using rule 3 (element -> letAssignment .)
    CONSOLE         reduce using rule 3 (element -> letAssignment .)
    VAR             reduce using rule 3 (element -> letAssignment .)
    $end            reduce using rule 3 (element -> letAssignment .)

  ! LET             [ reduce using rule 84 (statement -> letAssignment .) ]
  ! FUNCTION        [ reduce using rule 84 (statement -> letAssignment .) ]
  ! CONST           [ reduce using rule 84 (statement -> letAssignment .) ]
  ! IF              [ reduce using rule 84 (statement -> letAssignment .) ]
  ! WHILE           [ reduce using rule 84 (statement -> letAssignment .) ]
  ! FOR             [ reduce using rule 84 (statement -> letAssignment .) ]
  ! LBRACE          [ reduce using rule 84 (statement -> letAssignment .) ]
  ! RETURN          [ reduce using rule 84 (statement -> letAssignment .) ]
  ! LBRACKET        [ reduce using rule 84 (statement -> letAssignment .) ]
  ! PROMPT          [ reduce using rule 84 (statement -> letAssignment .) ]
  ! NOT             [ reduce using rule 84 (statement -> letAssignment .) ]
  ! LPAREN          [ reduce using rule 84 (statement -> letAssignment .) ]
  ! IDENTIFIER      [ reduce using rule 84 (statement -> letAssignment .) ]
  ! NUMBER          [ reduce using rule 84 (statement -> letAssignment .) ]
  ! FLOAT           [ reduce using rule 84 (statement -> letAssignment .) ]
  ! STRING          [ reduce using rule 84 (statement -> letAssignment .) ]
  ! TRUE            [ reduce using rule 84 (statement -> letAssignment .) ]
  ! FALSE           [ reduce using rule 84 (statement -> letAssignment .) ]
  ! PLUSPLUS        [ reduce using rule 84 (statement -> letAssignment .) ]
  ! MINUSMINUS      [ reduce using rule 84 (statement -> letAssignment .) ]
  ! CONSOLE         [ reduce using rule 84 (statement -> letAssignment .) ]
  ! VAR             [ reduce using rule 84 (statement -> letAssignment .) ]
  ! $end            [ reduce using rule 84 (statement -> letAssignment .) ]


state 4

    (4) element -> declaracion .
    (85) statement -> declaracion .

  ! reduce/reduce conflict for LET resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for CONST resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for IF resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for WHILE resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for FOR resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for LBRACE resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for RETURN resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for PROMPT resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for NOT resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for LPAREN resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for NUMBER resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for FLOAT resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for STRING resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for TRUE resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for FALSE resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for PLUSPLUS resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for MINUSMINUS resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for VAR resolved using rule 4 (element -> declaracion .)
  ! reduce/reduce conflict for $end resolved using rule 4 (element -> declaracion .)
    LET             reduce using rule 4 (element -> declaracion .)
    FUNCTION        reduce using rule 4 (element -> declaracion .)
    CONST           reduce using rule 4 (element -> declaracion .)
    IF              reduce using rule 4 (element -> declaracion .)
    WHILE           reduce using rule 4 (element -> declaracion .)
    FOR             reduce using rule 4 (element -> declaracion .)
    LBRACE          reduce using rule 4 (element -> declaracion .)
    RETURN          reduce using rule 4 (element -> declaracion .)
    LBRACKET        reduce using rule 4 (element -> declaracion .)
    PROMPT          reduce using rule 4 (element -> declaracion .)
    NOT             reduce using rule 4 (element -> declaracion .)
    LPAREN          reduce using rule 4 (element -> declaracion .)
    IDENTIFIER      reduce using rule 4 (element -> declaracion .)
    NUMBER          reduce using rule 4 (element -> declaracion .)
    FLOAT           reduce using rule 4 (element -> declaracion .)
    STRING          reduce using rule 4 (element -> declaracion .)
    TRUE            reduce using rule 4 (element -> declaracion .)
    FALSE           reduce using rule 4 (element -> declaracion .)
    PLUSPLUS        reduce using rule 4 (element -> declaracion .)
    MINUSMINUS      reduce using rule 4 (element -> declaracion .)
    CONSOLE         reduce using rule 4 (element -> declaracion .)
    VAR             reduce using rule 4 (element -> declaracion .)
    $end            reduce using rule 4 (element -> declaracion .)

  ! LET             [ reduce using rule 85 (statement -> declaracion .) ]
  ! FUNCTION        [ reduce using rule 85 (statement -> declaracion .) ]
  ! CONST           [ reduce using rule 85 (statement -> declaracion .) ]
  ! IF              [ reduce using rule 85 (statement -> declaracion .) ]
  ! WHILE           [ reduce using rule 85 (statement -> declaracion .) ]
  ! FOR             [ reduce using rule 85 (statement -> declaracion .) ]
  ! LBRACE          [ reduce using rule 85 (statement -> declaracion .) ]
  ! RETURN          [ reduce using rule 85 (statement -> declaracion .) ]
  ! LBRACKET        [ reduce using rule 85 (statement -> declaracion .) ]
  ! PROMPT          [ reduce using rule 85 (statement -> declaracion .) ]
  ! NOT             [ reduce using rule 85 (statement -> declaracion .) ]
  ! LPAREN          [ reduce using rule 85 (statement -> declaracion .) ]
  ! IDENTIFIER      [ reduce using rule 85 (statement -> declaracion .) ]
  ! NUMBER          [ reduce using rule 85 (statement -> declaracion .) ]
  ! FLOAT           [ reduce using rule 85 (statement -> declaracion .) ]
  ! STRING          [ reduce using rule 85 (statement -> declaracion .) ]
  ! TRUE            [ reduce using rule 85 (statement -> declaracion .) ]
  ! FALSE           [ reduce using rule 85 (statement -> declaracion .) ]
  ! PLUSPLUS        [ reduce using rule 85 (statement -> declaracion .) ]
  ! MINUSMINUS      [ reduce using rule 85 (statement -> declaracion .) ]
  ! CONSOLE         [ reduce using rule 85 (statement -> declaracion .) ]
  ! VAR             [ reduce using rule 85 (statement -> declaracion .) ]
  ! $end            [ reduce using rule 85 (statement -> declaracion .) ]


state 5

    (5) element -> function .
    (86) statement -> function .

  ! reduce/reduce conflict for LET resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for CONST resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for IF resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for WHILE resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for FOR resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for LBRACE resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for RETURN resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for PROMPT resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for NOT resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for LPAREN resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for NUMBER resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for FLOAT resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for STRING resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for TRUE resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for FALSE resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for PLUSPLUS resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for MINUSMINUS resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for VAR resolved using rule 5 (element -> function .)
  ! reduce/reduce conflict for $end resolved using rule 5 (element -> function .)
    LET             reduce using rule 5 (element -> function .)
    FUNCTION        reduce using rule 5 (element -> function .)
    CONST           reduce using rule 5 (element -> function .)
    IF              reduce using rule 5 (element -> function .)
    WHILE           reduce using rule 5 (element -> function .)
    FOR             reduce using rule 5 (element -> function .)
    LBRACE          reduce using rule 5 (element -> function .)
    RETURN          reduce using rule 5 (element -> function .)
    LBRACKET        reduce using rule 5 (element -> function .)
    PROMPT          reduce using rule 5 (element -> function .)
    NOT             reduce using rule 5 (element -> function .)
    LPAREN          reduce using rule 5 (element -> function .)
    IDENTIFIER      reduce using rule 5 (element -> function .)
    NUMBER          reduce using rule 5 (element -> function .)
    FLOAT           reduce using rule 5 (element -> function .)
    STRING          reduce using rule 5 (element -> function .)
    TRUE            reduce using rule 5 (element -> function .)
    FALSE           reduce using rule 5 (element -> function .)
    PLUSPLUS        reduce using rule 5 (element -> function .)
    MINUSMINUS      reduce using rule 5 (element -> function .)
    CONSOLE         reduce using rule 5 (element -> function .)
    VAR             reduce using rule 5 (element -> function .)
    $end            reduce using rule 5 (element -> function .)

  ! LET             [ reduce using rule 86 (statement -> function .) ]
  ! FUNCTION        [ reduce using rule 86 (statement -> function .) ]
  ! CONST           [ reduce using rule 86 (statement -> function .) ]
  ! IF              [ reduce using rule 86 (statement -> function .) ]
  ! WHILE           [ reduce using rule 86 (statement -> function .) ]
  ! FOR             [ reduce using rule 86 (statement -> function .) ]
  ! LBRACE          [ reduce using rule 86 (statement -> function .) ]
  ! RETURN          [ reduce using rule 86 (statement -> function .) ]
  ! LBRACKET        [ reduce using rule 86 (statement -> function .) ]
  ! PROMPT          [ reduce using rule 86 (statement -> function .) ]
  ! NOT             [ reduce using rule 86 (statement -> function .) ]
  ! LPAREN          [ reduce using rule 86 (statement -> function .) ]
  ! IDENTIFIER      [ reduce using rule 86 (statement -> function .) ]
  ! NUMBER          [ reduce using rule 86 (statement -> function .) ]
  ! FLOAT           [ reduce using rule 86 (statement -> function .) ]
  ! STRING          [ reduce using rule 86 (statement -> function .) ]
  ! TRUE            [ reduce using rule 86 (statement -> function .) ]
  ! FALSE           [ reduce using rule 86 (statement -> function .) ]
  ! PLUSPLUS        [ reduce using rule 86 (statement -> function .) ]
  ! MINUSMINUS      [ reduce using rule 86 (statement -> function .) ]
  ! CONSOLE         [ reduce using rule 86 (statement -> function .) ]
  ! VAR             [ reduce using rule 86 (statement -> function .) ]
  ! $end            [ reduce using rule 86 (statement -> function .) ]


state 6

    (6) element -> controlEstructure .
    (89) statement -> controlEstructure .

  ! reduce/reduce conflict for LET resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for CONST resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for IF resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for WHILE resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for FOR resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for LBRACE resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for RETURN resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for PROMPT resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for NOT resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for LPAREN resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for NUMBER resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for FLOAT resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for STRING resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for TRUE resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for FALSE resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for PLUSPLUS resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for MINUSMINUS resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for VAR resolved using rule 6 (element -> controlEstructure .)
  ! reduce/reduce conflict for $end resolved using rule 6 (element -> controlEstructure .)
    LET             reduce using rule 6 (element -> controlEstructure .)
    FUNCTION        reduce using rule 6 (element -> controlEstructure .)
    CONST           reduce using rule 6 (element -> controlEstructure .)
    IF              reduce using rule 6 (element -> controlEstructure .)
    WHILE           reduce using rule 6 (element -> controlEstructure .)
    FOR             reduce using rule 6 (element -> controlEstructure .)
    LBRACE          reduce using rule 6 (element -> controlEstructure .)
    RETURN          reduce using rule 6 (element -> controlEstructure .)
    LBRACKET        reduce using rule 6 (element -> controlEstructure .)
    PROMPT          reduce using rule 6 (element -> controlEstructure .)
    NOT             reduce using rule 6 (element -> controlEstructure .)
    LPAREN          reduce using rule 6 (element -> controlEstructure .)
    IDENTIFIER      reduce using rule 6 (element -> controlEstructure .)
    NUMBER          reduce using rule 6 (element -> controlEstructure .)
    FLOAT           reduce using rule 6 (element -> controlEstructure .)
    STRING          reduce using rule 6 (element -> controlEstructure .)
    TRUE            reduce using rule 6 (element -> controlEstructure .)
    FALSE           reduce using rule 6 (element -> controlEstructure .)
    PLUSPLUS        reduce using rule 6 (element -> controlEstructure .)
    MINUSMINUS      reduce using rule 6 (element -> controlEstructure .)
    CONSOLE         reduce using rule 6 (element -> controlEstructure .)
    VAR             reduce using rule 6 (element -> controlEstructure .)
    $end            reduce using rule 6 (element -> controlEstructure .)

  ! LET             [ reduce using rule 89 (statement -> controlEstructure .) ]
  ! FUNCTION        [ reduce using rule 89 (statement -> controlEstructure .) ]
  ! CONST           [ reduce using rule 89 (statement -> controlEstructure .) ]
  ! IF              [ reduce using rule 89 (statement -> controlEstructure .) ]
  ! WHILE           [ reduce using rule 89 (statement -> controlEstructure .) ]
  ! FOR             [ reduce using rule 89 (statement -> controlEstructure .) ]
  ! LBRACE          [ reduce using rule 89 (statement -> controlEstructure .) ]
  ! RETURN          [ reduce using rule 89 (statement -> controlEstructure .) ]
  ! LBRACKET        [ reduce using rule 89 (statement -> controlEstructure .) ]
  ! PROMPT          [ reduce using rule 89 (statement -> controlEstructure .) ]
  ! NOT             [ reduce using rule 89 (statement -> controlEstructure .) ]
  ! LPAREN          [ reduce using rule 89 (statement -> controlEstructure .) ]
  ! IDENTIFIER      [ reduce using rule 89 (statement -> controlEstructure .) ]
  ! NUMBER          [ reduce using rule 89 (statement -> controlEstructure .) ]
  ! FLOAT           [ reduce using rule 89 (statement -> controlEstructure .) ]
  ! STRING          [ reduce using rule 89 (statement -> controlEstructure .) ]
  ! TRUE            [ reduce using rule 89 (statement -> controlEstructure .) ]
  ! FALSE           [ reduce using rule 89 (statement -> controlEstructure .) ]
  ! PLUSPLUS        [ reduce using rule 89 (statement -> controlEstructure .) ]
  ! MINUSMINUS      [ reduce using rule 89 (statement -> controlEstructure .) ]
  ! CONSOLE         [ reduce using rule 89 (statement -> controlEstructure .) ]
  ! VAR             [ reduce using rule 89 (statement -> controlEstructure .) ]
  ! $end            [ reduce using rule 89 (statement -> controlEstructure .) ]


state 7

    (7) element -> forEstructure .
    (91) statement -> forEstructure .

  ! reduce/reduce conflict for LET resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for CONST resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for IF resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for WHILE resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for FOR resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for LBRACE resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for RETURN resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for PROMPT resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for NOT resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for LPAREN resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for NUMBER resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for FLOAT resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for STRING resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for TRUE resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for FALSE resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for PLUSPLUS resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for MINUSMINUS resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for VAR resolved using rule 7 (element -> forEstructure .)
  ! reduce/reduce conflict for $end resolved using rule 7 (element -> forEstructure .)
    LET             reduce using rule 7 (element -> forEstructure .)
    FUNCTION        reduce using rule 7 (element -> forEstructure .)
    CONST           reduce using rule 7 (element -> forEstructure .)
    IF              reduce using rule 7 (element -> forEstructure .)
    WHILE           reduce using rule 7 (element -> forEstructure .)
    FOR             reduce using rule 7 (element -> forEstructure .)
    LBRACE          reduce using rule 7 (element -> forEstructure .)
    RETURN          reduce using rule 7 (element -> forEstructure .)
    LBRACKET        reduce using rule 7 (element -> forEstructure .)
    PROMPT          reduce using rule 7 (element -> forEstructure .)
    NOT             reduce using rule 7 (element -> forEstructure .)
    LPAREN          reduce using rule 7 (element -> forEstructure .)
    IDENTIFIER      reduce using rule 7 (element -> forEstructure .)
    NUMBER          reduce using rule 7 (element -> forEstructure .)
    FLOAT           reduce using rule 7 (element -> forEstructure .)
    STRING          reduce using rule 7 (element -> forEstructure .)
    TRUE            reduce using rule 7 (element -> forEstructure .)
    FALSE           reduce using rule 7 (element -> forEstructure .)
    PLUSPLUS        reduce using rule 7 (element -> forEstructure .)
    MINUSMINUS      reduce using rule 7 (element -> forEstructure .)
    CONSOLE         reduce using rule 7 (element -> forEstructure .)
    VAR             reduce using rule 7 (element -> forEstructure .)
    $end            reduce using rule 7 (element -> forEstructure .)

  ! LET             [ reduce using rule 91 (statement -> forEstructure .) ]
  ! FUNCTION        [ reduce using rule 91 (statement -> forEstructure .) ]
  ! CONST           [ reduce using rule 91 (statement -> forEstructure .) ]
  ! IF              [ reduce using rule 91 (statement -> forEstructure .) ]
  ! WHILE           [ reduce using rule 91 (statement -> forEstructure .) ]
  ! FOR             [ reduce using rule 91 (statement -> forEstructure .) ]
  ! LBRACE          [ reduce using rule 91 (statement -> forEstructure .) ]
  ! RETURN          [ reduce using rule 91 (statement -> forEstructure .) ]
  ! LBRACKET        [ reduce using rule 91 (statement -> forEstructure .) ]
  ! PROMPT          [ reduce using rule 91 (statement -> forEstructure .) ]
  ! NOT             [ reduce using rule 91 (statement -> forEstructure .) ]
  ! LPAREN          [ reduce using rule 91 (statement -> forEstructure .) ]
  ! IDENTIFIER      [ reduce using rule 91 (statement -> forEstructure .) ]
  ! NUMBER          [ reduce using rule 91 (statement -> forEstructure .) ]
  ! FLOAT           [ reduce using rule 91 (statement -> forEstructure .) ]
  ! STRING          [ reduce using rule 91 (statement -> forEstructure .) ]
  ! TRUE            [ reduce using rule 91 (statement -> forEstructure .) ]
  ! FALSE           [ reduce using rule 91 (statement -> forEstructure .) ]
  ! PLUSPLUS        [ reduce using rule 91 (statement -> forEstructure .) ]
  ! MINUSMINUS      [ reduce using rule 91 (statement -> forEstructure .) ]
  ! CONSOLE         [ reduce using rule 91 (statement -> forEstructure .) ]
  ! VAR             [ reduce using rule 91 (statement -> forEstructure .) ]
  ! $end            [ reduce using rule 91 (statement -> forEstructure .) ]


state 8

    (8) element -> statement .

    LET             reduce using rule 8 (element -> statement .)
    FUNCTION        reduce using rule 8 (element -> statement .)
    CONST           reduce using rule 8 (element -> statement .)
    IF              reduce using rule 8 (element -> statement .)
    WHILE           reduce using rule 8 (element -> statement .)
    FOR             reduce using rule 8 (element -> statement .)
    LBRACE          reduce using rule 8 (element -> statement .)
    RETURN          reduce using rule 8 (element -> statement .)
    LBRACKET        reduce using rule 8 (element -> statement .)
    PROMPT          reduce using rule 8 (element -> statement .)
    NOT             reduce using rule 8 (element -> statement .)
    LPAREN          reduce using rule 8 (element -> statement .)
    IDENTIFIER      reduce using rule 8 (element -> statement .)
    NUMBER          reduce using rule 8 (element -> statement .)
    FLOAT           reduce using rule 8 (element -> statement .)
    STRING          reduce using rule 8 (element -> statement .)
    TRUE            reduce using rule 8 (element -> statement .)
    FALSE           reduce using rule 8 (element -> statement .)
    PLUSPLUS        reduce using rule 8 (element -> statement .)
    MINUSMINUS      reduce using rule 8 (element -> statement .)
    CONSOLE         reduce using rule 8 (element -> statement .)
    VAR             reduce using rule 8 (element -> statement .)
    $end            reduce using rule 8 (element -> statement .)


state 9

    (9) element -> expression . SEMICOLON
    (88) statement -> expression . SEMICOLON
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

    SEMICOLON       shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60


state 10

    (10) element -> consolelog .
    (87) statement -> consolelog .

  ! reduce/reduce conflict for LET resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for CONST resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for IF resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for WHILE resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for FOR resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for LBRACE resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for RETURN resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for PROMPT resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for NOT resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for LPAREN resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for NUMBER resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for FLOAT resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for STRING resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for TRUE resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for FALSE resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for PLUSPLUS resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for MINUSMINUS resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for VAR resolved using rule 10 (element -> consolelog .)
  ! reduce/reduce conflict for $end resolved using rule 10 (element -> consolelog .)
    LET             reduce using rule 10 (element -> consolelog .)
    FUNCTION        reduce using rule 10 (element -> consolelog .)
    CONST           reduce using rule 10 (element -> consolelog .)
    IF              reduce using rule 10 (element -> consolelog .)
    WHILE           reduce using rule 10 (element -> consolelog .)
    FOR             reduce using rule 10 (element -> consolelog .)
    LBRACE          reduce using rule 10 (element -> consolelog .)
    RETURN          reduce using rule 10 (element -> consolelog .)
    LBRACKET        reduce using rule 10 (element -> consolelog .)
    PROMPT          reduce using rule 10 (element -> consolelog .)
    NOT             reduce using rule 10 (element -> consolelog .)
    LPAREN          reduce using rule 10 (element -> consolelog .)
    IDENTIFIER      reduce using rule 10 (element -> consolelog .)
    NUMBER          reduce using rule 10 (element -> consolelog .)
    FLOAT           reduce using rule 10 (element -> consolelog .)
    STRING          reduce using rule 10 (element -> consolelog .)
    TRUE            reduce using rule 10 (element -> consolelog .)
    FALSE           reduce using rule 10 (element -> consolelog .)
    PLUSPLUS        reduce using rule 10 (element -> consolelog .)
    MINUSMINUS      reduce using rule 10 (element -> consolelog .)
    CONSOLE         reduce using rule 10 (element -> consolelog .)
    VAR             reduce using rule 10 (element -> consolelog .)
    $end            reduce using rule 10 (element -> consolelog .)

  ! LET             [ reduce using rule 87 (statement -> consolelog .) ]
  ! FUNCTION        [ reduce using rule 87 (statement -> consolelog .) ]
  ! CONST           [ reduce using rule 87 (statement -> consolelog .) ]
  ! IF              [ reduce using rule 87 (statement -> consolelog .) ]
  ! WHILE           [ reduce using rule 87 (statement -> consolelog .) ]
  ! FOR             [ reduce using rule 87 (statement -> consolelog .) ]
  ! LBRACE          [ reduce using rule 87 (statement -> consolelog .) ]
  ! RETURN          [ reduce using rule 87 (statement -> consolelog .) ]
  ! LBRACKET        [ reduce using rule 87 (statement -> consolelog .) ]
  ! PROMPT          [ reduce using rule 87 (statement -> consolelog .) ]
  ! NOT             [ reduce using rule 87 (statement -> consolelog .) ]
  ! LPAREN          [ reduce using rule 87 (statement -> consolelog .) ]
  ! IDENTIFIER      [ reduce using rule 87 (statement -> consolelog .) ]
  ! NUMBER          [ reduce using rule 87 (statement -> consolelog .) ]
  ! FLOAT           [ reduce using rule 87 (statement -> consolelog .) ]
  ! STRING          [ reduce using rule 87 (statement -> consolelog .) ]
  ! TRUE            [ reduce using rule 87 (statement -> consolelog .) ]
  ! FALSE           [ reduce using rule 87 (statement -> consolelog .) ]
  ! PLUSPLUS        [ reduce using rule 87 (statement -> consolelog .) ]
  ! MINUSMINUS      [ reduce using rule 87 (statement -> consolelog .) ]
  ! CONSOLE         [ reduce using rule 87 (statement -> consolelog .) ]
  ! VAR             [ reduce using rule 87 (statement -> consolelog .) ]
  ! $end            [ reduce using rule 87 (statement -> consolelog .) ]


state 11

    (11) letAssignment -> LET . IDENTIFIER COLON type EQUAL expression SEMICOLON
    (12) letAssignment -> LET . IDENTIFIER EQUAL expression SEMICOLON
    (13) declaracion -> LET . IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON

    IDENTIFIER      shift and go to state 61


state 12

    (67) expression -> IDENTIFIER . LPAREN lista_expresiones_opt RPAREN
    (71) expression -> IDENTIFIER .

    LPAREN          shift and go to state 62
    SEMICOLON       reduce using rule 71 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 71 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 71 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 71 (expression -> IDENTIFIER .)
    DIV             reduce using rule 71 (expression -> IDENTIFIER .)
    MOD             reduce using rule 71 (expression -> IDENTIFIER .)
    PLUS_ASSIGN     reduce using rule 71 (expression -> IDENTIFIER .)
    MINUS_ASSIGN    reduce using rule 71 (expression -> IDENTIFIER .)
    MULT_ASSIGN     reduce using rule 71 (expression -> IDENTIFIER .)
    DIV_ASSIGN      reduce using rule 71 (expression -> IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 71 (expression -> IDENTIFIER .)
    POT             reduce using rule 71 (expression -> IDENTIFIER .)
    AND             reduce using rule 71 (expression -> IDENTIFIER .)
    OR              reduce using rule 71 (expression -> IDENTIFIER .)
    EQ              reduce using rule 71 (expression -> IDENTIFIER .)
    NEQ             reduce using rule 71 (expression -> IDENTIFIER .)
    STRICT_EQ       reduce using rule 71 (expression -> IDENTIFIER .)
    STRICT_NEQ      reduce using rule 71 (expression -> IDENTIFIER .)
    LT              reduce using rule 71 (expression -> IDENTIFIER .)
    GT              reduce using rule 71 (expression -> IDENTIFIER .)
    LE              reduce using rule 71 (expression -> IDENTIFIER .)
    GE              reduce using rule 71 (expression -> IDENTIFIER .)
    DOT             reduce using rule 71 (expression -> IDENTIFIER .)
    LBRACKET        reduce using rule 71 (expression -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 71 (expression -> IDENTIFIER .)
    MINUSMINUS      reduce using rule 71 (expression -> IDENTIFIER .)
    COMMA           reduce using rule 71 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 71 (expression -> IDENTIFIER .)
    RBRACKET        reduce using rule 71 (expression -> IDENTIFIER .)


state 13

    (35) expression -> LBRACKET . expression COMMA expression RBRACKET
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 63

state 14

    (29) function -> FUNCTION . IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE

    IDENTIFIER      shift and go to state 64


state 15

    (64) expression -> LPAREN . expression RPAREN
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 65

state 16

    (83) statement -> LBRACE . instruction_list RBRACE
    (93) instruction_list -> . instruction_list statement
    (94) instruction_list -> . statement
    (95) instruction_list -> . empty
    (83) statement -> . LBRACE instruction_list RBRACE
    (84) statement -> . letAssignment
    (85) statement -> . declaracion
    (86) statement -> . function
    (87) statement -> . consolelog
    (88) statement -> . expression SEMICOLON
    (89) statement -> . controlEstructure
    (90) statement -> . RETURN expression SEMICOLON
    (91) statement -> . forEstructure
    (92) statement -> . varAssignment
    (96) empty -> .
    (11) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (12) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (13) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (29) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (100) function -> . CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (78) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression
    (79) controlEstructure -> . IF LPAREN expression RPAREN statement
    (80) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (81) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (82) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (97) controlEstructure -> . WHILE LPAREN expression RPAREN statement
    (18) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (98) varAssignment -> . VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
    (99) varAssignment -> . VAR IDENTIFIER EQUAL expression SEMICOLON

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for CONST resolved as shift
  ! shift/reduce conflict for CONSOLE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PROMPT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
    LBRACE          shift and go to state 16
    RETURN          shift and go to state 21
    RBRACE          reduce using rule 96 (empty -> .)
    LET             shift and go to state 11
    FUNCTION        shift and go to state 14
    CONST           shift and go to state 17
    CONSOLE         shift and go to state 32
    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    VAR             shift and go to state 33

  ! LBRACE          [ reduce using rule 96 (empty -> .) ]
  ! RETURN          [ reduce using rule 96 (empty -> .) ]
  ! LET             [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 96 (empty -> .) ]
  ! CONST           [ reduce using rule 96 (empty -> .) ]
  ! CONSOLE         [ reduce using rule 96 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 96 (empty -> .) ]
  ! PROMPT          [ reduce using rule 96 (empty -> .) ]
  ! NOT             [ reduce using rule 96 (empty -> .) ]
  ! LPAREN          [ reduce using rule 96 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 96 (empty -> .) ]
  ! NUMBER          [ reduce using rule 96 (empty -> .) ]
  ! FLOAT           [ reduce using rule 96 (empty -> .) ]
  ! STRING          [ reduce using rule 96 (empty -> .) ]
  ! TRUE            [ reduce using rule 96 (empty -> .) ]
  ! FALSE           [ reduce using rule 96 (empty -> .) ]
  ! PLUSPLUS        [ reduce using rule 96 (empty -> .) ]
  ! MINUSMINUS      [ reduce using rule 96 (empty -> .) ]
  ! IF              [ reduce using rule 96 (empty -> .) ]
  ! WHILE           [ reduce using rule 96 (empty -> .) ]
  ! FOR             [ reduce using rule 96 (empty -> .) ]
  ! VAR             [ reduce using rule 96 (empty -> .) ]

    instruction_list               shift and go to state 66
    statement                      shift and go to state 67
    empty                          shift and go to state 68
    letAssignment                  shift and go to state 69
    declaracion                    shift and go to state 70
    function                       shift and go to state 71
    consolelog                     shift and go to state 72
    expression                     shift and go to state 73
    controlEstructure              shift and go to state 74
    forEstructure                  shift and go to state 75
    varAssignment                  shift and go to state 22

state 17

    (100) function -> CONST . IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON

    IDENTIFIER      shift and go to state 76


state 18

    (79) controlEstructure -> IF . LPAREN expression RPAREN statement
    (80) controlEstructure -> IF . LPAREN expression RPAREN statement ELSE statement
    (81) controlEstructure -> IF . LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (82) controlEstructure -> IF . LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement

    LPAREN          shift and go to state 77


state 19

    (97) controlEstructure -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 78


state 20

    (18) forEstructure -> FOR . LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement

    LPAREN          shift and go to state 79


state 21

    (90) statement -> RETURN . expression SEMICOLON
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 80

state 22

    (92) statement -> varAssignment .

    LET             reduce using rule 92 (statement -> varAssignment .)
    FUNCTION        reduce using rule 92 (statement -> varAssignment .)
    CONST           reduce using rule 92 (statement -> varAssignment .)
    IF              reduce using rule 92 (statement -> varAssignment .)
    WHILE           reduce using rule 92 (statement -> varAssignment .)
    FOR             reduce using rule 92 (statement -> varAssignment .)
    LBRACE          reduce using rule 92 (statement -> varAssignment .)
    RETURN          reduce using rule 92 (statement -> varAssignment .)
    LBRACKET        reduce using rule 92 (statement -> varAssignment .)
    PROMPT          reduce using rule 92 (statement -> varAssignment .)
    NOT             reduce using rule 92 (statement -> varAssignment .)
    LPAREN          reduce using rule 92 (statement -> varAssignment .)
    IDENTIFIER      reduce using rule 92 (statement -> varAssignment .)
    NUMBER          reduce using rule 92 (statement -> varAssignment .)
    FLOAT           reduce using rule 92 (statement -> varAssignment .)
    STRING          reduce using rule 92 (statement -> varAssignment .)
    TRUE            reduce using rule 92 (statement -> varAssignment .)
    FALSE           reduce using rule 92 (statement -> varAssignment .)
    PLUSPLUS        reduce using rule 92 (statement -> varAssignment .)
    MINUSMINUS      reduce using rule 92 (statement -> varAssignment .)
    CONSOLE         reduce using rule 92 (statement -> varAssignment .)
    VAR             reduce using rule 92 (statement -> varAssignment .)
    $end            reduce using rule 92 (statement -> varAssignment .)
    RBRACE          reduce using rule 92 (statement -> varAssignment .)
    ELSE            reduce using rule 92 (statement -> varAssignment .)


state 23

    (62) expression -> PROMPT . LPAREN STRING RPAREN

    LPAREN          shift and go to state 81


state 24

    (70) expression -> STRING .

    SEMICOLON       reduce using rule 70 (expression -> STRING .)
    PLUS            reduce using rule 70 (expression -> STRING .)
    MINUS           reduce using rule 70 (expression -> STRING .)
    TIMES           reduce using rule 70 (expression -> STRING .)
    DIV             reduce using rule 70 (expression -> STRING .)
    MOD             reduce using rule 70 (expression -> STRING .)
    PLUS_ASSIGN     reduce using rule 70 (expression -> STRING .)
    MINUS_ASSIGN    reduce using rule 70 (expression -> STRING .)
    MULT_ASSIGN     reduce using rule 70 (expression -> STRING .)
    DIV_ASSIGN      reduce using rule 70 (expression -> STRING .)
    MOD_ASSIGN      reduce using rule 70 (expression -> STRING .)
    POT             reduce using rule 70 (expression -> STRING .)
    AND             reduce using rule 70 (expression -> STRING .)
    OR              reduce using rule 70 (expression -> STRING .)
    EQ              reduce using rule 70 (expression -> STRING .)
    NEQ             reduce using rule 70 (expression -> STRING .)
    STRICT_EQ       reduce using rule 70 (expression -> STRING .)
    STRICT_NEQ      reduce using rule 70 (expression -> STRING .)
    LT              reduce using rule 70 (expression -> STRING .)
    GT              reduce using rule 70 (expression -> STRING .)
    LE              reduce using rule 70 (expression -> STRING .)
    GE              reduce using rule 70 (expression -> STRING .)
    DOT             reduce using rule 70 (expression -> STRING .)
    LBRACKET        reduce using rule 70 (expression -> STRING .)
    PLUSPLUS        reduce using rule 70 (expression -> STRING .)
    MINUSMINUS      reduce using rule 70 (expression -> STRING .)
    COMMA           reduce using rule 70 (expression -> STRING .)
    RPAREN          reduce using rule 70 (expression -> STRING .)
    RBRACKET        reduce using rule 70 (expression -> STRING .)


state 25

    (63) expression -> NOT . expression
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 82

state 26

    (68) expression -> NUMBER .

    SEMICOLON       reduce using rule 68 (expression -> NUMBER .)
    PLUS            reduce using rule 68 (expression -> NUMBER .)
    MINUS           reduce using rule 68 (expression -> NUMBER .)
    TIMES           reduce using rule 68 (expression -> NUMBER .)
    DIV             reduce using rule 68 (expression -> NUMBER .)
    MOD             reduce using rule 68 (expression -> NUMBER .)
    PLUS_ASSIGN     reduce using rule 68 (expression -> NUMBER .)
    MINUS_ASSIGN    reduce using rule 68 (expression -> NUMBER .)
    MULT_ASSIGN     reduce using rule 68 (expression -> NUMBER .)
    DIV_ASSIGN      reduce using rule 68 (expression -> NUMBER .)
    MOD_ASSIGN      reduce using rule 68 (expression -> NUMBER .)
    POT             reduce using rule 68 (expression -> NUMBER .)
    AND             reduce using rule 68 (expression -> NUMBER .)
    OR              reduce using rule 68 (expression -> NUMBER .)
    EQ              reduce using rule 68 (expression -> NUMBER .)
    NEQ             reduce using rule 68 (expression -> NUMBER .)
    STRICT_EQ       reduce using rule 68 (expression -> NUMBER .)
    STRICT_NEQ      reduce using rule 68 (expression -> NUMBER .)
    LT              reduce using rule 68 (expression -> NUMBER .)
    GT              reduce using rule 68 (expression -> NUMBER .)
    LE              reduce using rule 68 (expression -> NUMBER .)
    GE              reduce using rule 68 (expression -> NUMBER .)
    DOT             reduce using rule 68 (expression -> NUMBER .)
    LBRACKET        reduce using rule 68 (expression -> NUMBER .)
    PLUSPLUS        reduce using rule 68 (expression -> NUMBER .)
    MINUSMINUS      reduce using rule 68 (expression -> NUMBER .)
    COMMA           reduce using rule 68 (expression -> NUMBER .)
    RPAREN          reduce using rule 68 (expression -> NUMBER .)
    RBRACKET        reduce using rule 68 (expression -> NUMBER .)


state 27

    (69) expression -> FLOAT .

    SEMICOLON       reduce using rule 69 (expression -> FLOAT .)
    PLUS            reduce using rule 69 (expression -> FLOAT .)
    MINUS           reduce using rule 69 (expression -> FLOAT .)
    TIMES           reduce using rule 69 (expression -> FLOAT .)
    DIV             reduce using rule 69 (expression -> FLOAT .)
    MOD             reduce using rule 69 (expression -> FLOAT .)
    PLUS_ASSIGN     reduce using rule 69 (expression -> FLOAT .)
    MINUS_ASSIGN    reduce using rule 69 (expression -> FLOAT .)
    MULT_ASSIGN     reduce using rule 69 (expression -> FLOAT .)
    DIV_ASSIGN      reduce using rule 69 (expression -> FLOAT .)
    MOD_ASSIGN      reduce using rule 69 (expression -> FLOAT .)
    POT             reduce using rule 69 (expression -> FLOAT .)
    AND             reduce using rule 69 (expression -> FLOAT .)
    OR              reduce using rule 69 (expression -> FLOAT .)
    EQ              reduce using rule 69 (expression -> FLOAT .)
    NEQ             reduce using rule 69 (expression -> FLOAT .)
    STRICT_EQ       reduce using rule 69 (expression -> FLOAT .)
    STRICT_NEQ      reduce using rule 69 (expression -> FLOAT .)
    LT              reduce using rule 69 (expression -> FLOAT .)
    GT              reduce using rule 69 (expression -> FLOAT .)
    LE              reduce using rule 69 (expression -> FLOAT .)
    GE              reduce using rule 69 (expression -> FLOAT .)
    DOT             reduce using rule 69 (expression -> FLOAT .)
    LBRACKET        reduce using rule 69 (expression -> FLOAT .)
    PLUSPLUS        reduce using rule 69 (expression -> FLOAT .)
    MINUSMINUS      reduce using rule 69 (expression -> FLOAT .)
    COMMA           reduce using rule 69 (expression -> FLOAT .)
    RPAREN          reduce using rule 69 (expression -> FLOAT .)
    RBRACKET        reduce using rule 69 (expression -> FLOAT .)


state 28

    (72) expression -> TRUE .

    SEMICOLON       reduce using rule 72 (expression -> TRUE .)
    PLUS            reduce using rule 72 (expression -> TRUE .)
    MINUS           reduce using rule 72 (expression -> TRUE .)
    TIMES           reduce using rule 72 (expression -> TRUE .)
    DIV             reduce using rule 72 (expression -> TRUE .)
    MOD             reduce using rule 72 (expression -> TRUE .)
    PLUS_ASSIGN     reduce using rule 72 (expression -> TRUE .)
    MINUS_ASSIGN    reduce using rule 72 (expression -> TRUE .)
    MULT_ASSIGN     reduce using rule 72 (expression -> TRUE .)
    DIV_ASSIGN      reduce using rule 72 (expression -> TRUE .)
    MOD_ASSIGN      reduce using rule 72 (expression -> TRUE .)
    POT             reduce using rule 72 (expression -> TRUE .)
    AND             reduce using rule 72 (expression -> TRUE .)
    OR              reduce using rule 72 (expression -> TRUE .)
    EQ              reduce using rule 72 (expression -> TRUE .)
    NEQ             reduce using rule 72 (expression -> TRUE .)
    STRICT_EQ       reduce using rule 72 (expression -> TRUE .)
    STRICT_NEQ      reduce using rule 72 (expression -> TRUE .)
    LT              reduce using rule 72 (expression -> TRUE .)
    GT              reduce using rule 72 (expression -> TRUE .)
    LE              reduce using rule 72 (expression -> TRUE .)
    GE              reduce using rule 72 (expression -> TRUE .)
    DOT             reduce using rule 72 (expression -> TRUE .)
    LBRACKET        reduce using rule 72 (expression -> TRUE .)
    PLUSPLUS        reduce using rule 72 (expression -> TRUE .)
    MINUSMINUS      reduce using rule 72 (expression -> TRUE .)
    COMMA           reduce using rule 72 (expression -> TRUE .)
    RPAREN          reduce using rule 72 (expression -> TRUE .)
    RBRACKET        reduce using rule 72 (expression -> TRUE .)


state 29

    (73) expression -> FALSE .

    SEMICOLON       reduce using rule 73 (expression -> FALSE .)
    PLUS            reduce using rule 73 (expression -> FALSE .)
    MINUS           reduce using rule 73 (expression -> FALSE .)
    TIMES           reduce using rule 73 (expression -> FALSE .)
    DIV             reduce using rule 73 (expression -> FALSE .)
    MOD             reduce using rule 73 (expression -> FALSE .)
    PLUS_ASSIGN     reduce using rule 73 (expression -> FALSE .)
    MINUS_ASSIGN    reduce using rule 73 (expression -> FALSE .)
    MULT_ASSIGN     reduce using rule 73 (expression -> FALSE .)
    DIV_ASSIGN      reduce using rule 73 (expression -> FALSE .)
    MOD_ASSIGN      reduce using rule 73 (expression -> FALSE .)
    POT             reduce using rule 73 (expression -> FALSE .)
    AND             reduce using rule 73 (expression -> FALSE .)
    OR              reduce using rule 73 (expression -> FALSE .)
    EQ              reduce using rule 73 (expression -> FALSE .)
    NEQ             reduce using rule 73 (expression -> FALSE .)
    STRICT_EQ       reduce using rule 73 (expression -> FALSE .)
    STRICT_NEQ      reduce using rule 73 (expression -> FALSE .)
    LT              reduce using rule 73 (expression -> FALSE .)
    GT              reduce using rule 73 (expression -> FALSE .)
    LE              reduce using rule 73 (expression -> FALSE .)
    GE              reduce using rule 73 (expression -> FALSE .)
    DOT             reduce using rule 73 (expression -> FALSE .)
    LBRACKET        reduce using rule 73 (expression -> FALSE .)
    PLUSPLUS        reduce using rule 73 (expression -> FALSE .)
    MINUSMINUS      reduce using rule 73 (expression -> FALSE .)
    COMMA           reduce using rule 73 (expression -> FALSE .)
    RPAREN          reduce using rule 73 (expression -> FALSE .)
    RBRACKET        reduce using rule 73 (expression -> FALSE .)


state 30

    (76) expression -> PLUSPLUS . expression
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 83

state 31

    (77) expression -> MINUSMINUS . expression
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 84

state 32

    (78) consolelog -> CONSOLE . DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON

    DOT             shift and go to state 85


state 33

    (98) varAssignment -> VAR . IDENTIFIER COLON type EQUAL expression SEMICOLON
    (99) varAssignment -> VAR . IDENTIFIER EQUAL expression SEMICOLON

    IDENTIFIER      shift and go to state 86


state 34

    (1) program -> program element .

    LET             reduce using rule 1 (program -> program element .)
    FUNCTION        reduce using rule 1 (program -> program element .)
    CONST           reduce using rule 1 (program -> program element .)
    IF              reduce using rule 1 (program -> program element .)
    WHILE           reduce using rule 1 (program -> program element .)
    FOR             reduce using rule 1 (program -> program element .)
    LBRACE          reduce using rule 1 (program -> program element .)
    RETURN          reduce using rule 1 (program -> program element .)
    LBRACKET        reduce using rule 1 (program -> program element .)
    PROMPT          reduce using rule 1 (program -> program element .)
    NOT             reduce using rule 1 (program -> program element .)
    LPAREN          reduce using rule 1 (program -> program element .)
    IDENTIFIER      reduce using rule 1 (program -> program element .)
    NUMBER          reduce using rule 1 (program -> program element .)
    FLOAT           reduce using rule 1 (program -> program element .)
    STRING          reduce using rule 1 (program -> program element .)
    TRUE            reduce using rule 1 (program -> program element .)
    FALSE           reduce using rule 1 (program -> program element .)
    PLUSPLUS        reduce using rule 1 (program -> program element .)
    MINUSMINUS      reduce using rule 1 (program -> program element .)
    CONSOLE         reduce using rule 1 (program -> program element .)
    VAR             reduce using rule 1 (program -> program element .)
    $end            reduce using rule 1 (program -> program element .)


state 35

    (9) element -> expression SEMICOLON .
    (88) statement -> expression SEMICOLON .

  ! reduce/reduce conflict for LET resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for CONST resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for IF resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for WHILE resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for FOR resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for LBRACE resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for RETURN resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for PROMPT resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for NOT resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for LPAREN resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for NUMBER resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for FLOAT resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for STRING resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for TRUE resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for FALSE resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for PLUSPLUS resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for MINUSMINUS resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for VAR resolved using rule 9 (element -> expression SEMICOLON .)
  ! reduce/reduce conflict for $end resolved using rule 9 (element -> expression SEMICOLON .)
    LET             reduce using rule 9 (element -> expression SEMICOLON .)
    FUNCTION        reduce using rule 9 (element -> expression SEMICOLON .)
    CONST           reduce using rule 9 (element -> expression SEMICOLON .)
    IF              reduce using rule 9 (element -> expression SEMICOLON .)
    WHILE           reduce using rule 9 (element -> expression SEMICOLON .)
    FOR             reduce using rule 9 (element -> expression SEMICOLON .)
    LBRACE          reduce using rule 9 (element -> expression SEMICOLON .)
    RETURN          reduce using rule 9 (element -> expression SEMICOLON .)
    LBRACKET        reduce using rule 9 (element -> expression SEMICOLON .)
    PROMPT          reduce using rule 9 (element -> expression SEMICOLON .)
    NOT             reduce using rule 9 (element -> expression SEMICOLON .)
    LPAREN          reduce using rule 9 (element -> expression SEMICOLON .)
    IDENTIFIER      reduce using rule 9 (element -> expression SEMICOLON .)
    NUMBER          reduce using rule 9 (element -> expression SEMICOLON .)
    FLOAT           reduce using rule 9 (element -> expression SEMICOLON .)
    STRING          reduce using rule 9 (element -> expression SEMICOLON .)
    TRUE            reduce using rule 9 (element -> expression SEMICOLON .)
    FALSE           reduce using rule 9 (element -> expression SEMICOLON .)
    PLUSPLUS        reduce using rule 9 (element -> expression SEMICOLON .)
    MINUSMINUS      reduce using rule 9 (element -> expression SEMICOLON .)
    CONSOLE         reduce using rule 9 (element -> expression SEMICOLON .)
    VAR             reduce using rule 9 (element -> expression SEMICOLON .)
    $end            reduce using rule 9 (element -> expression SEMICOLON .)

  ! LET             [ reduce using rule 88 (statement -> expression SEMICOLON .) ]
  ! FUNCTION        [ reduce using rule 88 (statement -> expression SEMICOLON .) ]
  ! CONST           [ reduce using rule 88 (statement -> expression SEMICOLON .) ]
  ! IF              [ reduce using rule 88 (statement -> expression SEMICOLON .) ]
  ! WHILE           [ reduce using rule 88 (statement -> expression SEMICOLON .) ]
  ! FOR             [ reduce using rule 88 (statement -> expression SEMICOLON .) ]
  ! LBRACE          [ reduce using rule 88 (statement -> expression SEMICOLON .) ]
  ! RETURN          [ reduce using rule 88 (statement -> expression SEMICOLON .) ]
  ! LBRACKET        [ reduce using rule 88 (statement -> expression SEMICOLON .) ]
  ! PROMPT          [ reduce using rule 88 (statement -> expression SEMICOLON .) ]
  ! NOT             [ reduce using rule 88 (statement -> expression SEMICOLON .) ]
  ! LPAREN          [ reduce using rule 88 (statement -> expression SEMICOLON .) ]
  ! IDENTIFIER      [ reduce using rule 88 (statement -> expression SEMICOLON .) ]
  ! NUMBER          [ reduce using rule 88 (statement -> expression SEMICOLON .) ]
  ! FLOAT           [ reduce using rule 88 (statement -> expression SEMICOLON .) ]
  ! STRING          [ reduce using rule 88 (statement -> expression SEMICOLON .) ]
  ! TRUE            [ reduce using rule 88 (statement -> expression SEMICOLON .) ]
  ! FALSE           [ reduce using rule 88 (statement -> expression SEMICOLON .) ]
  ! PLUSPLUS        [ reduce using rule 88 (statement -> expression SEMICOLON .) ]
  ! MINUSMINUS      [ reduce using rule 88 (statement -> expression SEMICOLON .) ]
  ! CONSOLE         [ reduce using rule 88 (statement -> expression SEMICOLON .) ]
  ! VAR             [ reduce using rule 88 (statement -> expression SEMICOLON .) ]
  ! $end            [ reduce using rule 88 (statement -> expression SEMICOLON .) ]


state 36

    (41) expression -> expression PLUS . expression
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 87

state 37

    (42) expression -> expression MINUS . expression
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 88

state 38

    (43) expression -> expression TIMES . expression
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 89

state 39

    (44) expression -> expression DIV . expression
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 90

state 40

    (45) expression -> expression MOD . expression
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 91

state 41

    (46) expression -> expression PLUS_ASSIGN . expression
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 92

state 42

    (47) expression -> expression MINUS_ASSIGN . expression
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 93

state 43

    (48) expression -> expression MULT_ASSIGN . expression
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 94

state 44

    (49) expression -> expression DIV_ASSIGN . expression
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 95

state 45

    (50) expression -> expression MOD_ASSIGN . expression
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 96

state 46

    (51) expression -> expression POT . expression
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 97

state 47

    (52) expression -> expression AND . expression
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 98

state 48

    (53) expression -> expression OR . expression
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 99

state 49

    (54) expression -> expression EQ . expression
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 100

state 50

    (55) expression -> expression NEQ . expression
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 101

state 51

    (56) expression -> expression STRICT_EQ . expression
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 102

state 52

    (57) expression -> expression STRICT_NEQ . expression
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 103

state 53

    (58) expression -> expression LT . expression
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 104

state 54

    (59) expression -> expression GT . expression
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 105

state 55

    (60) expression -> expression LE . expression
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 106

state 56

    (61) expression -> expression GE . expression
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 107

state 57

    (65) expression -> expression DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 108


state 58

    (66) expression -> expression LBRACKET . expression RBRACKET
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 109

state 59

    (74) expression -> expression PLUSPLUS .

    SEMICOLON       reduce using rule 74 (expression -> expression PLUSPLUS .)
    PLUS            reduce using rule 74 (expression -> expression PLUSPLUS .)
    MINUS           reduce using rule 74 (expression -> expression PLUSPLUS .)
    TIMES           reduce using rule 74 (expression -> expression PLUSPLUS .)
    DIV             reduce using rule 74 (expression -> expression PLUSPLUS .)
    MOD             reduce using rule 74 (expression -> expression PLUSPLUS .)
    PLUS_ASSIGN     reduce using rule 74 (expression -> expression PLUSPLUS .)
    MINUS_ASSIGN    reduce using rule 74 (expression -> expression PLUSPLUS .)
    MULT_ASSIGN     reduce using rule 74 (expression -> expression PLUSPLUS .)
    DIV_ASSIGN      reduce using rule 74 (expression -> expression PLUSPLUS .)
    MOD_ASSIGN      reduce using rule 74 (expression -> expression PLUSPLUS .)
    POT             reduce using rule 74 (expression -> expression PLUSPLUS .)
    AND             reduce using rule 74 (expression -> expression PLUSPLUS .)
    OR              reduce using rule 74 (expression -> expression PLUSPLUS .)
    EQ              reduce using rule 74 (expression -> expression PLUSPLUS .)
    NEQ             reduce using rule 74 (expression -> expression PLUSPLUS .)
    STRICT_EQ       reduce using rule 74 (expression -> expression PLUSPLUS .)
    STRICT_NEQ      reduce using rule 74 (expression -> expression PLUSPLUS .)
    LT              reduce using rule 74 (expression -> expression PLUSPLUS .)
    GT              reduce using rule 74 (expression -> expression PLUSPLUS .)
    LE              reduce using rule 74 (expression -> expression PLUSPLUS .)
    GE              reduce using rule 74 (expression -> expression PLUSPLUS .)
    DOT             reduce using rule 74 (expression -> expression PLUSPLUS .)
    LBRACKET        reduce using rule 74 (expression -> expression PLUSPLUS .)
    PLUSPLUS        reduce using rule 74 (expression -> expression PLUSPLUS .)
    MINUSMINUS      reduce using rule 74 (expression -> expression PLUSPLUS .)
    COMMA           reduce using rule 74 (expression -> expression PLUSPLUS .)
    RPAREN          reduce using rule 74 (expression -> expression PLUSPLUS .)
    RBRACKET        reduce using rule 74 (expression -> expression PLUSPLUS .)


state 60

    (75) expression -> expression MINUSMINUS .

    SEMICOLON       reduce using rule 75 (expression -> expression MINUSMINUS .)
    PLUS            reduce using rule 75 (expression -> expression MINUSMINUS .)
    MINUS           reduce using rule 75 (expression -> expression MINUSMINUS .)
    TIMES           reduce using rule 75 (expression -> expression MINUSMINUS .)
    DIV             reduce using rule 75 (expression -> expression MINUSMINUS .)
    MOD             reduce using rule 75 (expression -> expression MINUSMINUS .)
    PLUS_ASSIGN     reduce using rule 75 (expression -> expression MINUSMINUS .)
    MINUS_ASSIGN    reduce using rule 75 (expression -> expression MINUSMINUS .)
    MULT_ASSIGN     reduce using rule 75 (expression -> expression MINUSMINUS .)
    DIV_ASSIGN      reduce using rule 75 (expression -> expression MINUSMINUS .)
    MOD_ASSIGN      reduce using rule 75 (expression -> expression MINUSMINUS .)
    POT             reduce using rule 75 (expression -> expression MINUSMINUS .)
    AND             reduce using rule 75 (expression -> expression MINUSMINUS .)
    OR              reduce using rule 75 (expression -> expression MINUSMINUS .)
    EQ              reduce using rule 75 (expression -> expression MINUSMINUS .)
    NEQ             reduce using rule 75 (expression -> expression MINUSMINUS .)
    STRICT_EQ       reduce using rule 75 (expression -> expression MINUSMINUS .)
    STRICT_NEQ      reduce using rule 75 (expression -> expression MINUSMINUS .)
    LT              reduce using rule 75 (expression -> expression MINUSMINUS .)
    GT              reduce using rule 75 (expression -> expression MINUSMINUS .)
    LE              reduce using rule 75 (expression -> expression MINUSMINUS .)
    GE              reduce using rule 75 (expression -> expression MINUSMINUS .)
    DOT             reduce using rule 75 (expression -> expression MINUSMINUS .)
    LBRACKET        reduce using rule 75 (expression -> expression MINUSMINUS .)
    PLUSPLUS        reduce using rule 75 (expression -> expression MINUSMINUS .)
    MINUSMINUS      reduce using rule 75 (expression -> expression MINUSMINUS .)
    COMMA           reduce using rule 75 (expression -> expression MINUSMINUS .)
    RPAREN          reduce using rule 75 (expression -> expression MINUSMINUS .)
    RBRACKET        reduce using rule 75 (expression -> expression MINUSMINUS .)


state 61

    (11) letAssignment -> LET IDENTIFIER . COLON type EQUAL expression SEMICOLON
    (12) letAssignment -> LET IDENTIFIER . EQUAL expression SEMICOLON
    (13) declaracion -> LET IDENTIFIER . COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON

    COLON           shift and go to state 110
    EQUAL           shift and go to state 111


state 62

    (67) expression -> IDENTIFIER LPAREN . lista_expresiones_opt RPAREN
    (14) lista_expresiones_opt -> . lista_expresiones
    (15) lista_expresiones_opt -> . empty
    (16) lista_expresiones -> . expression
    (17) lista_expresiones -> . expression COMMA lista_expresiones
    (96) empty -> .
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    RPAREN          reduce using rule 96 (empty -> .)
    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    lista_expresiones_opt          shift and go to state 112
    lista_expresiones              shift and go to state 113
    empty                          shift and go to state 114
    expression                     shift and go to state 115

state 63

    (35) expression -> LBRACKET expression . COMMA expression RBRACKET
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

    COMMA           shift and go to state 116
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60


state 64

    (29) function -> FUNCTION IDENTIFIER . LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE

    LPAREN          shift and go to state 117


state 65

    (64) expression -> LPAREN expression . RPAREN
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

    RPAREN          shift and go to state 118
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60


state 66

    (83) statement -> LBRACE instruction_list . RBRACE
    (93) instruction_list -> instruction_list . statement
    (83) statement -> . LBRACE instruction_list RBRACE
    (84) statement -> . letAssignment
    (85) statement -> . declaracion
    (86) statement -> . function
    (87) statement -> . consolelog
    (88) statement -> . expression SEMICOLON
    (89) statement -> . controlEstructure
    (90) statement -> . RETURN expression SEMICOLON
    (91) statement -> . forEstructure
    (92) statement -> . varAssignment
    (11) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (12) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (13) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (29) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (100) function -> . CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (78) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression
    (79) controlEstructure -> . IF LPAREN expression RPAREN statement
    (80) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (81) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (82) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (97) controlEstructure -> . WHILE LPAREN expression RPAREN statement
    (18) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (98) varAssignment -> . VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
    (99) varAssignment -> . VAR IDENTIFIER EQUAL expression SEMICOLON

    RBRACE          shift and go to state 119
    LBRACE          shift and go to state 16
    RETURN          shift and go to state 21
    LET             shift and go to state 11
    FUNCTION        shift and go to state 14
    CONST           shift and go to state 17
    CONSOLE         shift and go to state 32
    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    VAR             shift and go to state 33

    statement                      shift and go to state 120
    letAssignment                  shift and go to state 69
    declaracion                    shift and go to state 70
    function                       shift and go to state 71
    consolelog                     shift and go to state 72
    expression                     shift and go to state 73
    controlEstructure              shift and go to state 74
    forEstructure                  shift and go to state 75
    varAssignment                  shift and go to state 22

state 67

    (94) instruction_list -> statement .

    RBRACE          reduce using rule 94 (instruction_list -> statement .)
    LBRACE          reduce using rule 94 (instruction_list -> statement .)
    RETURN          reduce using rule 94 (instruction_list -> statement .)
    LET             reduce using rule 94 (instruction_list -> statement .)
    FUNCTION        reduce using rule 94 (instruction_list -> statement .)
    CONST           reduce using rule 94 (instruction_list -> statement .)
    CONSOLE         reduce using rule 94 (instruction_list -> statement .)
    LBRACKET        reduce using rule 94 (instruction_list -> statement .)
    PROMPT          reduce using rule 94 (instruction_list -> statement .)
    NOT             reduce using rule 94 (instruction_list -> statement .)
    LPAREN          reduce using rule 94 (instruction_list -> statement .)
    IDENTIFIER      reduce using rule 94 (instruction_list -> statement .)
    NUMBER          reduce using rule 94 (instruction_list -> statement .)
    FLOAT           reduce using rule 94 (instruction_list -> statement .)
    STRING          reduce using rule 94 (instruction_list -> statement .)
    TRUE            reduce using rule 94 (instruction_list -> statement .)
    FALSE           reduce using rule 94 (instruction_list -> statement .)
    PLUSPLUS        reduce using rule 94 (instruction_list -> statement .)
    MINUSMINUS      reduce using rule 94 (instruction_list -> statement .)
    IF              reduce using rule 94 (instruction_list -> statement .)
    WHILE           reduce using rule 94 (instruction_list -> statement .)
    FOR             reduce using rule 94 (instruction_list -> statement .)
    VAR             reduce using rule 94 (instruction_list -> statement .)


state 68

    (95) instruction_list -> empty .

    RBRACE          reduce using rule 95 (instruction_list -> empty .)
    LBRACE          reduce using rule 95 (instruction_list -> empty .)
    RETURN          reduce using rule 95 (instruction_list -> empty .)
    LET             reduce using rule 95 (instruction_list -> empty .)
    FUNCTION        reduce using rule 95 (instruction_list -> empty .)
    CONST           reduce using rule 95 (instruction_list -> empty .)
    CONSOLE         reduce using rule 95 (instruction_list -> empty .)
    LBRACKET        reduce using rule 95 (instruction_list -> empty .)
    PROMPT          reduce using rule 95 (instruction_list -> empty .)
    NOT             reduce using rule 95 (instruction_list -> empty .)
    LPAREN          reduce using rule 95 (instruction_list -> empty .)
    IDENTIFIER      reduce using rule 95 (instruction_list -> empty .)
    NUMBER          reduce using rule 95 (instruction_list -> empty .)
    FLOAT           reduce using rule 95 (instruction_list -> empty .)
    STRING          reduce using rule 95 (instruction_list -> empty .)
    TRUE            reduce using rule 95 (instruction_list -> empty .)
    FALSE           reduce using rule 95 (instruction_list -> empty .)
    PLUSPLUS        reduce using rule 95 (instruction_list -> empty .)
    MINUSMINUS      reduce using rule 95 (instruction_list -> empty .)
    IF              reduce using rule 95 (instruction_list -> empty .)
    WHILE           reduce using rule 95 (instruction_list -> empty .)
    FOR             reduce using rule 95 (instruction_list -> empty .)
    VAR             reduce using rule 95 (instruction_list -> empty .)


state 69

    (84) statement -> letAssignment .

    RBRACE          reduce using rule 84 (statement -> letAssignment .)
    LBRACE          reduce using rule 84 (statement -> letAssignment .)
    RETURN          reduce using rule 84 (statement -> letAssignment .)
    LET             reduce using rule 84 (statement -> letAssignment .)
    FUNCTION        reduce using rule 84 (statement -> letAssignment .)
    CONST           reduce using rule 84 (statement -> letAssignment .)
    CONSOLE         reduce using rule 84 (statement -> letAssignment .)
    LBRACKET        reduce using rule 84 (statement -> letAssignment .)
    PROMPT          reduce using rule 84 (statement -> letAssignment .)
    NOT             reduce using rule 84 (statement -> letAssignment .)
    LPAREN          reduce using rule 84 (statement -> letAssignment .)
    IDENTIFIER      reduce using rule 84 (statement -> letAssignment .)
    NUMBER          reduce using rule 84 (statement -> letAssignment .)
    FLOAT           reduce using rule 84 (statement -> letAssignment .)
    STRING          reduce using rule 84 (statement -> letAssignment .)
    TRUE            reduce using rule 84 (statement -> letAssignment .)
    FALSE           reduce using rule 84 (statement -> letAssignment .)
    PLUSPLUS        reduce using rule 84 (statement -> letAssignment .)
    MINUSMINUS      reduce using rule 84 (statement -> letAssignment .)
    IF              reduce using rule 84 (statement -> letAssignment .)
    WHILE           reduce using rule 84 (statement -> letAssignment .)
    FOR             reduce using rule 84 (statement -> letAssignment .)
    VAR             reduce using rule 84 (statement -> letAssignment .)
    ELSE            reduce using rule 84 (statement -> letAssignment .)
    $end            reduce using rule 84 (statement -> letAssignment .)


state 70

    (85) statement -> declaracion .

    RBRACE          reduce using rule 85 (statement -> declaracion .)
    LBRACE          reduce using rule 85 (statement -> declaracion .)
    RETURN          reduce using rule 85 (statement -> declaracion .)
    LET             reduce using rule 85 (statement -> declaracion .)
    FUNCTION        reduce using rule 85 (statement -> declaracion .)
    CONST           reduce using rule 85 (statement -> declaracion .)
    CONSOLE         reduce using rule 85 (statement -> declaracion .)
    LBRACKET        reduce using rule 85 (statement -> declaracion .)
    PROMPT          reduce using rule 85 (statement -> declaracion .)
    NOT             reduce using rule 85 (statement -> declaracion .)
    LPAREN          reduce using rule 85 (statement -> declaracion .)
    IDENTIFIER      reduce using rule 85 (statement -> declaracion .)
    NUMBER          reduce using rule 85 (statement -> declaracion .)
    FLOAT           reduce using rule 85 (statement -> declaracion .)
    STRING          reduce using rule 85 (statement -> declaracion .)
    TRUE            reduce using rule 85 (statement -> declaracion .)
    FALSE           reduce using rule 85 (statement -> declaracion .)
    PLUSPLUS        reduce using rule 85 (statement -> declaracion .)
    MINUSMINUS      reduce using rule 85 (statement -> declaracion .)
    IF              reduce using rule 85 (statement -> declaracion .)
    WHILE           reduce using rule 85 (statement -> declaracion .)
    FOR             reduce using rule 85 (statement -> declaracion .)
    VAR             reduce using rule 85 (statement -> declaracion .)
    ELSE            reduce using rule 85 (statement -> declaracion .)
    $end            reduce using rule 85 (statement -> declaracion .)


state 71

    (86) statement -> function .

    RBRACE          reduce using rule 86 (statement -> function .)
    LBRACE          reduce using rule 86 (statement -> function .)
    RETURN          reduce using rule 86 (statement -> function .)
    LET             reduce using rule 86 (statement -> function .)
    FUNCTION        reduce using rule 86 (statement -> function .)
    CONST           reduce using rule 86 (statement -> function .)
    CONSOLE         reduce using rule 86 (statement -> function .)
    LBRACKET        reduce using rule 86 (statement -> function .)
    PROMPT          reduce using rule 86 (statement -> function .)
    NOT             reduce using rule 86 (statement -> function .)
    LPAREN          reduce using rule 86 (statement -> function .)
    IDENTIFIER      reduce using rule 86 (statement -> function .)
    NUMBER          reduce using rule 86 (statement -> function .)
    FLOAT           reduce using rule 86 (statement -> function .)
    STRING          reduce using rule 86 (statement -> function .)
    TRUE            reduce using rule 86 (statement -> function .)
    FALSE           reduce using rule 86 (statement -> function .)
    PLUSPLUS        reduce using rule 86 (statement -> function .)
    MINUSMINUS      reduce using rule 86 (statement -> function .)
    IF              reduce using rule 86 (statement -> function .)
    WHILE           reduce using rule 86 (statement -> function .)
    FOR             reduce using rule 86 (statement -> function .)
    VAR             reduce using rule 86 (statement -> function .)
    ELSE            reduce using rule 86 (statement -> function .)
    $end            reduce using rule 86 (statement -> function .)


state 72

    (87) statement -> consolelog .

    RBRACE          reduce using rule 87 (statement -> consolelog .)
    LBRACE          reduce using rule 87 (statement -> consolelog .)
    RETURN          reduce using rule 87 (statement -> consolelog .)
    LET             reduce using rule 87 (statement -> consolelog .)
    FUNCTION        reduce using rule 87 (statement -> consolelog .)
    CONST           reduce using rule 87 (statement -> consolelog .)
    CONSOLE         reduce using rule 87 (statement -> consolelog .)
    LBRACKET        reduce using rule 87 (statement -> consolelog .)
    PROMPT          reduce using rule 87 (statement -> consolelog .)
    NOT             reduce using rule 87 (statement -> consolelog .)
    LPAREN          reduce using rule 87 (statement -> consolelog .)
    IDENTIFIER      reduce using rule 87 (statement -> consolelog .)
    NUMBER          reduce using rule 87 (statement -> consolelog .)
    FLOAT           reduce using rule 87 (statement -> consolelog .)
    STRING          reduce using rule 87 (statement -> consolelog .)
    TRUE            reduce using rule 87 (statement -> consolelog .)
    FALSE           reduce using rule 87 (statement -> consolelog .)
    PLUSPLUS        reduce using rule 87 (statement -> consolelog .)
    MINUSMINUS      reduce using rule 87 (statement -> consolelog .)
    IF              reduce using rule 87 (statement -> consolelog .)
    WHILE           reduce using rule 87 (statement -> consolelog .)
    FOR             reduce using rule 87 (statement -> consolelog .)
    VAR             reduce using rule 87 (statement -> consolelog .)
    ELSE            reduce using rule 87 (statement -> consolelog .)
    $end            reduce using rule 87 (statement -> consolelog .)


state 73

    (88) statement -> expression . SEMICOLON
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

    SEMICOLON       shift and go to state 121
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60


state 74

    (89) statement -> controlEstructure .

    RBRACE          reduce using rule 89 (statement -> controlEstructure .)
    LBRACE          reduce using rule 89 (statement -> controlEstructure .)
    RETURN          reduce using rule 89 (statement -> controlEstructure .)
    LET             reduce using rule 89 (statement -> controlEstructure .)
    FUNCTION        reduce using rule 89 (statement -> controlEstructure .)
    CONST           reduce using rule 89 (statement -> controlEstructure .)
    CONSOLE         reduce using rule 89 (statement -> controlEstructure .)
    LBRACKET        reduce using rule 89 (statement -> controlEstructure .)
    PROMPT          reduce using rule 89 (statement -> controlEstructure .)
    NOT             reduce using rule 89 (statement -> controlEstructure .)
    LPAREN          reduce using rule 89 (statement -> controlEstructure .)
    IDENTIFIER      reduce using rule 89 (statement -> controlEstructure .)
    NUMBER          reduce using rule 89 (statement -> controlEstructure .)
    FLOAT           reduce using rule 89 (statement -> controlEstructure .)
    STRING          reduce using rule 89 (statement -> controlEstructure .)
    TRUE            reduce using rule 89 (statement -> controlEstructure .)
    FALSE           reduce using rule 89 (statement -> controlEstructure .)
    PLUSPLUS        reduce using rule 89 (statement -> controlEstructure .)
    MINUSMINUS      reduce using rule 89 (statement -> controlEstructure .)
    IF              reduce using rule 89 (statement -> controlEstructure .)
    WHILE           reduce using rule 89 (statement -> controlEstructure .)
    FOR             reduce using rule 89 (statement -> controlEstructure .)
    VAR             reduce using rule 89 (statement -> controlEstructure .)
    ELSE            reduce using rule 89 (statement -> controlEstructure .)
    $end            reduce using rule 89 (statement -> controlEstructure .)


state 75

    (91) statement -> forEstructure .

    RBRACE          reduce using rule 91 (statement -> forEstructure .)
    LBRACE          reduce using rule 91 (statement -> forEstructure .)
    RETURN          reduce using rule 91 (statement -> forEstructure .)
    LET             reduce using rule 91 (statement -> forEstructure .)
    FUNCTION        reduce using rule 91 (statement -> forEstructure .)
    CONST           reduce using rule 91 (statement -> forEstructure .)
    CONSOLE         reduce using rule 91 (statement -> forEstructure .)
    LBRACKET        reduce using rule 91 (statement -> forEstructure .)
    PROMPT          reduce using rule 91 (statement -> forEstructure .)
    NOT             reduce using rule 91 (statement -> forEstructure .)
    LPAREN          reduce using rule 91 (statement -> forEstructure .)
    IDENTIFIER      reduce using rule 91 (statement -> forEstructure .)
    NUMBER          reduce using rule 91 (statement -> forEstructure .)
    FLOAT           reduce using rule 91 (statement -> forEstructure .)
    STRING          reduce using rule 91 (statement -> forEstructure .)
    TRUE            reduce using rule 91 (statement -> forEstructure .)
    FALSE           reduce using rule 91 (statement -> forEstructure .)
    PLUSPLUS        reduce using rule 91 (statement -> forEstructure .)
    MINUSMINUS      reduce using rule 91 (statement -> forEstructure .)
    IF              reduce using rule 91 (statement -> forEstructure .)
    WHILE           reduce using rule 91 (statement -> forEstructure .)
    FOR             reduce using rule 91 (statement -> forEstructure .)
    VAR             reduce using rule 91 (statement -> forEstructure .)
    ELSE            reduce using rule 91 (statement -> forEstructure .)
    $end            reduce using rule 91 (statement -> forEstructure .)


state 76

    (100) function -> CONST IDENTIFIER . EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON

    EQUAL           shift and go to state 122


state 77

    (79) controlEstructure -> IF LPAREN . expression RPAREN statement
    (80) controlEstructure -> IF LPAREN . expression RPAREN statement ELSE statement
    (81) controlEstructure -> IF LPAREN . expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (82) controlEstructure -> IF LPAREN . expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 123

state 78

    (97) controlEstructure -> WHILE LPAREN . expression RPAREN statement
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 124

state 79

    (18) forEstructure -> FOR LPAREN . for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (19) for_init -> . LET IDENTIFIER EQUAL expression
    (20) for_init -> . LET IDENTIFIER COLON type EQUAL expression
    (21) for_init -> . expression
    (22) for_init -> . empty
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression
    (96) empty -> .

    LET             shift and go to state 127
    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31
    SEMICOLON       reduce using rule 96 (empty -> .)

    for_init                       shift and go to state 125
    expression                     shift and go to state 126
    empty                          shift and go to state 128

state 80

    (90) statement -> RETURN expression . SEMICOLON
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

    SEMICOLON       shift and go to state 129
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60


state 81

    (62) expression -> PROMPT LPAREN . STRING RPAREN

    STRING          shift and go to state 130


state 82

    (63) expression -> NOT expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 63 (expression -> NOT expression .)
    COMMA           reduce using rule 63 (expression -> NOT expression .)
    RPAREN          reduce using rule 63 (expression -> NOT expression .)
    RBRACKET        reduce using rule 63 (expression -> NOT expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60

  ! PLUS            [ reduce using rule 63 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 63 (expression -> NOT expression .) ]
  ! TIMES           [ reduce using rule 63 (expression -> NOT expression .) ]
  ! DIV             [ reduce using rule 63 (expression -> NOT expression .) ]
  ! MOD             [ reduce using rule 63 (expression -> NOT expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 63 (expression -> NOT expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 63 (expression -> NOT expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 63 (expression -> NOT expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 63 (expression -> NOT expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 63 (expression -> NOT expression .) ]
  ! POT             [ reduce using rule 63 (expression -> NOT expression .) ]
  ! AND             [ reduce using rule 63 (expression -> NOT expression .) ]
  ! OR              [ reduce using rule 63 (expression -> NOT expression .) ]
  ! EQ              [ reduce using rule 63 (expression -> NOT expression .) ]
  ! NEQ             [ reduce using rule 63 (expression -> NOT expression .) ]
  ! STRICT_EQ       [ reduce using rule 63 (expression -> NOT expression .) ]
  ! STRICT_NEQ      [ reduce using rule 63 (expression -> NOT expression .) ]
  ! LT              [ reduce using rule 63 (expression -> NOT expression .) ]
  ! GT              [ reduce using rule 63 (expression -> NOT expression .) ]
  ! LE              [ reduce using rule 63 (expression -> NOT expression .) ]
  ! GE              [ reduce using rule 63 (expression -> NOT expression .) ]
  ! DOT             [ reduce using rule 63 (expression -> NOT expression .) ]
  ! LBRACKET        [ reduce using rule 63 (expression -> NOT expression .) ]
  ! PLUSPLUS        [ reduce using rule 63 (expression -> NOT expression .) ]
  ! MINUSMINUS      [ reduce using rule 63 (expression -> NOT expression .) ]


state 83

    (76) expression -> PLUSPLUS expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 76 (expression -> PLUSPLUS expression .)
    COMMA           reduce using rule 76 (expression -> PLUSPLUS expression .)
    RPAREN          reduce using rule 76 (expression -> PLUSPLUS expression .)
    RBRACKET        reduce using rule 76 (expression -> PLUSPLUS expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60

  ! PLUS            [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! MINUS           [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! TIMES           [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! DIV             [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! MOD             [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! POT             [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! AND             [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! OR              [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! EQ              [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! NEQ             [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! STRICT_EQ       [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! STRICT_NEQ      [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! LT              [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! GT              [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! LE              [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! GE              [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! DOT             [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! LBRACKET        [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! PLUSPLUS        [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! MINUSMINUS      [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]


state 84

    (77) expression -> MINUSMINUS expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 77 (expression -> MINUSMINUS expression .)
    COMMA           reduce using rule 77 (expression -> MINUSMINUS expression .)
    RPAREN          reduce using rule 77 (expression -> MINUSMINUS expression .)
    RBRACKET        reduce using rule 77 (expression -> MINUSMINUS expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60

  ! PLUS            [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! MINUS           [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! TIMES           [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! DIV             [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! MOD             [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! POT             [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! AND             [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! OR              [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! EQ              [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! NEQ             [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! STRICT_EQ       [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! STRICT_NEQ      [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! LT              [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! GT              [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! LE              [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! GE              [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! DOT             [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! LBRACKET        [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! PLUSPLUS        [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! MINUSMINUS      [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]


state 85

    (78) consolelog -> CONSOLE DOT . LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON

    LOG             shift and go to state 131


state 86

    (98) varAssignment -> VAR IDENTIFIER . COLON type EQUAL expression SEMICOLON
    (99) varAssignment -> VAR IDENTIFIER . EQUAL expression SEMICOLON

    COLON           shift and go to state 132
    EQUAL           shift and go to state 133


state 87

    (41) expression -> expression PLUS expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 41 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 41 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 41 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 41 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60

  ! PLUS            [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! DIV             [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! POT             [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! OR              [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! EQ              [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! NEQ             [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! STRICT_EQ       [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! STRICT_NEQ      [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! LT              [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! GT              [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! LE              [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! GE              [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! DOT             [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! LBRACKET        [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! PLUSPLUS        [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! MINUSMINUS      [ reduce using rule 41 (expression -> expression PLUS expression .) ]


state 88

    (42) expression -> expression MINUS expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 42 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 42 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 42 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 42 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60

  ! PLUS            [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! DIV             [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! POT             [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! OR              [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! EQ              [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! NEQ             [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! STRICT_EQ       [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! STRICT_NEQ      [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! LT              [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! GT              [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! LE              [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! GE              [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! DOT             [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! LBRACKET        [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! PLUSPLUS        [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! MINUSMINUS      [ reduce using rule 42 (expression -> expression MINUS expression .) ]


state 89

    (43) expression -> expression TIMES expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 43 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 43 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 43 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 43 (expression -> expression TIMES expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60

  ! PLUS            [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! DIV             [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! MOD             [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! POT             [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! AND             [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! OR              [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! EQ              [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! NEQ             [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! STRICT_EQ       [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! STRICT_NEQ      [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! LT              [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! GT              [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! LE              [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! GE              [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! DOT             [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! LBRACKET        [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! PLUSPLUS        [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! MINUSMINUS      [ reduce using rule 43 (expression -> expression TIMES expression .) ]


state 90

    (44) expression -> expression DIV expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 44 (expression -> expression DIV expression .)
    COMMA           reduce using rule 44 (expression -> expression DIV expression .)
    RPAREN          reduce using rule 44 (expression -> expression DIV expression .)
    RBRACKET        reduce using rule 44 (expression -> expression DIV expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60

  ! PLUS            [ reduce using rule 44 (expression -> expression DIV expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression DIV expression .) ]
  ! TIMES           [ reduce using rule 44 (expression -> expression DIV expression .) ]
  ! DIV             [ reduce using rule 44 (expression -> expression DIV expression .) ]
  ! MOD             [ reduce using rule 44 (expression -> expression DIV expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 44 (expression -> expression DIV expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 44 (expression -> expression DIV expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 44 (expression -> expression DIV expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 44 (expression -> expression DIV expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 44 (expression -> expression DIV expression .) ]
  ! POT             [ reduce using rule 44 (expression -> expression DIV expression .) ]
  ! AND             [ reduce using rule 44 (expression -> expression DIV expression .) ]
  ! OR              [ reduce using rule 44 (expression -> expression DIV expression .) ]
  ! EQ              [ reduce using rule 44 (expression -> expression DIV expression .) ]
  ! NEQ             [ reduce using rule 44 (expression -> expression DIV expression .) ]
  ! STRICT_EQ       [ reduce using rule 44 (expression -> expression DIV expression .) ]
  ! STRICT_NEQ      [ reduce using rule 44 (expression -> expression DIV expression .) ]
  ! LT              [ reduce using rule 44 (expression -> expression DIV expression .) ]
  ! GT              [ reduce using rule 44 (expression -> expression DIV expression .) ]
  ! LE              [ reduce using rule 44 (expression -> expression DIV expression .) ]
  ! GE              [ reduce using rule 44 (expression -> expression DIV expression .) ]
  ! DOT             [ reduce using rule 44 (expression -> expression DIV expression .) ]
  ! LBRACKET        [ reduce using rule 44 (expression -> expression DIV expression .) ]
  ! PLUSPLUS        [ reduce using rule 44 (expression -> expression DIV expression .) ]
  ! MINUSMINUS      [ reduce using rule 44 (expression -> expression DIV expression .) ]


state 91

    (45) expression -> expression MOD expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 45 (expression -> expression MOD expression .)
    COMMA           reduce using rule 45 (expression -> expression MOD expression .)
    RPAREN          reduce using rule 45 (expression -> expression MOD expression .)
    RBRACKET        reduce using rule 45 (expression -> expression MOD expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60

  ! PLUS            [ reduce using rule 45 (expression -> expression MOD expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> expression MOD expression .) ]
  ! TIMES           [ reduce using rule 45 (expression -> expression MOD expression .) ]
  ! DIV             [ reduce using rule 45 (expression -> expression MOD expression .) ]
  ! MOD             [ reduce using rule 45 (expression -> expression MOD expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 45 (expression -> expression MOD expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 45 (expression -> expression MOD expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 45 (expression -> expression MOD expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 45 (expression -> expression MOD expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 45 (expression -> expression MOD expression .) ]
  ! POT             [ reduce using rule 45 (expression -> expression MOD expression .) ]
  ! AND             [ reduce using rule 45 (expression -> expression MOD expression .) ]
  ! OR              [ reduce using rule 45 (expression -> expression MOD expression .) ]
  ! EQ              [ reduce using rule 45 (expression -> expression MOD expression .) ]
  ! NEQ             [ reduce using rule 45 (expression -> expression MOD expression .) ]
  ! STRICT_EQ       [ reduce using rule 45 (expression -> expression MOD expression .) ]
  ! STRICT_NEQ      [ reduce using rule 45 (expression -> expression MOD expression .) ]
  ! LT              [ reduce using rule 45 (expression -> expression MOD expression .) ]
  ! GT              [ reduce using rule 45 (expression -> expression MOD expression .) ]
  ! LE              [ reduce using rule 45 (expression -> expression MOD expression .) ]
  ! GE              [ reduce using rule 45 (expression -> expression MOD expression .) ]
  ! DOT             [ reduce using rule 45 (expression -> expression MOD expression .) ]
  ! LBRACKET        [ reduce using rule 45 (expression -> expression MOD expression .) ]
  ! PLUSPLUS        [ reduce using rule 45 (expression -> expression MOD expression .) ]
  ! MINUSMINUS      [ reduce using rule 45 (expression -> expression MOD expression .) ]


state 92

    (46) expression -> expression PLUS_ASSIGN expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 46 (expression -> expression PLUS_ASSIGN expression .)
    COMMA           reduce using rule 46 (expression -> expression PLUS_ASSIGN expression .)
    RPAREN          reduce using rule 46 (expression -> expression PLUS_ASSIGN expression .)
    RBRACKET        reduce using rule 46 (expression -> expression PLUS_ASSIGN expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60

  ! PLUS            [ reduce using rule 46 (expression -> expression PLUS_ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression PLUS_ASSIGN expression .) ]
  ! TIMES           [ reduce using rule 46 (expression -> expression PLUS_ASSIGN expression .) ]
  ! DIV             [ reduce using rule 46 (expression -> expression PLUS_ASSIGN expression .) ]
  ! MOD             [ reduce using rule 46 (expression -> expression PLUS_ASSIGN expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 46 (expression -> expression PLUS_ASSIGN expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 46 (expression -> expression PLUS_ASSIGN expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 46 (expression -> expression PLUS_ASSIGN expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 46 (expression -> expression PLUS_ASSIGN expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 46 (expression -> expression PLUS_ASSIGN expression .) ]
  ! POT             [ reduce using rule 46 (expression -> expression PLUS_ASSIGN expression .) ]
  ! AND             [ reduce using rule 46 (expression -> expression PLUS_ASSIGN expression .) ]
  ! OR              [ reduce using rule 46 (expression -> expression PLUS_ASSIGN expression .) ]
  ! EQ              [ reduce using rule 46 (expression -> expression PLUS_ASSIGN expression .) ]
  ! NEQ             [ reduce using rule 46 (expression -> expression PLUS_ASSIGN expression .) ]
  ! STRICT_EQ       [ reduce using rule 46 (expression -> expression PLUS_ASSIGN expression .) ]
  ! STRICT_NEQ      [ reduce using rule 46 (expression -> expression PLUS_ASSIGN expression .) ]
  ! LT              [ reduce using rule 46 (expression -> expression PLUS_ASSIGN expression .) ]
  ! GT              [ reduce using rule 46 (expression -> expression PLUS_ASSIGN expression .) ]
  ! LE              [ reduce using rule 46 (expression -> expression PLUS_ASSIGN expression .) ]
  ! GE              [ reduce using rule 46 (expression -> expression PLUS_ASSIGN expression .) ]
  ! DOT             [ reduce using rule 46 (expression -> expression PLUS_ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 46 (expression -> expression PLUS_ASSIGN expression .) ]
  ! PLUSPLUS        [ reduce using rule 46 (expression -> expression PLUS_ASSIGN expression .) ]
  ! MINUSMINUS      [ reduce using rule 46 (expression -> expression PLUS_ASSIGN expression .) ]


state 93

    (47) expression -> expression MINUS_ASSIGN expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 47 (expression -> expression MINUS_ASSIGN expression .)
    COMMA           reduce using rule 47 (expression -> expression MINUS_ASSIGN expression .)
    RPAREN          reduce using rule 47 (expression -> expression MINUS_ASSIGN expression .)
    RBRACKET        reduce using rule 47 (expression -> expression MINUS_ASSIGN expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60

  ! PLUS            [ reduce using rule 47 (expression -> expression MINUS_ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> expression MINUS_ASSIGN expression .) ]
  ! TIMES           [ reduce using rule 47 (expression -> expression MINUS_ASSIGN expression .) ]
  ! DIV             [ reduce using rule 47 (expression -> expression MINUS_ASSIGN expression .) ]
  ! MOD             [ reduce using rule 47 (expression -> expression MINUS_ASSIGN expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 47 (expression -> expression MINUS_ASSIGN expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 47 (expression -> expression MINUS_ASSIGN expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 47 (expression -> expression MINUS_ASSIGN expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 47 (expression -> expression MINUS_ASSIGN expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 47 (expression -> expression MINUS_ASSIGN expression .) ]
  ! POT             [ reduce using rule 47 (expression -> expression MINUS_ASSIGN expression .) ]
  ! AND             [ reduce using rule 47 (expression -> expression MINUS_ASSIGN expression .) ]
  ! OR              [ reduce using rule 47 (expression -> expression MINUS_ASSIGN expression .) ]
  ! EQ              [ reduce using rule 47 (expression -> expression MINUS_ASSIGN expression .) ]
  ! NEQ             [ reduce using rule 47 (expression -> expression MINUS_ASSIGN expression .) ]
  ! STRICT_EQ       [ reduce using rule 47 (expression -> expression MINUS_ASSIGN expression .) ]
  ! STRICT_NEQ      [ reduce using rule 47 (expression -> expression MINUS_ASSIGN expression .) ]
  ! LT              [ reduce using rule 47 (expression -> expression MINUS_ASSIGN expression .) ]
  ! GT              [ reduce using rule 47 (expression -> expression MINUS_ASSIGN expression .) ]
  ! LE              [ reduce using rule 47 (expression -> expression MINUS_ASSIGN expression .) ]
  ! GE              [ reduce using rule 47 (expression -> expression MINUS_ASSIGN expression .) ]
  ! DOT             [ reduce using rule 47 (expression -> expression MINUS_ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 47 (expression -> expression MINUS_ASSIGN expression .) ]
  ! PLUSPLUS        [ reduce using rule 47 (expression -> expression MINUS_ASSIGN expression .) ]
  ! MINUSMINUS      [ reduce using rule 47 (expression -> expression MINUS_ASSIGN expression .) ]


state 94

    (48) expression -> expression MULT_ASSIGN expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 48 (expression -> expression MULT_ASSIGN expression .)
    COMMA           reduce using rule 48 (expression -> expression MULT_ASSIGN expression .)
    RPAREN          reduce using rule 48 (expression -> expression MULT_ASSIGN expression .)
    RBRACKET        reduce using rule 48 (expression -> expression MULT_ASSIGN expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60

  ! PLUS            [ reduce using rule 48 (expression -> expression MULT_ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 48 (expression -> expression MULT_ASSIGN expression .) ]
  ! TIMES           [ reduce using rule 48 (expression -> expression MULT_ASSIGN expression .) ]
  ! DIV             [ reduce using rule 48 (expression -> expression MULT_ASSIGN expression .) ]
  ! MOD             [ reduce using rule 48 (expression -> expression MULT_ASSIGN expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 48 (expression -> expression MULT_ASSIGN expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 48 (expression -> expression MULT_ASSIGN expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 48 (expression -> expression MULT_ASSIGN expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 48 (expression -> expression MULT_ASSIGN expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 48 (expression -> expression MULT_ASSIGN expression .) ]
  ! POT             [ reduce using rule 48 (expression -> expression MULT_ASSIGN expression .) ]
  ! AND             [ reduce using rule 48 (expression -> expression MULT_ASSIGN expression .) ]
  ! OR              [ reduce using rule 48 (expression -> expression MULT_ASSIGN expression .) ]
  ! EQ              [ reduce using rule 48 (expression -> expression MULT_ASSIGN expression .) ]
  ! NEQ             [ reduce using rule 48 (expression -> expression MULT_ASSIGN expression .) ]
  ! STRICT_EQ       [ reduce using rule 48 (expression -> expression MULT_ASSIGN expression .) ]
  ! STRICT_NEQ      [ reduce using rule 48 (expression -> expression MULT_ASSIGN expression .) ]
  ! LT              [ reduce using rule 48 (expression -> expression MULT_ASSIGN expression .) ]
  ! GT              [ reduce using rule 48 (expression -> expression MULT_ASSIGN expression .) ]
  ! LE              [ reduce using rule 48 (expression -> expression MULT_ASSIGN expression .) ]
  ! GE              [ reduce using rule 48 (expression -> expression MULT_ASSIGN expression .) ]
  ! DOT             [ reduce using rule 48 (expression -> expression MULT_ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 48 (expression -> expression MULT_ASSIGN expression .) ]
  ! PLUSPLUS        [ reduce using rule 48 (expression -> expression MULT_ASSIGN expression .) ]
  ! MINUSMINUS      [ reduce using rule 48 (expression -> expression MULT_ASSIGN expression .) ]


state 95

    (49) expression -> expression DIV_ASSIGN expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 49 (expression -> expression DIV_ASSIGN expression .)
    COMMA           reduce using rule 49 (expression -> expression DIV_ASSIGN expression .)
    RPAREN          reduce using rule 49 (expression -> expression DIV_ASSIGN expression .)
    RBRACKET        reduce using rule 49 (expression -> expression DIV_ASSIGN expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60

  ! PLUS            [ reduce using rule 49 (expression -> expression DIV_ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 49 (expression -> expression DIV_ASSIGN expression .) ]
  ! TIMES           [ reduce using rule 49 (expression -> expression DIV_ASSIGN expression .) ]
  ! DIV             [ reduce using rule 49 (expression -> expression DIV_ASSIGN expression .) ]
  ! MOD             [ reduce using rule 49 (expression -> expression DIV_ASSIGN expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 49 (expression -> expression DIV_ASSIGN expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 49 (expression -> expression DIV_ASSIGN expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 49 (expression -> expression DIV_ASSIGN expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 49 (expression -> expression DIV_ASSIGN expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 49 (expression -> expression DIV_ASSIGN expression .) ]
  ! POT             [ reduce using rule 49 (expression -> expression DIV_ASSIGN expression .) ]
  ! AND             [ reduce using rule 49 (expression -> expression DIV_ASSIGN expression .) ]
  ! OR              [ reduce using rule 49 (expression -> expression DIV_ASSIGN expression .) ]
  ! EQ              [ reduce using rule 49 (expression -> expression DIV_ASSIGN expression .) ]
  ! NEQ             [ reduce using rule 49 (expression -> expression DIV_ASSIGN expression .) ]
  ! STRICT_EQ       [ reduce using rule 49 (expression -> expression DIV_ASSIGN expression .) ]
  ! STRICT_NEQ      [ reduce using rule 49 (expression -> expression DIV_ASSIGN expression .) ]
  ! LT              [ reduce using rule 49 (expression -> expression DIV_ASSIGN expression .) ]
  ! GT              [ reduce using rule 49 (expression -> expression DIV_ASSIGN expression .) ]
  ! LE              [ reduce using rule 49 (expression -> expression DIV_ASSIGN expression .) ]
  ! GE              [ reduce using rule 49 (expression -> expression DIV_ASSIGN expression .) ]
  ! DOT             [ reduce using rule 49 (expression -> expression DIV_ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 49 (expression -> expression DIV_ASSIGN expression .) ]
  ! PLUSPLUS        [ reduce using rule 49 (expression -> expression DIV_ASSIGN expression .) ]
  ! MINUSMINUS      [ reduce using rule 49 (expression -> expression DIV_ASSIGN expression .) ]


state 96

    (50) expression -> expression MOD_ASSIGN expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 50 (expression -> expression MOD_ASSIGN expression .)
    COMMA           reduce using rule 50 (expression -> expression MOD_ASSIGN expression .)
    RPAREN          reduce using rule 50 (expression -> expression MOD_ASSIGN expression .)
    RBRACKET        reduce using rule 50 (expression -> expression MOD_ASSIGN expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60

  ! PLUS            [ reduce using rule 50 (expression -> expression MOD_ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 50 (expression -> expression MOD_ASSIGN expression .) ]
  ! TIMES           [ reduce using rule 50 (expression -> expression MOD_ASSIGN expression .) ]
  ! DIV             [ reduce using rule 50 (expression -> expression MOD_ASSIGN expression .) ]
  ! MOD             [ reduce using rule 50 (expression -> expression MOD_ASSIGN expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 50 (expression -> expression MOD_ASSIGN expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 50 (expression -> expression MOD_ASSIGN expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 50 (expression -> expression MOD_ASSIGN expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 50 (expression -> expression MOD_ASSIGN expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 50 (expression -> expression MOD_ASSIGN expression .) ]
  ! POT             [ reduce using rule 50 (expression -> expression MOD_ASSIGN expression .) ]
  ! AND             [ reduce using rule 50 (expression -> expression MOD_ASSIGN expression .) ]
  ! OR              [ reduce using rule 50 (expression -> expression MOD_ASSIGN expression .) ]
  ! EQ              [ reduce using rule 50 (expression -> expression MOD_ASSIGN expression .) ]
  ! NEQ             [ reduce using rule 50 (expression -> expression MOD_ASSIGN expression .) ]
  ! STRICT_EQ       [ reduce using rule 50 (expression -> expression MOD_ASSIGN expression .) ]
  ! STRICT_NEQ      [ reduce using rule 50 (expression -> expression MOD_ASSIGN expression .) ]
  ! LT              [ reduce using rule 50 (expression -> expression MOD_ASSIGN expression .) ]
  ! GT              [ reduce using rule 50 (expression -> expression MOD_ASSIGN expression .) ]
  ! LE              [ reduce using rule 50 (expression -> expression MOD_ASSIGN expression .) ]
  ! GE              [ reduce using rule 50 (expression -> expression MOD_ASSIGN expression .) ]
  ! DOT             [ reduce using rule 50 (expression -> expression MOD_ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 50 (expression -> expression MOD_ASSIGN expression .) ]
  ! PLUSPLUS        [ reduce using rule 50 (expression -> expression MOD_ASSIGN expression .) ]
  ! MINUSMINUS      [ reduce using rule 50 (expression -> expression MOD_ASSIGN expression .) ]


state 97

    (51) expression -> expression POT expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 51 (expression -> expression POT expression .)
    COMMA           reduce using rule 51 (expression -> expression POT expression .)
    RPAREN          reduce using rule 51 (expression -> expression POT expression .)
    RBRACKET        reduce using rule 51 (expression -> expression POT expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60

  ! PLUS            [ reduce using rule 51 (expression -> expression POT expression .) ]
  ! MINUS           [ reduce using rule 51 (expression -> expression POT expression .) ]
  ! TIMES           [ reduce using rule 51 (expression -> expression POT expression .) ]
  ! DIV             [ reduce using rule 51 (expression -> expression POT expression .) ]
  ! MOD             [ reduce using rule 51 (expression -> expression POT expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 51 (expression -> expression POT expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 51 (expression -> expression POT expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 51 (expression -> expression POT expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 51 (expression -> expression POT expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 51 (expression -> expression POT expression .) ]
  ! POT             [ reduce using rule 51 (expression -> expression POT expression .) ]
  ! AND             [ reduce using rule 51 (expression -> expression POT expression .) ]
  ! OR              [ reduce using rule 51 (expression -> expression POT expression .) ]
  ! EQ              [ reduce using rule 51 (expression -> expression POT expression .) ]
  ! NEQ             [ reduce using rule 51 (expression -> expression POT expression .) ]
  ! STRICT_EQ       [ reduce using rule 51 (expression -> expression POT expression .) ]
  ! STRICT_NEQ      [ reduce using rule 51 (expression -> expression POT expression .) ]
  ! LT              [ reduce using rule 51 (expression -> expression POT expression .) ]
  ! GT              [ reduce using rule 51 (expression -> expression POT expression .) ]
  ! LE              [ reduce using rule 51 (expression -> expression POT expression .) ]
  ! GE              [ reduce using rule 51 (expression -> expression POT expression .) ]
  ! DOT             [ reduce using rule 51 (expression -> expression POT expression .) ]
  ! LBRACKET        [ reduce using rule 51 (expression -> expression POT expression .) ]
  ! PLUSPLUS        [ reduce using rule 51 (expression -> expression POT expression .) ]
  ! MINUSMINUS      [ reduce using rule 51 (expression -> expression POT expression .) ]


state 98

    (52) expression -> expression AND expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 52 (expression -> expression AND expression .)
    COMMA           reduce using rule 52 (expression -> expression AND expression .)
    RPAREN          reduce using rule 52 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 52 (expression -> expression AND expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60

  ! PLUS            [ reduce using rule 52 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 52 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 52 (expression -> expression AND expression .) ]
  ! DIV             [ reduce using rule 52 (expression -> expression AND expression .) ]
  ! MOD             [ reduce using rule 52 (expression -> expression AND expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 52 (expression -> expression AND expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 52 (expression -> expression AND expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 52 (expression -> expression AND expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 52 (expression -> expression AND expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 52 (expression -> expression AND expression .) ]
  ! POT             [ reduce using rule 52 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 52 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 52 (expression -> expression AND expression .) ]
  ! EQ              [ reduce using rule 52 (expression -> expression AND expression .) ]
  ! NEQ             [ reduce using rule 52 (expression -> expression AND expression .) ]
  ! STRICT_EQ       [ reduce using rule 52 (expression -> expression AND expression .) ]
  ! STRICT_NEQ      [ reduce using rule 52 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 52 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 52 (expression -> expression AND expression .) ]
  ! LE              [ reduce using rule 52 (expression -> expression AND expression .) ]
  ! GE              [ reduce using rule 52 (expression -> expression AND expression .) ]
  ! DOT             [ reduce using rule 52 (expression -> expression AND expression .) ]
  ! LBRACKET        [ reduce using rule 52 (expression -> expression AND expression .) ]
  ! PLUSPLUS        [ reduce using rule 52 (expression -> expression AND expression .) ]
  ! MINUSMINUS      [ reduce using rule 52 (expression -> expression AND expression .) ]


state 99

    (53) expression -> expression OR expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 53 (expression -> expression OR expression .)
    COMMA           reduce using rule 53 (expression -> expression OR expression .)
    RPAREN          reduce using rule 53 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 53 (expression -> expression OR expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60

  ! PLUS            [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! DIV             [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! MOD             [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! POT             [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! NEQ             [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! STRICT_EQ       [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! STRICT_NEQ      [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! LE              [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! GE              [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! DOT             [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! LBRACKET        [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! PLUSPLUS        [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! MINUSMINUS      [ reduce using rule 53 (expression -> expression OR expression .) ]


state 100

    (54) expression -> expression EQ expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 54 (expression -> expression EQ expression .)
    COMMA           reduce using rule 54 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 54 (expression -> expression EQ expression .)
    RBRACKET        reduce using rule 54 (expression -> expression EQ expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60

  ! PLUS            [ reduce using rule 54 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 54 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 54 (expression -> expression EQ expression .) ]
  ! DIV             [ reduce using rule 54 (expression -> expression EQ expression .) ]
  ! MOD             [ reduce using rule 54 (expression -> expression EQ expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 54 (expression -> expression EQ expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 54 (expression -> expression EQ expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 54 (expression -> expression EQ expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 54 (expression -> expression EQ expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 54 (expression -> expression EQ expression .) ]
  ! POT             [ reduce using rule 54 (expression -> expression EQ expression .) ]
  ! AND             [ reduce using rule 54 (expression -> expression EQ expression .) ]
  ! OR              [ reduce using rule 54 (expression -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 54 (expression -> expression EQ expression .) ]
  ! NEQ             [ reduce using rule 54 (expression -> expression EQ expression .) ]
  ! STRICT_EQ       [ reduce using rule 54 (expression -> expression EQ expression .) ]
  ! STRICT_NEQ      [ reduce using rule 54 (expression -> expression EQ expression .) ]
  ! LT              [ reduce using rule 54 (expression -> expression EQ expression .) ]
  ! GT              [ reduce using rule 54 (expression -> expression EQ expression .) ]
  ! LE              [ reduce using rule 54 (expression -> expression EQ expression .) ]
  ! GE              [ reduce using rule 54 (expression -> expression EQ expression .) ]
  ! DOT             [ reduce using rule 54 (expression -> expression EQ expression .) ]
  ! LBRACKET        [ reduce using rule 54 (expression -> expression EQ expression .) ]
  ! PLUSPLUS        [ reduce using rule 54 (expression -> expression EQ expression .) ]
  ! MINUSMINUS      [ reduce using rule 54 (expression -> expression EQ expression .) ]


state 101

    (55) expression -> expression NEQ expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 55 (expression -> expression NEQ expression .)
    COMMA           reduce using rule 55 (expression -> expression NEQ expression .)
    RPAREN          reduce using rule 55 (expression -> expression NEQ expression .)
    RBRACKET        reduce using rule 55 (expression -> expression NEQ expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60

  ! PLUS            [ reduce using rule 55 (expression -> expression NEQ expression .) ]
  ! MINUS           [ reduce using rule 55 (expression -> expression NEQ expression .) ]
  ! TIMES           [ reduce using rule 55 (expression -> expression NEQ expression .) ]
  ! DIV             [ reduce using rule 55 (expression -> expression NEQ expression .) ]
  ! MOD             [ reduce using rule 55 (expression -> expression NEQ expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 55 (expression -> expression NEQ expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 55 (expression -> expression NEQ expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 55 (expression -> expression NEQ expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 55 (expression -> expression NEQ expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 55 (expression -> expression NEQ expression .) ]
  ! POT             [ reduce using rule 55 (expression -> expression NEQ expression .) ]
  ! AND             [ reduce using rule 55 (expression -> expression NEQ expression .) ]
  ! OR              [ reduce using rule 55 (expression -> expression NEQ expression .) ]
  ! EQ              [ reduce using rule 55 (expression -> expression NEQ expression .) ]
  ! NEQ             [ reduce using rule 55 (expression -> expression NEQ expression .) ]
  ! STRICT_EQ       [ reduce using rule 55 (expression -> expression NEQ expression .) ]
  ! STRICT_NEQ      [ reduce using rule 55 (expression -> expression NEQ expression .) ]
  ! LT              [ reduce using rule 55 (expression -> expression NEQ expression .) ]
  ! GT              [ reduce using rule 55 (expression -> expression NEQ expression .) ]
  ! LE              [ reduce using rule 55 (expression -> expression NEQ expression .) ]
  ! GE              [ reduce using rule 55 (expression -> expression NEQ expression .) ]
  ! DOT             [ reduce using rule 55 (expression -> expression NEQ expression .) ]
  ! LBRACKET        [ reduce using rule 55 (expression -> expression NEQ expression .) ]
  ! PLUSPLUS        [ reduce using rule 55 (expression -> expression NEQ expression .) ]
  ! MINUSMINUS      [ reduce using rule 55 (expression -> expression NEQ expression .) ]


state 102

    (56) expression -> expression STRICT_EQ expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 56 (expression -> expression STRICT_EQ expression .)
    COMMA           reduce using rule 56 (expression -> expression STRICT_EQ expression .)
    RPAREN          reduce using rule 56 (expression -> expression STRICT_EQ expression .)
    RBRACKET        reduce using rule 56 (expression -> expression STRICT_EQ expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60

  ! PLUS            [ reduce using rule 56 (expression -> expression STRICT_EQ expression .) ]
  ! MINUS           [ reduce using rule 56 (expression -> expression STRICT_EQ expression .) ]
  ! TIMES           [ reduce using rule 56 (expression -> expression STRICT_EQ expression .) ]
  ! DIV             [ reduce using rule 56 (expression -> expression STRICT_EQ expression .) ]
  ! MOD             [ reduce using rule 56 (expression -> expression STRICT_EQ expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 56 (expression -> expression STRICT_EQ expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 56 (expression -> expression STRICT_EQ expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 56 (expression -> expression STRICT_EQ expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 56 (expression -> expression STRICT_EQ expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 56 (expression -> expression STRICT_EQ expression .) ]
  ! POT             [ reduce using rule 56 (expression -> expression STRICT_EQ expression .) ]
  ! AND             [ reduce using rule 56 (expression -> expression STRICT_EQ expression .) ]
  ! OR              [ reduce using rule 56 (expression -> expression STRICT_EQ expression .) ]
  ! EQ              [ reduce using rule 56 (expression -> expression STRICT_EQ expression .) ]
  ! NEQ             [ reduce using rule 56 (expression -> expression STRICT_EQ expression .) ]
  ! STRICT_EQ       [ reduce using rule 56 (expression -> expression STRICT_EQ expression .) ]
  ! STRICT_NEQ      [ reduce using rule 56 (expression -> expression STRICT_EQ expression .) ]
  ! LT              [ reduce using rule 56 (expression -> expression STRICT_EQ expression .) ]
  ! GT              [ reduce using rule 56 (expression -> expression STRICT_EQ expression .) ]
  ! LE              [ reduce using rule 56 (expression -> expression STRICT_EQ expression .) ]
  ! GE              [ reduce using rule 56 (expression -> expression STRICT_EQ expression .) ]
  ! DOT             [ reduce using rule 56 (expression -> expression STRICT_EQ expression .) ]
  ! LBRACKET        [ reduce using rule 56 (expression -> expression STRICT_EQ expression .) ]
  ! PLUSPLUS        [ reduce using rule 56 (expression -> expression STRICT_EQ expression .) ]
  ! MINUSMINUS      [ reduce using rule 56 (expression -> expression STRICT_EQ expression .) ]


state 103

    (57) expression -> expression STRICT_NEQ expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 57 (expression -> expression STRICT_NEQ expression .)
    COMMA           reduce using rule 57 (expression -> expression STRICT_NEQ expression .)
    RPAREN          reduce using rule 57 (expression -> expression STRICT_NEQ expression .)
    RBRACKET        reduce using rule 57 (expression -> expression STRICT_NEQ expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60

  ! PLUS            [ reduce using rule 57 (expression -> expression STRICT_NEQ expression .) ]
  ! MINUS           [ reduce using rule 57 (expression -> expression STRICT_NEQ expression .) ]
  ! TIMES           [ reduce using rule 57 (expression -> expression STRICT_NEQ expression .) ]
  ! DIV             [ reduce using rule 57 (expression -> expression STRICT_NEQ expression .) ]
  ! MOD             [ reduce using rule 57 (expression -> expression STRICT_NEQ expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 57 (expression -> expression STRICT_NEQ expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 57 (expression -> expression STRICT_NEQ expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 57 (expression -> expression STRICT_NEQ expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 57 (expression -> expression STRICT_NEQ expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 57 (expression -> expression STRICT_NEQ expression .) ]
  ! POT             [ reduce using rule 57 (expression -> expression STRICT_NEQ expression .) ]
  ! AND             [ reduce using rule 57 (expression -> expression STRICT_NEQ expression .) ]
  ! OR              [ reduce using rule 57 (expression -> expression STRICT_NEQ expression .) ]
  ! EQ              [ reduce using rule 57 (expression -> expression STRICT_NEQ expression .) ]
  ! NEQ             [ reduce using rule 57 (expression -> expression STRICT_NEQ expression .) ]
  ! STRICT_EQ       [ reduce using rule 57 (expression -> expression STRICT_NEQ expression .) ]
  ! STRICT_NEQ      [ reduce using rule 57 (expression -> expression STRICT_NEQ expression .) ]
  ! LT              [ reduce using rule 57 (expression -> expression STRICT_NEQ expression .) ]
  ! GT              [ reduce using rule 57 (expression -> expression STRICT_NEQ expression .) ]
  ! LE              [ reduce using rule 57 (expression -> expression STRICT_NEQ expression .) ]
  ! GE              [ reduce using rule 57 (expression -> expression STRICT_NEQ expression .) ]
  ! DOT             [ reduce using rule 57 (expression -> expression STRICT_NEQ expression .) ]
  ! LBRACKET        [ reduce using rule 57 (expression -> expression STRICT_NEQ expression .) ]
  ! PLUSPLUS        [ reduce using rule 57 (expression -> expression STRICT_NEQ expression .) ]
  ! MINUSMINUS      [ reduce using rule 57 (expression -> expression STRICT_NEQ expression .) ]


state 104

    (58) expression -> expression LT expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 58 (expression -> expression LT expression .)
    COMMA           reduce using rule 58 (expression -> expression LT expression .)
    RPAREN          reduce using rule 58 (expression -> expression LT expression .)
    RBRACKET        reduce using rule 58 (expression -> expression LT expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60

  ! PLUS            [ reduce using rule 58 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 58 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 58 (expression -> expression LT expression .) ]
  ! DIV             [ reduce using rule 58 (expression -> expression LT expression .) ]
  ! MOD             [ reduce using rule 58 (expression -> expression LT expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 58 (expression -> expression LT expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 58 (expression -> expression LT expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 58 (expression -> expression LT expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 58 (expression -> expression LT expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 58 (expression -> expression LT expression .) ]
  ! POT             [ reduce using rule 58 (expression -> expression LT expression .) ]
  ! AND             [ reduce using rule 58 (expression -> expression LT expression .) ]
  ! OR              [ reduce using rule 58 (expression -> expression LT expression .) ]
  ! EQ              [ reduce using rule 58 (expression -> expression LT expression .) ]
  ! NEQ             [ reduce using rule 58 (expression -> expression LT expression .) ]
  ! STRICT_EQ       [ reduce using rule 58 (expression -> expression LT expression .) ]
  ! STRICT_NEQ      [ reduce using rule 58 (expression -> expression LT expression .) ]
  ! LT              [ reduce using rule 58 (expression -> expression LT expression .) ]
  ! GT              [ reduce using rule 58 (expression -> expression LT expression .) ]
  ! LE              [ reduce using rule 58 (expression -> expression LT expression .) ]
  ! GE              [ reduce using rule 58 (expression -> expression LT expression .) ]
  ! DOT             [ reduce using rule 58 (expression -> expression LT expression .) ]
  ! LBRACKET        [ reduce using rule 58 (expression -> expression LT expression .) ]
  ! PLUSPLUS        [ reduce using rule 58 (expression -> expression LT expression .) ]
  ! MINUSMINUS      [ reduce using rule 58 (expression -> expression LT expression .) ]


state 105

    (59) expression -> expression GT expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 59 (expression -> expression GT expression .)
    COMMA           reduce using rule 59 (expression -> expression GT expression .)
    RPAREN          reduce using rule 59 (expression -> expression GT expression .)
    RBRACKET        reduce using rule 59 (expression -> expression GT expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60

  ! PLUS            [ reduce using rule 59 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 59 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 59 (expression -> expression GT expression .) ]
  ! DIV             [ reduce using rule 59 (expression -> expression GT expression .) ]
  ! MOD             [ reduce using rule 59 (expression -> expression GT expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 59 (expression -> expression GT expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 59 (expression -> expression GT expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 59 (expression -> expression GT expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 59 (expression -> expression GT expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 59 (expression -> expression GT expression .) ]
  ! POT             [ reduce using rule 59 (expression -> expression GT expression .) ]
  ! AND             [ reduce using rule 59 (expression -> expression GT expression .) ]
  ! OR              [ reduce using rule 59 (expression -> expression GT expression .) ]
  ! EQ              [ reduce using rule 59 (expression -> expression GT expression .) ]
  ! NEQ             [ reduce using rule 59 (expression -> expression GT expression .) ]
  ! STRICT_EQ       [ reduce using rule 59 (expression -> expression GT expression .) ]
  ! STRICT_NEQ      [ reduce using rule 59 (expression -> expression GT expression .) ]
  ! LT              [ reduce using rule 59 (expression -> expression GT expression .) ]
  ! GT              [ reduce using rule 59 (expression -> expression GT expression .) ]
  ! LE              [ reduce using rule 59 (expression -> expression GT expression .) ]
  ! GE              [ reduce using rule 59 (expression -> expression GT expression .) ]
  ! DOT             [ reduce using rule 59 (expression -> expression GT expression .) ]
  ! LBRACKET        [ reduce using rule 59 (expression -> expression GT expression .) ]
  ! PLUSPLUS        [ reduce using rule 59 (expression -> expression GT expression .) ]
  ! MINUSMINUS      [ reduce using rule 59 (expression -> expression GT expression .) ]


state 106

    (60) expression -> expression LE expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 60 (expression -> expression LE expression .)
    COMMA           reduce using rule 60 (expression -> expression LE expression .)
    RPAREN          reduce using rule 60 (expression -> expression LE expression .)
    RBRACKET        reduce using rule 60 (expression -> expression LE expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60

  ! PLUS            [ reduce using rule 60 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 60 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 60 (expression -> expression LE expression .) ]
  ! DIV             [ reduce using rule 60 (expression -> expression LE expression .) ]
  ! MOD             [ reduce using rule 60 (expression -> expression LE expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 60 (expression -> expression LE expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 60 (expression -> expression LE expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 60 (expression -> expression LE expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 60 (expression -> expression LE expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 60 (expression -> expression LE expression .) ]
  ! POT             [ reduce using rule 60 (expression -> expression LE expression .) ]
  ! AND             [ reduce using rule 60 (expression -> expression LE expression .) ]
  ! OR              [ reduce using rule 60 (expression -> expression LE expression .) ]
  ! EQ              [ reduce using rule 60 (expression -> expression LE expression .) ]
  ! NEQ             [ reduce using rule 60 (expression -> expression LE expression .) ]
  ! STRICT_EQ       [ reduce using rule 60 (expression -> expression LE expression .) ]
  ! STRICT_NEQ      [ reduce using rule 60 (expression -> expression LE expression .) ]
  ! LT              [ reduce using rule 60 (expression -> expression LE expression .) ]
  ! GT              [ reduce using rule 60 (expression -> expression LE expression .) ]
  ! LE              [ reduce using rule 60 (expression -> expression LE expression .) ]
  ! GE              [ reduce using rule 60 (expression -> expression LE expression .) ]
  ! DOT             [ reduce using rule 60 (expression -> expression LE expression .) ]
  ! LBRACKET        [ reduce using rule 60 (expression -> expression LE expression .) ]
  ! PLUSPLUS        [ reduce using rule 60 (expression -> expression LE expression .) ]
  ! MINUSMINUS      [ reduce using rule 60 (expression -> expression LE expression .) ]


state 107

    (61) expression -> expression GE expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    SEMICOLON       reduce using rule 61 (expression -> expression GE expression .)
    COMMA           reduce using rule 61 (expression -> expression GE expression .)
    RPAREN          reduce using rule 61 (expression -> expression GE expression .)
    RBRACKET        reduce using rule 61 (expression -> expression GE expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60

  ! PLUS            [ reduce using rule 61 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 61 (expression -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 61 (expression -> expression GE expression .) ]
  ! DIV             [ reduce using rule 61 (expression -> expression GE expression .) ]
  ! MOD             [ reduce using rule 61 (expression -> expression GE expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 61 (expression -> expression GE expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 61 (expression -> expression GE expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 61 (expression -> expression GE expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 61 (expression -> expression GE expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 61 (expression -> expression GE expression .) ]
  ! POT             [ reduce using rule 61 (expression -> expression GE expression .) ]
  ! AND             [ reduce using rule 61 (expression -> expression GE expression .) ]
  ! OR              [ reduce using rule 61 (expression -> expression GE expression .) ]
  ! EQ              [ reduce using rule 61 (expression -> expression GE expression .) ]
  ! NEQ             [ reduce using rule 61 (expression -> expression GE expression .) ]
  ! STRICT_EQ       [ reduce using rule 61 (expression -> expression GE expression .) ]
  ! STRICT_NEQ      [ reduce using rule 61 (expression -> expression GE expression .) ]
  ! LT              [ reduce using rule 61 (expression -> expression GE expression .) ]
  ! GT              [ reduce using rule 61 (expression -> expression GE expression .) ]
  ! LE              [ reduce using rule 61 (expression -> expression GE expression .) ]
  ! GE              [ reduce using rule 61 (expression -> expression GE expression .) ]
  ! DOT             [ reduce using rule 61 (expression -> expression GE expression .) ]
  ! LBRACKET        [ reduce using rule 61 (expression -> expression GE expression .) ]
  ! PLUSPLUS        [ reduce using rule 61 (expression -> expression GE expression .) ]
  ! MINUSMINUS      [ reduce using rule 61 (expression -> expression GE expression .) ]


state 108

    (65) expression -> expression DOT IDENTIFIER .

    SEMICOLON       reduce using rule 65 (expression -> expression DOT IDENTIFIER .)
    PLUS            reduce using rule 65 (expression -> expression DOT IDENTIFIER .)
    MINUS           reduce using rule 65 (expression -> expression DOT IDENTIFIER .)
    TIMES           reduce using rule 65 (expression -> expression DOT IDENTIFIER .)
    DIV             reduce using rule 65 (expression -> expression DOT IDENTIFIER .)
    MOD             reduce using rule 65 (expression -> expression DOT IDENTIFIER .)
    PLUS_ASSIGN     reduce using rule 65 (expression -> expression DOT IDENTIFIER .)
    MINUS_ASSIGN    reduce using rule 65 (expression -> expression DOT IDENTIFIER .)
    MULT_ASSIGN     reduce using rule 65 (expression -> expression DOT IDENTIFIER .)
    DIV_ASSIGN      reduce using rule 65 (expression -> expression DOT IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 65 (expression -> expression DOT IDENTIFIER .)
    POT             reduce using rule 65 (expression -> expression DOT IDENTIFIER .)
    AND             reduce using rule 65 (expression -> expression DOT IDENTIFIER .)
    OR              reduce using rule 65 (expression -> expression DOT IDENTIFIER .)
    EQ              reduce using rule 65 (expression -> expression DOT IDENTIFIER .)
    NEQ             reduce using rule 65 (expression -> expression DOT IDENTIFIER .)
    STRICT_EQ       reduce using rule 65 (expression -> expression DOT IDENTIFIER .)
    STRICT_NEQ      reduce using rule 65 (expression -> expression DOT IDENTIFIER .)
    LT              reduce using rule 65 (expression -> expression DOT IDENTIFIER .)
    GT              reduce using rule 65 (expression -> expression DOT IDENTIFIER .)
    LE              reduce using rule 65 (expression -> expression DOT IDENTIFIER .)
    GE              reduce using rule 65 (expression -> expression DOT IDENTIFIER .)
    DOT             reduce using rule 65 (expression -> expression DOT IDENTIFIER .)
    LBRACKET        reduce using rule 65 (expression -> expression DOT IDENTIFIER .)
    PLUSPLUS        reduce using rule 65 (expression -> expression DOT IDENTIFIER .)
    MINUSMINUS      reduce using rule 65 (expression -> expression DOT IDENTIFIER .)
    COMMA           reduce using rule 65 (expression -> expression DOT IDENTIFIER .)
    RPAREN          reduce using rule 65 (expression -> expression DOT IDENTIFIER .)
    RBRACKET        reduce using rule 65 (expression -> expression DOT IDENTIFIER .)


state 109

    (66) expression -> expression LBRACKET expression . RBRACKET
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

    RBRACKET        shift and go to state 134
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60


state 110

    (11) letAssignment -> LET IDENTIFIER COLON . type EQUAL expression SEMICOLON
    (13) declaracion -> LET IDENTIFIER COLON . type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (34) type -> . LBRACKET type COMMA type RBRACKET
    (36) type -> . NUMBER_TYPE
    (37) type -> . STRING_TYPE
    (38) type -> . BOOLEAN_TYPE
    (39) type -> . IDENTIFIER
    (40) type -> . type LBRACKET RBRACKET

    LBRACKET        shift and go to state 137
    NUMBER_TYPE     shift and go to state 138
    STRING_TYPE     shift and go to state 139
    BOOLEAN_TYPE    shift and go to state 140
    IDENTIFIER      shift and go to state 135

    type                           shift and go to state 136

state 111

    (12) letAssignment -> LET IDENTIFIER EQUAL . expression SEMICOLON
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 141

state 112

    (67) expression -> IDENTIFIER LPAREN lista_expresiones_opt . RPAREN

    RPAREN          shift and go to state 142


state 113

    (14) lista_expresiones_opt -> lista_expresiones .

    RPAREN          reduce using rule 14 (lista_expresiones_opt -> lista_expresiones .)
    RBRACKET        reduce using rule 14 (lista_expresiones_opt -> lista_expresiones .)


state 114

    (15) lista_expresiones_opt -> empty .

    RPAREN          reduce using rule 15 (lista_expresiones_opt -> empty .)
    RBRACKET        reduce using rule 15 (lista_expresiones_opt -> empty .)


state 115

    (16) lista_expresiones -> expression .
    (17) lista_expresiones -> expression . COMMA lista_expresiones
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

    RPAREN          reduce using rule 16 (lista_expresiones -> expression .)
    RBRACKET        reduce using rule 16 (lista_expresiones -> expression .)
    COMMA           shift and go to state 143
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60


state 116

    (35) expression -> LBRACKET expression COMMA . expression RBRACKET
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 144

state 117

    (29) function -> FUNCTION IDENTIFIER LPAREN . parameters RPAREN COLON type LBRACE body_function RBRACE
    (30) parameters -> . IDENTIFIER COLON type
    (31) parameters -> . IDENTIFIER COLON type COMMA parameters
    (32) parameters -> . empty
    (96) empty -> .

    IDENTIFIER      shift and go to state 145
    RPAREN          reduce using rule 96 (empty -> .)

    parameters                     shift and go to state 146
    empty                          shift and go to state 147

state 118

    (64) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    DIV             reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    PLUS_ASSIGN     reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    MINUS_ASSIGN    reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    MULT_ASSIGN     reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    DIV_ASSIGN      reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    MOD_ASSIGN      reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    POT             reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    STRICT_EQ       reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    STRICT_NEQ      reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    DOT             reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    PLUSPLUS        reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    MINUSMINUS      reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 64 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 64 (expression -> LPAREN expression RPAREN .)


state 119

    (83) statement -> LBRACE instruction_list RBRACE .

    LET             reduce using rule 83 (statement -> LBRACE instruction_list RBRACE .)
    FUNCTION        reduce using rule 83 (statement -> LBRACE instruction_list RBRACE .)
    CONST           reduce using rule 83 (statement -> LBRACE instruction_list RBRACE .)
    IF              reduce using rule 83 (statement -> LBRACE instruction_list RBRACE .)
    WHILE           reduce using rule 83 (statement -> LBRACE instruction_list RBRACE .)
    FOR             reduce using rule 83 (statement -> LBRACE instruction_list RBRACE .)
    LBRACE          reduce using rule 83 (statement -> LBRACE instruction_list RBRACE .)
    RETURN          reduce using rule 83 (statement -> LBRACE instruction_list RBRACE .)
    LBRACKET        reduce using rule 83 (statement -> LBRACE instruction_list RBRACE .)
    PROMPT          reduce using rule 83 (statement -> LBRACE instruction_list RBRACE .)
    NOT             reduce using rule 83 (statement -> LBRACE instruction_list RBRACE .)
    LPAREN          reduce using rule 83 (statement -> LBRACE instruction_list RBRACE .)
    IDENTIFIER      reduce using rule 83 (statement -> LBRACE instruction_list RBRACE .)
    NUMBER          reduce using rule 83 (statement -> LBRACE instruction_list RBRACE .)
    FLOAT           reduce using rule 83 (statement -> LBRACE instruction_list RBRACE .)
    STRING          reduce using rule 83 (statement -> LBRACE instruction_list RBRACE .)
    TRUE            reduce using rule 83 (statement -> LBRACE instruction_list RBRACE .)
    FALSE           reduce using rule 83 (statement -> LBRACE instruction_list RBRACE .)
    PLUSPLUS        reduce using rule 83 (statement -> LBRACE instruction_list RBRACE .)
    MINUSMINUS      reduce using rule 83 (statement -> LBRACE instruction_list RBRACE .)
    CONSOLE         reduce using rule 83 (statement -> LBRACE instruction_list RBRACE .)
    VAR             reduce using rule 83 (statement -> LBRACE instruction_list RBRACE .)
    $end            reduce using rule 83 (statement -> LBRACE instruction_list RBRACE .)
    RBRACE          reduce using rule 83 (statement -> LBRACE instruction_list RBRACE .)
    ELSE            reduce using rule 83 (statement -> LBRACE instruction_list RBRACE .)


state 120

    (93) instruction_list -> instruction_list statement .

    RBRACE          reduce using rule 93 (instruction_list -> instruction_list statement .)
    LBRACE          reduce using rule 93 (instruction_list -> instruction_list statement .)
    RETURN          reduce using rule 93 (instruction_list -> instruction_list statement .)
    LET             reduce using rule 93 (instruction_list -> instruction_list statement .)
    FUNCTION        reduce using rule 93 (instruction_list -> instruction_list statement .)
    CONST           reduce using rule 93 (instruction_list -> instruction_list statement .)
    CONSOLE         reduce using rule 93 (instruction_list -> instruction_list statement .)
    LBRACKET        reduce using rule 93 (instruction_list -> instruction_list statement .)
    PROMPT          reduce using rule 93 (instruction_list -> instruction_list statement .)
    NOT             reduce using rule 93 (instruction_list -> instruction_list statement .)
    LPAREN          reduce using rule 93 (instruction_list -> instruction_list statement .)
    IDENTIFIER      reduce using rule 93 (instruction_list -> instruction_list statement .)
    NUMBER          reduce using rule 93 (instruction_list -> instruction_list statement .)
    FLOAT           reduce using rule 93 (instruction_list -> instruction_list statement .)
    STRING          reduce using rule 93 (instruction_list -> instruction_list statement .)
    TRUE            reduce using rule 93 (instruction_list -> instruction_list statement .)
    FALSE           reduce using rule 93 (instruction_list -> instruction_list statement .)
    PLUSPLUS        reduce using rule 93 (instruction_list -> instruction_list statement .)
    MINUSMINUS      reduce using rule 93 (instruction_list -> instruction_list statement .)
    IF              reduce using rule 93 (instruction_list -> instruction_list statement .)
    WHILE           reduce using rule 93 (instruction_list -> instruction_list statement .)
    FOR             reduce using rule 93 (instruction_list -> instruction_list statement .)
    VAR             reduce using rule 93 (instruction_list -> instruction_list statement .)


state 121

    (88) statement -> expression SEMICOLON .

    RBRACE          reduce using rule 88 (statement -> expression SEMICOLON .)
    LBRACE          reduce using rule 88 (statement -> expression SEMICOLON .)
    RETURN          reduce using rule 88 (statement -> expression SEMICOLON .)
    LET             reduce using rule 88 (statement -> expression SEMICOLON .)
    FUNCTION        reduce using rule 88 (statement -> expression SEMICOLON .)
    CONST           reduce using rule 88 (statement -> expression SEMICOLON .)
    CONSOLE         reduce using rule 88 (statement -> expression SEMICOLON .)
    LBRACKET        reduce using rule 88 (statement -> expression SEMICOLON .)
    PROMPT          reduce using rule 88 (statement -> expression SEMICOLON .)
    NOT             reduce using rule 88 (statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 88 (statement -> expression SEMICOLON .)
    IDENTIFIER      reduce using rule 88 (statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 88 (statement -> expression SEMICOLON .)
    FLOAT           reduce using rule 88 (statement -> expression SEMICOLON .)
    STRING          reduce using rule 88 (statement -> expression SEMICOLON .)
    TRUE            reduce using rule 88 (statement -> expression SEMICOLON .)
    FALSE           reduce using rule 88 (statement -> expression SEMICOLON .)
    PLUSPLUS        reduce using rule 88 (statement -> expression SEMICOLON .)
    MINUSMINUS      reduce using rule 88 (statement -> expression SEMICOLON .)
    IF              reduce using rule 88 (statement -> expression SEMICOLON .)
    WHILE           reduce using rule 88 (statement -> expression SEMICOLON .)
    FOR             reduce using rule 88 (statement -> expression SEMICOLON .)
    VAR             reduce using rule 88 (statement -> expression SEMICOLON .)
    ELSE            reduce using rule 88 (statement -> expression SEMICOLON .)
    $end            reduce using rule 88 (statement -> expression SEMICOLON .)


state 122

    (100) function -> CONST IDENTIFIER EQUAL . LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON

    LPAREN          shift and go to state 148


state 123

    (79) controlEstructure -> IF LPAREN expression . RPAREN statement
    (80) controlEstructure -> IF LPAREN expression . RPAREN statement ELSE statement
    (81) controlEstructure -> IF LPAREN expression . RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (82) controlEstructure -> IF LPAREN expression . RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

    RPAREN          shift and go to state 149
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60


state 124

    (97) controlEstructure -> WHILE LPAREN expression . RPAREN statement
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

    RPAREN          shift and go to state 150
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60


state 125

    (18) forEstructure -> FOR LPAREN for_init . SEMICOLON expression SEMICOLON for_update RPAREN statement

    SEMICOLON       shift and go to state 151


state 126

    (21) for_init -> expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

    SEMICOLON       reduce using rule 21 (for_init -> expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60


state 127

    (19) for_init -> LET . IDENTIFIER EQUAL expression
    (20) for_init -> LET . IDENTIFIER COLON type EQUAL expression

    IDENTIFIER      shift and go to state 152


state 128

    (22) for_init -> empty .

    SEMICOLON       reduce using rule 22 (for_init -> empty .)


state 129

    (90) statement -> RETURN expression SEMICOLON .

    LET             reduce using rule 90 (statement -> RETURN expression SEMICOLON .)
    FUNCTION        reduce using rule 90 (statement -> RETURN expression SEMICOLON .)
    CONST           reduce using rule 90 (statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 90 (statement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 90 (statement -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 90 (statement -> RETURN expression SEMICOLON .)
    LBRACE          reduce using rule 90 (statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 90 (statement -> RETURN expression SEMICOLON .)
    LBRACKET        reduce using rule 90 (statement -> RETURN expression SEMICOLON .)
    PROMPT          reduce using rule 90 (statement -> RETURN expression SEMICOLON .)
    NOT             reduce using rule 90 (statement -> RETURN expression SEMICOLON .)
    LPAREN          reduce using rule 90 (statement -> RETURN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 90 (statement -> RETURN expression SEMICOLON .)
    NUMBER          reduce using rule 90 (statement -> RETURN expression SEMICOLON .)
    FLOAT           reduce using rule 90 (statement -> RETURN expression SEMICOLON .)
    STRING          reduce using rule 90 (statement -> RETURN expression SEMICOLON .)
    TRUE            reduce using rule 90 (statement -> RETURN expression SEMICOLON .)
    FALSE           reduce using rule 90 (statement -> RETURN expression SEMICOLON .)
    PLUSPLUS        reduce using rule 90 (statement -> RETURN expression SEMICOLON .)
    MINUSMINUS      reduce using rule 90 (statement -> RETURN expression SEMICOLON .)
    CONSOLE         reduce using rule 90 (statement -> RETURN expression SEMICOLON .)
    VAR             reduce using rule 90 (statement -> RETURN expression SEMICOLON .)
    $end            reduce using rule 90 (statement -> RETURN expression SEMICOLON .)
    RBRACE          reduce using rule 90 (statement -> RETURN expression SEMICOLON .)
    ELSE            reduce using rule 90 (statement -> RETURN expression SEMICOLON .)


state 130

    (62) expression -> PROMPT LPAREN STRING . RPAREN

    RPAREN          shift and go to state 153


state 131

    (78) consolelog -> CONSOLE DOT LOG . LPAREN lista_expresiones_opt RPAREN SEMICOLON

    LPAREN          shift and go to state 154


state 132

    (98) varAssignment -> VAR IDENTIFIER COLON . type EQUAL expression SEMICOLON
    (34) type -> . LBRACKET type COMMA type RBRACKET
    (36) type -> . NUMBER_TYPE
    (37) type -> . STRING_TYPE
    (38) type -> . BOOLEAN_TYPE
    (39) type -> . IDENTIFIER
    (40) type -> . type LBRACKET RBRACKET

    LBRACKET        shift and go to state 137
    NUMBER_TYPE     shift and go to state 138
    STRING_TYPE     shift and go to state 139
    BOOLEAN_TYPE    shift and go to state 140
    IDENTIFIER      shift and go to state 135

    type                           shift and go to state 155

state 133

    (99) varAssignment -> VAR IDENTIFIER EQUAL . expression SEMICOLON
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 156

state 134

    (66) expression -> expression LBRACKET expression RBRACKET .

    SEMICOLON       reduce using rule 66 (expression -> expression LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 66 (expression -> expression LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 66 (expression -> expression LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 66 (expression -> expression LBRACKET expression RBRACKET .)
    DIV             reduce using rule 66 (expression -> expression LBRACKET expression RBRACKET .)
    MOD             reduce using rule 66 (expression -> expression LBRACKET expression RBRACKET .)
    PLUS_ASSIGN     reduce using rule 66 (expression -> expression LBRACKET expression RBRACKET .)
    MINUS_ASSIGN    reduce using rule 66 (expression -> expression LBRACKET expression RBRACKET .)
    MULT_ASSIGN     reduce using rule 66 (expression -> expression LBRACKET expression RBRACKET .)
    DIV_ASSIGN      reduce using rule 66 (expression -> expression LBRACKET expression RBRACKET .)
    MOD_ASSIGN      reduce using rule 66 (expression -> expression LBRACKET expression RBRACKET .)
    POT             reduce using rule 66 (expression -> expression LBRACKET expression RBRACKET .)
    AND             reduce using rule 66 (expression -> expression LBRACKET expression RBRACKET .)
    OR              reduce using rule 66 (expression -> expression LBRACKET expression RBRACKET .)
    EQ              reduce using rule 66 (expression -> expression LBRACKET expression RBRACKET .)
    NEQ             reduce using rule 66 (expression -> expression LBRACKET expression RBRACKET .)
    STRICT_EQ       reduce using rule 66 (expression -> expression LBRACKET expression RBRACKET .)
    STRICT_NEQ      reduce using rule 66 (expression -> expression LBRACKET expression RBRACKET .)
    LT              reduce using rule 66 (expression -> expression LBRACKET expression RBRACKET .)
    GT              reduce using rule 66 (expression -> expression LBRACKET expression RBRACKET .)
    LE              reduce using rule 66 (expression -> expression LBRACKET expression RBRACKET .)
    GE              reduce using rule 66 (expression -> expression LBRACKET expression RBRACKET .)
    DOT             reduce using rule 66 (expression -> expression LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 66 (expression -> expression LBRACKET expression RBRACKET .)
    PLUSPLUS        reduce using rule 66 (expression -> expression LBRACKET expression RBRACKET .)
    MINUSMINUS      reduce using rule 66 (expression -> expression LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 66 (expression -> expression LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 66 (expression -> expression LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 66 (expression -> expression LBRACKET expression RBRACKET .)


state 135

    (39) type -> IDENTIFIER .

    EQUAL           reduce using rule 39 (type -> IDENTIFIER .)
    LBRACKET        reduce using rule 39 (type -> IDENTIFIER .)
    COMMA           reduce using rule 39 (type -> IDENTIFIER .)
    RPAREN          reduce using rule 39 (type -> IDENTIFIER .)
    RBRACKET        reduce using rule 39 (type -> IDENTIFIER .)
    LBRACE          reduce using rule 39 (type -> IDENTIFIER .)


state 136

    (11) letAssignment -> LET IDENTIFIER COLON type . EQUAL expression SEMICOLON
    (13) declaracion -> LET IDENTIFIER COLON type . LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (40) type -> type . LBRACKET RBRACKET

    EQUAL           shift and go to state 157
    LBRACKET        shift and go to state 158


state 137

    (34) type -> LBRACKET . type COMMA type RBRACKET
    (34) type -> . LBRACKET type COMMA type RBRACKET
    (36) type -> . NUMBER_TYPE
    (37) type -> . STRING_TYPE
    (38) type -> . BOOLEAN_TYPE
    (39) type -> . IDENTIFIER
    (40) type -> . type LBRACKET RBRACKET

    LBRACKET        shift and go to state 137
    NUMBER_TYPE     shift and go to state 138
    STRING_TYPE     shift and go to state 139
    BOOLEAN_TYPE    shift and go to state 140
    IDENTIFIER      shift and go to state 135

    type                           shift and go to state 159

state 138

    (36) type -> NUMBER_TYPE .

    EQUAL           reduce using rule 36 (type -> NUMBER_TYPE .)
    LBRACKET        reduce using rule 36 (type -> NUMBER_TYPE .)
    COMMA           reduce using rule 36 (type -> NUMBER_TYPE .)
    RPAREN          reduce using rule 36 (type -> NUMBER_TYPE .)
    RBRACKET        reduce using rule 36 (type -> NUMBER_TYPE .)
    LBRACE          reduce using rule 36 (type -> NUMBER_TYPE .)


state 139

    (37) type -> STRING_TYPE .

    EQUAL           reduce using rule 37 (type -> STRING_TYPE .)
    LBRACKET        reduce using rule 37 (type -> STRING_TYPE .)
    COMMA           reduce using rule 37 (type -> STRING_TYPE .)
    RPAREN          reduce using rule 37 (type -> STRING_TYPE .)
    RBRACKET        reduce using rule 37 (type -> STRING_TYPE .)
    LBRACE          reduce using rule 37 (type -> STRING_TYPE .)


state 140

    (38) type -> BOOLEAN_TYPE .

    EQUAL           reduce using rule 38 (type -> BOOLEAN_TYPE .)
    LBRACKET        reduce using rule 38 (type -> BOOLEAN_TYPE .)
    COMMA           reduce using rule 38 (type -> BOOLEAN_TYPE .)
    RPAREN          reduce using rule 38 (type -> BOOLEAN_TYPE .)
    RBRACKET        reduce using rule 38 (type -> BOOLEAN_TYPE .)
    LBRACE          reduce using rule 38 (type -> BOOLEAN_TYPE .)


state 141

    (12) letAssignment -> LET IDENTIFIER EQUAL expression . SEMICOLON
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

    SEMICOLON       shift and go to state 160
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60


state 142

    (67) expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .

    SEMICOLON       reduce using rule 67 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    PLUS            reduce using rule 67 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    MINUS           reduce using rule 67 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    TIMES           reduce using rule 67 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    DIV             reduce using rule 67 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    MOD             reduce using rule 67 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    PLUS_ASSIGN     reduce using rule 67 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    MINUS_ASSIGN    reduce using rule 67 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    MULT_ASSIGN     reduce using rule 67 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    DIV_ASSIGN      reduce using rule 67 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    MOD_ASSIGN      reduce using rule 67 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    POT             reduce using rule 67 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    AND             reduce using rule 67 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    OR              reduce using rule 67 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    EQ              reduce using rule 67 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    NEQ             reduce using rule 67 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    STRICT_EQ       reduce using rule 67 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    STRICT_NEQ      reduce using rule 67 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    LT              reduce using rule 67 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    GT              reduce using rule 67 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    LE              reduce using rule 67 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    GE              reduce using rule 67 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    DOT             reduce using rule 67 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    LBRACKET        reduce using rule 67 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    PLUSPLUS        reduce using rule 67 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    MINUSMINUS      reduce using rule 67 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    COMMA           reduce using rule 67 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    RPAREN          reduce using rule 67 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)
    RBRACKET        reduce using rule 67 (expression -> IDENTIFIER LPAREN lista_expresiones_opt RPAREN .)


state 143

    (17) lista_expresiones -> expression COMMA . lista_expresiones
    (16) lista_expresiones -> . expression
    (17) lista_expresiones -> . expression COMMA lista_expresiones
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 115
    lista_expresiones              shift and go to state 161

state 144

    (35) expression -> LBRACKET expression COMMA expression . RBRACKET
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

    RBRACKET        shift and go to state 162
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60


state 145

    (30) parameters -> IDENTIFIER . COLON type
    (31) parameters -> IDENTIFIER . COLON type COMMA parameters

    COLON           shift and go to state 163


state 146

    (29) function -> FUNCTION IDENTIFIER LPAREN parameters . RPAREN COLON type LBRACE body_function RBRACE

    RPAREN          shift and go to state 164


state 147

    (32) parameters -> empty .

    RPAREN          reduce using rule 32 (parameters -> empty .)


state 148

    (100) function -> CONST IDENTIFIER EQUAL LPAREN . parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (30) parameters -> . IDENTIFIER COLON type
    (31) parameters -> . IDENTIFIER COLON type COMMA parameters
    (32) parameters -> . empty
    (96) empty -> .

    IDENTIFIER      shift and go to state 145
    RPAREN          reduce using rule 96 (empty -> .)

    parameters                     shift and go to state 165
    empty                          shift and go to state 147

state 149

    (79) controlEstructure -> IF LPAREN expression RPAREN . statement
    (80) controlEstructure -> IF LPAREN expression RPAREN . statement ELSE statement
    (81) controlEstructure -> IF LPAREN expression RPAREN . statement ELSE IF LPAREN expression RPAREN statement
    (82) controlEstructure -> IF LPAREN expression RPAREN . statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (83) statement -> . LBRACE instruction_list RBRACE
    (84) statement -> . letAssignment
    (85) statement -> . declaracion
    (86) statement -> . function
    (87) statement -> . consolelog
    (88) statement -> . expression SEMICOLON
    (89) statement -> . controlEstructure
    (90) statement -> . RETURN expression SEMICOLON
    (91) statement -> . forEstructure
    (92) statement -> . varAssignment
    (11) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (12) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (13) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (29) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (100) function -> . CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (78) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression
    (79) controlEstructure -> . IF LPAREN expression RPAREN statement
    (80) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (81) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (82) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (97) controlEstructure -> . WHILE LPAREN expression RPAREN statement
    (18) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (98) varAssignment -> . VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
    (99) varAssignment -> . VAR IDENTIFIER EQUAL expression SEMICOLON

    LBRACE          shift and go to state 16
    RETURN          shift and go to state 21
    LET             shift and go to state 11
    FUNCTION        shift and go to state 14
    CONST           shift and go to state 17
    CONSOLE         shift and go to state 32
    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    VAR             shift and go to state 33

    expression                     shift and go to state 73
    statement                      shift and go to state 166
    letAssignment                  shift and go to state 69
    declaracion                    shift and go to state 70
    function                       shift and go to state 71
    consolelog                     shift and go to state 72
    controlEstructure              shift and go to state 74
    forEstructure                  shift and go to state 75
    varAssignment                  shift and go to state 22

state 150

    (97) controlEstructure -> WHILE LPAREN expression RPAREN . statement
    (83) statement -> . LBRACE instruction_list RBRACE
    (84) statement -> . letAssignment
    (85) statement -> . declaracion
    (86) statement -> . function
    (87) statement -> . consolelog
    (88) statement -> . expression SEMICOLON
    (89) statement -> . controlEstructure
    (90) statement -> . RETURN expression SEMICOLON
    (91) statement -> . forEstructure
    (92) statement -> . varAssignment
    (11) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (12) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (13) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (29) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (100) function -> . CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (78) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression
    (79) controlEstructure -> . IF LPAREN expression RPAREN statement
    (80) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (81) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (82) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (97) controlEstructure -> . WHILE LPAREN expression RPAREN statement
    (18) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (98) varAssignment -> . VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
    (99) varAssignment -> . VAR IDENTIFIER EQUAL expression SEMICOLON

    LBRACE          shift and go to state 16
    RETURN          shift and go to state 21
    LET             shift and go to state 11
    FUNCTION        shift and go to state 14
    CONST           shift and go to state 17
    CONSOLE         shift and go to state 32
    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    VAR             shift and go to state 33

    expression                     shift and go to state 73
    statement                      shift and go to state 167
    letAssignment                  shift and go to state 69
    declaracion                    shift and go to state 70
    function                       shift and go to state 71
    consolelog                     shift and go to state 72
    controlEstructure              shift and go to state 74
    forEstructure                  shift and go to state 75
    varAssignment                  shift and go to state 22

state 151

    (18) forEstructure -> FOR LPAREN for_init SEMICOLON . expression SEMICOLON for_update RPAREN statement
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 168

state 152

    (19) for_init -> LET IDENTIFIER . EQUAL expression
    (20) for_init -> LET IDENTIFIER . COLON type EQUAL expression

    EQUAL           shift and go to state 169
    COLON           shift and go to state 170


state 153

    (62) expression -> PROMPT LPAREN STRING RPAREN .

    SEMICOLON       reduce using rule 62 (expression -> PROMPT LPAREN STRING RPAREN .)
    PLUS            reduce using rule 62 (expression -> PROMPT LPAREN STRING RPAREN .)
    MINUS           reduce using rule 62 (expression -> PROMPT LPAREN STRING RPAREN .)
    TIMES           reduce using rule 62 (expression -> PROMPT LPAREN STRING RPAREN .)
    DIV             reduce using rule 62 (expression -> PROMPT LPAREN STRING RPAREN .)
    MOD             reduce using rule 62 (expression -> PROMPT LPAREN STRING RPAREN .)
    PLUS_ASSIGN     reduce using rule 62 (expression -> PROMPT LPAREN STRING RPAREN .)
    MINUS_ASSIGN    reduce using rule 62 (expression -> PROMPT LPAREN STRING RPAREN .)
    MULT_ASSIGN     reduce using rule 62 (expression -> PROMPT LPAREN STRING RPAREN .)
    DIV_ASSIGN      reduce using rule 62 (expression -> PROMPT LPAREN STRING RPAREN .)
    MOD_ASSIGN      reduce using rule 62 (expression -> PROMPT LPAREN STRING RPAREN .)
    POT             reduce using rule 62 (expression -> PROMPT LPAREN STRING RPAREN .)
    AND             reduce using rule 62 (expression -> PROMPT LPAREN STRING RPAREN .)
    OR              reduce using rule 62 (expression -> PROMPT LPAREN STRING RPAREN .)
    EQ              reduce using rule 62 (expression -> PROMPT LPAREN STRING RPAREN .)
    NEQ             reduce using rule 62 (expression -> PROMPT LPAREN STRING RPAREN .)
    STRICT_EQ       reduce using rule 62 (expression -> PROMPT LPAREN STRING RPAREN .)
    STRICT_NEQ      reduce using rule 62 (expression -> PROMPT LPAREN STRING RPAREN .)
    LT              reduce using rule 62 (expression -> PROMPT LPAREN STRING RPAREN .)
    GT              reduce using rule 62 (expression -> PROMPT LPAREN STRING RPAREN .)
    LE              reduce using rule 62 (expression -> PROMPT LPAREN STRING RPAREN .)
    GE              reduce using rule 62 (expression -> PROMPT LPAREN STRING RPAREN .)
    DOT             reduce using rule 62 (expression -> PROMPT LPAREN STRING RPAREN .)
    LBRACKET        reduce using rule 62 (expression -> PROMPT LPAREN STRING RPAREN .)
    PLUSPLUS        reduce using rule 62 (expression -> PROMPT LPAREN STRING RPAREN .)
    MINUSMINUS      reduce using rule 62 (expression -> PROMPT LPAREN STRING RPAREN .)
    COMMA           reduce using rule 62 (expression -> PROMPT LPAREN STRING RPAREN .)
    RPAREN          reduce using rule 62 (expression -> PROMPT LPAREN STRING RPAREN .)
    RBRACKET        reduce using rule 62 (expression -> PROMPT LPAREN STRING RPAREN .)


state 154

    (78) consolelog -> CONSOLE DOT LOG LPAREN . lista_expresiones_opt RPAREN SEMICOLON
    (14) lista_expresiones_opt -> . lista_expresiones
    (15) lista_expresiones_opt -> . empty
    (16) lista_expresiones -> . expression
    (17) lista_expresiones -> . expression COMMA lista_expresiones
    (96) empty -> .
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    RPAREN          reduce using rule 96 (empty -> .)
    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    lista_expresiones_opt          shift and go to state 171
    lista_expresiones              shift and go to state 113
    empty                          shift and go to state 114
    expression                     shift and go to state 115

state 155

    (98) varAssignment -> VAR IDENTIFIER COLON type . EQUAL expression SEMICOLON
    (40) type -> type . LBRACKET RBRACKET

    EQUAL           shift and go to state 172
    LBRACKET        shift and go to state 173


state 156

    (99) varAssignment -> VAR IDENTIFIER EQUAL expression . SEMICOLON
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

    SEMICOLON       shift and go to state 174
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60


state 157

    (11) letAssignment -> LET IDENTIFIER COLON type EQUAL . expression SEMICOLON
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 175

state 158

    (13) declaracion -> LET IDENTIFIER COLON type LBRACKET . RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (40) type -> type LBRACKET . RBRACKET

    RBRACKET        shift and go to state 176


state 159

    (34) type -> LBRACKET type . COMMA type RBRACKET
    (40) type -> type . LBRACKET RBRACKET

    COMMA           shift and go to state 177
    LBRACKET        shift and go to state 173


state 160

    (12) letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .

    LET             reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    FUNCTION        reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    CONST           reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    IF              reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    WHILE           reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    FOR             reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    LBRACE          reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    RETURN          reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    LBRACKET        reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    PROMPT          reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    NOT             reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    LPAREN          reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    IDENTIFIER      reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    NUMBER          reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    FLOAT           reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    STRING          reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    TRUE            reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    FALSE           reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    PLUSPLUS        reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    MINUSMINUS      reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    CONSOLE         reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    VAR             reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    $end            reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    RBRACE          reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)
    ELSE            reduce using rule 12 (letAssignment -> LET IDENTIFIER EQUAL expression SEMICOLON .)


state 161

    (17) lista_expresiones -> expression COMMA lista_expresiones .

    RPAREN          reduce using rule 17 (lista_expresiones -> expression COMMA lista_expresiones .)
    RBRACKET        reduce using rule 17 (lista_expresiones -> expression COMMA lista_expresiones .)


state 162

    (35) expression -> LBRACKET expression COMMA expression RBRACKET .

    SEMICOLON       reduce using rule 35 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    PLUS            reduce using rule 35 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    MINUS           reduce using rule 35 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    TIMES           reduce using rule 35 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    DIV             reduce using rule 35 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    MOD             reduce using rule 35 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    PLUS_ASSIGN     reduce using rule 35 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    MINUS_ASSIGN    reduce using rule 35 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    MULT_ASSIGN     reduce using rule 35 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    DIV_ASSIGN      reduce using rule 35 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    MOD_ASSIGN      reduce using rule 35 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    POT             reduce using rule 35 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    AND             reduce using rule 35 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    OR              reduce using rule 35 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    EQ              reduce using rule 35 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    NEQ             reduce using rule 35 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    STRICT_EQ       reduce using rule 35 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    STRICT_NEQ      reduce using rule 35 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    LT              reduce using rule 35 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    GT              reduce using rule 35 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    LE              reduce using rule 35 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    GE              reduce using rule 35 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    DOT             reduce using rule 35 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    LBRACKET        reduce using rule 35 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    PLUSPLUS        reduce using rule 35 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    MINUSMINUS      reduce using rule 35 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    COMMA           reduce using rule 35 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    RPAREN          reduce using rule 35 (expression -> LBRACKET expression COMMA expression RBRACKET .)
    RBRACKET        reduce using rule 35 (expression -> LBRACKET expression COMMA expression RBRACKET .)


state 163

    (30) parameters -> IDENTIFIER COLON . type
    (31) parameters -> IDENTIFIER COLON . type COMMA parameters
    (34) type -> . LBRACKET type COMMA type RBRACKET
    (36) type -> . NUMBER_TYPE
    (37) type -> . STRING_TYPE
    (38) type -> . BOOLEAN_TYPE
    (39) type -> . IDENTIFIER
    (40) type -> . type LBRACKET RBRACKET

    LBRACKET        shift and go to state 137
    NUMBER_TYPE     shift and go to state 138
    STRING_TYPE     shift and go to state 139
    BOOLEAN_TYPE    shift and go to state 140
    IDENTIFIER      shift and go to state 135

    type                           shift and go to state 178

state 164

    (29) function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN . COLON type LBRACE body_function RBRACE

    COLON           shift and go to state 179


state 165

    (100) function -> CONST IDENTIFIER EQUAL LPAREN parameters . RPAREN ARROW LBRACE body_function RBRACE SEMICOLON

    RPAREN          shift and go to state 180


state 166

    (79) controlEstructure -> IF LPAREN expression RPAREN statement .
    (80) controlEstructure -> IF LPAREN expression RPAREN statement . ELSE statement
    (81) controlEstructure -> IF LPAREN expression RPAREN statement . ELSE IF LPAREN expression RPAREN statement
    (82) controlEstructure -> IF LPAREN expression RPAREN statement . ELSE IF LPAREN expression RPAREN statement ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    LET             reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    FUNCTION        reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    CONST           reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    IF              reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    FOR             reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    LBRACKET        reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    PROMPT          reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    NOT             reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    IDENTIFIER      reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    NUMBER          reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    FLOAT           reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    STRING          reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    TRUE            reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    FALSE           reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    PLUSPLUS        reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    MINUSMINUS      reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    CONSOLE         reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    VAR             reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    $end            reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 181

  ! ELSE            [ reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .) ]


state 167

    (97) controlEstructure -> WHILE LPAREN expression RPAREN statement .

    LET             reduce using rule 97 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    FUNCTION        reduce using rule 97 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    CONST           reduce using rule 97 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 97 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 97 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    FOR             reduce using rule 97 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 97 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 97 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    LBRACKET        reduce using rule 97 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    PROMPT          reduce using rule 97 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    NOT             reduce using rule 97 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 97 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    IDENTIFIER      reduce using rule 97 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    NUMBER          reduce using rule 97 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    FLOAT           reduce using rule 97 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    STRING          reduce using rule 97 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    TRUE            reduce using rule 97 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    FALSE           reduce using rule 97 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    PLUSPLUS        reduce using rule 97 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    MINUSMINUS      reduce using rule 97 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    CONSOLE         reduce using rule 97 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    VAR             reduce using rule 97 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    $end            reduce using rule 97 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 97 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 97 (controlEstructure -> WHILE LPAREN expression RPAREN statement .)


state 168

    (18) forEstructure -> FOR LPAREN for_init SEMICOLON expression . SEMICOLON for_update RPAREN statement
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

    SEMICOLON       shift and go to state 182
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60


state 169

    (19) for_init -> LET IDENTIFIER EQUAL . expression
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 183

state 170

    (20) for_init -> LET IDENTIFIER COLON . type EQUAL expression
    (34) type -> . LBRACKET type COMMA type RBRACKET
    (36) type -> . NUMBER_TYPE
    (37) type -> . STRING_TYPE
    (38) type -> . BOOLEAN_TYPE
    (39) type -> . IDENTIFIER
    (40) type -> . type LBRACKET RBRACKET

    LBRACKET        shift and go to state 137
    NUMBER_TYPE     shift and go to state 138
    STRING_TYPE     shift and go to state 139
    BOOLEAN_TYPE    shift and go to state 140
    IDENTIFIER      shift and go to state 135

    type                           shift and go to state 184

state 171

    (78) consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt . RPAREN SEMICOLON

    RPAREN          shift and go to state 185


state 172

    (98) varAssignment -> VAR IDENTIFIER COLON type EQUAL . expression SEMICOLON
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 186

state 173

    (40) type -> type LBRACKET . RBRACKET

    RBRACKET        shift and go to state 187


state 174

    (99) varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .

    LET             reduce using rule 99 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    FUNCTION        reduce using rule 99 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    CONST           reduce using rule 99 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    IF              reduce using rule 99 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    WHILE           reduce using rule 99 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    FOR             reduce using rule 99 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    LBRACE          reduce using rule 99 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    RETURN          reduce using rule 99 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    LBRACKET        reduce using rule 99 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    PROMPT          reduce using rule 99 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    NOT             reduce using rule 99 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    LPAREN          reduce using rule 99 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    IDENTIFIER      reduce using rule 99 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    NUMBER          reduce using rule 99 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    FLOAT           reduce using rule 99 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    STRING          reduce using rule 99 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    TRUE            reduce using rule 99 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    FALSE           reduce using rule 99 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    PLUSPLUS        reduce using rule 99 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    MINUSMINUS      reduce using rule 99 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    CONSOLE         reduce using rule 99 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    VAR             reduce using rule 99 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    $end            reduce using rule 99 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    RBRACE          reduce using rule 99 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)
    ELSE            reduce using rule 99 (varAssignment -> VAR IDENTIFIER EQUAL expression SEMICOLON .)


state 175

    (11) letAssignment -> LET IDENTIFIER COLON type EQUAL expression . SEMICOLON
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

    SEMICOLON       shift and go to state 188
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60


state 176

    (13) declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET . EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (40) type -> type LBRACKET RBRACKET .

  ! shift/reduce conflict for EQUAL resolved as shift
    EQUAL           shift and go to state 189
    LBRACKET        reduce using rule 40 (type -> type LBRACKET RBRACKET .)

  ! EQUAL           [ reduce using rule 40 (type -> type LBRACKET RBRACKET .) ]


state 177

    (34) type -> LBRACKET type COMMA . type RBRACKET
    (34) type -> . LBRACKET type COMMA type RBRACKET
    (36) type -> . NUMBER_TYPE
    (37) type -> . STRING_TYPE
    (38) type -> . BOOLEAN_TYPE
    (39) type -> . IDENTIFIER
    (40) type -> . type LBRACKET RBRACKET

    LBRACKET        shift and go to state 137
    NUMBER_TYPE     shift and go to state 138
    STRING_TYPE     shift and go to state 139
    BOOLEAN_TYPE    shift and go to state 140
    IDENTIFIER      shift and go to state 135

    type                           shift and go to state 190

state 178

    (30) parameters -> IDENTIFIER COLON type .
    (31) parameters -> IDENTIFIER COLON type . COMMA parameters
    (40) type -> type . LBRACKET RBRACKET

    RPAREN          reduce using rule 30 (parameters -> IDENTIFIER COLON type .)
    COMMA           shift and go to state 191
    LBRACKET        shift and go to state 173


state 179

    (29) function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON . type LBRACE body_function RBRACE
    (34) type -> . LBRACKET type COMMA type RBRACKET
    (36) type -> . NUMBER_TYPE
    (37) type -> . STRING_TYPE
    (38) type -> . BOOLEAN_TYPE
    (39) type -> . IDENTIFIER
    (40) type -> . type LBRACKET RBRACKET

    LBRACKET        shift and go to state 137
    NUMBER_TYPE     shift and go to state 138
    STRING_TYPE     shift and go to state 139
    BOOLEAN_TYPE    shift and go to state 140
    IDENTIFIER      shift and go to state 135

    type                           shift and go to state 192

state 180

    (100) function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN . ARROW LBRACE body_function RBRACE SEMICOLON

    ARROW           shift and go to state 193


state 181

    (80) controlEstructure -> IF LPAREN expression RPAREN statement ELSE . statement
    (81) controlEstructure -> IF LPAREN expression RPAREN statement ELSE . IF LPAREN expression RPAREN statement
    (82) controlEstructure -> IF LPAREN expression RPAREN statement ELSE . IF LPAREN expression RPAREN statement ELSE statement
    (83) statement -> . LBRACE instruction_list RBRACE
    (84) statement -> . letAssignment
    (85) statement -> . declaracion
    (86) statement -> . function
    (87) statement -> . consolelog
    (88) statement -> . expression SEMICOLON
    (89) statement -> . controlEstructure
    (90) statement -> . RETURN expression SEMICOLON
    (91) statement -> . forEstructure
    (92) statement -> . varAssignment
    (11) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (12) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (13) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (29) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (100) function -> . CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (78) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression
    (79) controlEstructure -> . IF LPAREN expression RPAREN statement
    (80) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (81) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (82) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (97) controlEstructure -> . WHILE LPAREN expression RPAREN statement
    (18) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (98) varAssignment -> . VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
    (99) varAssignment -> . VAR IDENTIFIER EQUAL expression SEMICOLON

    IF              shift and go to state 194
    LBRACE          shift and go to state 16
    RETURN          shift and go to state 21
    LET             shift and go to state 11
    FUNCTION        shift and go to state 14
    CONST           shift and go to state 17
    CONSOLE         shift and go to state 32
    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    VAR             shift and go to state 33

    expression                     shift and go to state 73
    statement                      shift and go to state 195
    letAssignment                  shift and go to state 69
    declaracion                    shift and go to state 70
    function                       shift and go to state 71
    consolelog                     shift and go to state 72
    controlEstructure              shift and go to state 74
    forEstructure                  shift and go to state 75
    varAssignment                  shift and go to state 22

state 182

    (18) forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON . for_update RPAREN statement
    (23) for_update -> . expression
    (24) for_update -> . expression PLUSPLUS
    (25) for_update -> . expression MINUSMINUS
    (26) for_update -> . PLUSPLUS expression
    (27) for_update -> . MINUSMINUS expression
    (28) for_update -> . empty
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression
    (96) empty -> .

    PLUSPLUS        shift and go to state 198
    MINUSMINUS      shift and go to state 199
    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    RPAREN          reduce using rule 96 (empty -> .)

    expression                     shift and go to state 196
    for_update                     shift and go to state 197
    empty                          shift and go to state 200

state 183

    (19) for_init -> LET IDENTIFIER EQUAL expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

    SEMICOLON       reduce using rule 19 (for_init -> LET IDENTIFIER EQUAL expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60


state 184

    (20) for_init -> LET IDENTIFIER COLON type . EQUAL expression
    (40) type -> type . LBRACKET RBRACKET

    EQUAL           shift and go to state 201
    LBRACKET        shift and go to state 173


state 185

    (78) consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 202


state 186

    (98) varAssignment -> VAR IDENTIFIER COLON type EQUAL expression . SEMICOLON
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

    SEMICOLON       shift and go to state 203
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60


state 187

    (40) type -> type LBRACKET RBRACKET .

    EQUAL           reduce using rule 40 (type -> type LBRACKET RBRACKET .)
    LBRACKET        reduce using rule 40 (type -> type LBRACKET RBRACKET .)
    COMMA           reduce using rule 40 (type -> type LBRACKET RBRACKET .)
    RPAREN          reduce using rule 40 (type -> type LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 40 (type -> type LBRACKET RBRACKET .)
    LBRACE          reduce using rule 40 (type -> type LBRACKET RBRACKET .)


state 188

    (11) letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .

    LET             reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    FUNCTION        reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    CONST           reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    IF              reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    WHILE           reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    FOR             reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    LBRACE          reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    RETURN          reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    LBRACKET        reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    PROMPT          reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    NOT             reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    LPAREN          reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    IDENTIFIER      reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    NUMBER          reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    FLOAT           reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    STRING          reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    TRUE            reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    FALSE           reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    PLUSPLUS        reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    MINUSMINUS      reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    CONSOLE         reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    VAR             reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    $end            reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    RBRACE          reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    ELSE            reduce using rule 11 (letAssignment -> LET IDENTIFIER COLON type EQUAL expression SEMICOLON .)


state 189

    (13) declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL . LBRACKET lista_expresiones_opt RBRACKET SEMICOLON

    LBRACKET        shift and go to state 204


state 190

    (34) type -> LBRACKET type COMMA type . RBRACKET
    (40) type -> type . LBRACKET RBRACKET

    RBRACKET        shift and go to state 205
    LBRACKET        shift and go to state 173


state 191

    (31) parameters -> IDENTIFIER COLON type COMMA . parameters
    (30) parameters -> . IDENTIFIER COLON type
    (31) parameters -> . IDENTIFIER COLON type COMMA parameters
    (32) parameters -> . empty
    (96) empty -> .

    IDENTIFIER      shift and go to state 145
    RPAREN          reduce using rule 96 (empty -> .)

    parameters                     shift and go to state 206
    empty                          shift and go to state 147

state 192

    (29) function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type . LBRACE body_function RBRACE
    (40) type -> type . LBRACKET RBRACKET

    LBRACE          shift and go to state 207
    LBRACKET        shift and go to state 173


state 193

    (100) function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW . LBRACE body_function RBRACE SEMICOLON

    LBRACE          shift and go to state 208


state 194

    (81) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF . LPAREN expression RPAREN statement
    (82) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF . LPAREN expression RPAREN statement ELSE statement
    (79) controlEstructure -> IF . LPAREN expression RPAREN statement
    (80) controlEstructure -> IF . LPAREN expression RPAREN statement ELSE statement
    (81) controlEstructure -> IF . LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (82) controlEstructure -> IF . LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement

    LPAREN          shift and go to state 209


state 195

    (80) controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .

    LET             reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    FUNCTION        reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    CONST           reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    IF              reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    WHILE           reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    FOR             reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    LBRACE          reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    RETURN          reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    LBRACKET        reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    PROMPT          reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    NOT             reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    LPAREN          reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    IDENTIFIER      reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    NUMBER          reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    FLOAT           reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    STRING          reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    TRUE            reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    FALSE           reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    PLUSPLUS        reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    MINUSMINUS      reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    CONSOLE         reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    VAR             reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    $end            reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    RBRACE          reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSE            reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)


state 196

    (23) for_update -> expression .
    (24) for_update -> expression . PLUSPLUS
    (25) for_update -> expression . MINUSMINUS
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

    RPAREN          reduce using rule 23 (for_update -> expression .)
    PLUSPLUS        shift and go to state 210
    MINUSMINUS      shift and go to state 211
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58


state 197

    (18) forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update . RPAREN statement

    RPAREN          shift and go to state 212


state 198

    (26) for_update -> PLUSPLUS . expression
    (76) expression -> PLUSPLUS . expression
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 213

state 199

    (27) for_update -> MINUSMINUS . expression
    (77) expression -> MINUSMINUS . expression
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 214

state 200

    (28) for_update -> empty .

    RPAREN          reduce using rule 28 (for_update -> empty .)


state 201

    (20) for_init -> LET IDENTIFIER COLON type EQUAL . expression
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 215

state 202

    (78) consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .

    LET             reduce using rule 78 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 78 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    CONST           reduce using rule 78 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    IF              reduce using rule 78 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    WHILE           reduce using rule 78 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    FOR             reduce using rule 78 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    LBRACE          reduce using rule 78 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    RETURN          reduce using rule 78 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    LBRACKET        reduce using rule 78 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    PROMPT          reduce using rule 78 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    NOT             reduce using rule 78 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    LPAREN          reduce using rule 78 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 78 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    NUMBER          reduce using rule 78 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    FLOAT           reduce using rule 78 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    STRING          reduce using rule 78 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    TRUE            reduce using rule 78 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    FALSE           reduce using rule 78 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    PLUSPLUS        reduce using rule 78 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    MINUSMINUS      reduce using rule 78 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    CONSOLE         reduce using rule 78 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    VAR             reduce using rule 78 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    $end            reduce using rule 78 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    RBRACE          reduce using rule 78 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)
    ELSE            reduce using rule 78 (consolelog -> CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON .)


state 203

    (98) varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .

    LET             reduce using rule 98 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    FUNCTION        reduce using rule 98 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    CONST           reduce using rule 98 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    IF              reduce using rule 98 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    WHILE           reduce using rule 98 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    FOR             reduce using rule 98 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    LBRACE          reduce using rule 98 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    RETURN          reduce using rule 98 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    LBRACKET        reduce using rule 98 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    PROMPT          reduce using rule 98 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    NOT             reduce using rule 98 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    LPAREN          reduce using rule 98 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    IDENTIFIER      reduce using rule 98 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    NUMBER          reduce using rule 98 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    FLOAT           reduce using rule 98 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    STRING          reduce using rule 98 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    TRUE            reduce using rule 98 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    FALSE           reduce using rule 98 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    PLUSPLUS        reduce using rule 98 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    MINUSMINUS      reduce using rule 98 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    CONSOLE         reduce using rule 98 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    VAR             reduce using rule 98 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    $end            reduce using rule 98 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    RBRACE          reduce using rule 98 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)
    ELSE            reduce using rule 98 (varAssignment -> VAR IDENTIFIER COLON type EQUAL expression SEMICOLON .)


state 204

    (13) declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET . lista_expresiones_opt RBRACKET SEMICOLON
    (14) lista_expresiones_opt -> . lista_expresiones
    (15) lista_expresiones_opt -> . empty
    (16) lista_expresiones -> . expression
    (17) lista_expresiones -> . expression COMMA lista_expresiones
    (96) empty -> .
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    RBRACKET        reduce using rule 96 (empty -> .)
    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    lista_expresiones_opt          shift and go to state 216
    lista_expresiones              shift and go to state 113
    empty                          shift and go to state 114
    expression                     shift and go to state 115

state 205

    (34) type -> LBRACKET type COMMA type RBRACKET .

    EQUAL           reduce using rule 34 (type -> LBRACKET type COMMA type RBRACKET .)
    LBRACKET        reduce using rule 34 (type -> LBRACKET type COMMA type RBRACKET .)
    COMMA           reduce using rule 34 (type -> LBRACKET type COMMA type RBRACKET .)
    RPAREN          reduce using rule 34 (type -> LBRACKET type COMMA type RBRACKET .)
    RBRACKET        reduce using rule 34 (type -> LBRACKET type COMMA type RBRACKET .)
    LBRACE          reduce using rule 34 (type -> LBRACKET type COMMA type RBRACKET .)


state 206

    (31) parameters -> IDENTIFIER COLON type COMMA parameters .

    RPAREN          reduce using rule 31 (parameters -> IDENTIFIER COLON type COMMA parameters .)


state 207

    (29) function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE . body_function RBRACE
    (33) body_function -> . instruction_list
    (93) instruction_list -> . instruction_list statement
    (94) instruction_list -> . statement
    (95) instruction_list -> . empty
    (83) statement -> . LBRACE instruction_list RBRACE
    (84) statement -> . letAssignment
    (85) statement -> . declaracion
    (86) statement -> . function
    (87) statement -> . consolelog
    (88) statement -> . expression SEMICOLON
    (89) statement -> . controlEstructure
    (90) statement -> . RETURN expression SEMICOLON
    (91) statement -> . forEstructure
    (92) statement -> . varAssignment
    (96) empty -> .
    (11) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (12) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (13) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (29) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (100) function -> . CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (78) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression
    (79) controlEstructure -> . IF LPAREN expression RPAREN statement
    (80) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (81) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (82) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (97) controlEstructure -> . WHILE LPAREN expression RPAREN statement
    (18) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (98) varAssignment -> . VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
    (99) varAssignment -> . VAR IDENTIFIER EQUAL expression SEMICOLON

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for CONST resolved as shift
  ! shift/reduce conflict for CONSOLE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PROMPT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
    LBRACE          shift and go to state 16
    RETURN          shift and go to state 21
    RBRACE          reduce using rule 96 (empty -> .)
    LET             shift and go to state 11
    FUNCTION        shift and go to state 14
    CONST           shift and go to state 17
    CONSOLE         shift and go to state 32
    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    VAR             shift and go to state 33

  ! LBRACE          [ reduce using rule 96 (empty -> .) ]
  ! RETURN          [ reduce using rule 96 (empty -> .) ]
  ! LET             [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 96 (empty -> .) ]
  ! CONST           [ reduce using rule 96 (empty -> .) ]
  ! CONSOLE         [ reduce using rule 96 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 96 (empty -> .) ]
  ! PROMPT          [ reduce using rule 96 (empty -> .) ]
  ! NOT             [ reduce using rule 96 (empty -> .) ]
  ! LPAREN          [ reduce using rule 96 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 96 (empty -> .) ]
  ! NUMBER          [ reduce using rule 96 (empty -> .) ]
  ! FLOAT           [ reduce using rule 96 (empty -> .) ]
  ! STRING          [ reduce using rule 96 (empty -> .) ]
  ! TRUE            [ reduce using rule 96 (empty -> .) ]
  ! FALSE           [ reduce using rule 96 (empty -> .) ]
  ! PLUSPLUS        [ reduce using rule 96 (empty -> .) ]
  ! MINUSMINUS      [ reduce using rule 96 (empty -> .) ]
  ! IF              [ reduce using rule 96 (empty -> .) ]
  ! WHILE           [ reduce using rule 96 (empty -> .) ]
  ! FOR             [ reduce using rule 96 (empty -> .) ]
  ! VAR             [ reduce using rule 96 (empty -> .) ]

    body_function                  shift and go to state 217
    instruction_list               shift and go to state 218
    statement                      shift and go to state 67
    empty                          shift and go to state 68
    letAssignment                  shift and go to state 69
    declaracion                    shift and go to state 70
    function                       shift and go to state 71
    consolelog                     shift and go to state 72
    expression                     shift and go to state 73
    controlEstructure              shift and go to state 74
    forEstructure                  shift and go to state 75
    varAssignment                  shift and go to state 22

state 208

    (100) function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE . body_function RBRACE SEMICOLON
    (33) body_function -> . instruction_list
    (93) instruction_list -> . instruction_list statement
    (94) instruction_list -> . statement
    (95) instruction_list -> . empty
    (83) statement -> . LBRACE instruction_list RBRACE
    (84) statement -> . letAssignment
    (85) statement -> . declaracion
    (86) statement -> . function
    (87) statement -> . consolelog
    (88) statement -> . expression SEMICOLON
    (89) statement -> . controlEstructure
    (90) statement -> . RETURN expression SEMICOLON
    (91) statement -> . forEstructure
    (92) statement -> . varAssignment
    (96) empty -> .
    (11) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (12) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (13) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (29) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (100) function -> . CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (78) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression
    (79) controlEstructure -> . IF LPAREN expression RPAREN statement
    (80) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (81) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (82) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (97) controlEstructure -> . WHILE LPAREN expression RPAREN statement
    (18) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (98) varAssignment -> . VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
    (99) varAssignment -> . VAR IDENTIFIER EQUAL expression SEMICOLON

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for CONST resolved as shift
  ! shift/reduce conflict for CONSOLE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PROMPT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
    LBRACE          shift and go to state 16
    RETURN          shift and go to state 21
    RBRACE          reduce using rule 96 (empty -> .)
    LET             shift and go to state 11
    FUNCTION        shift and go to state 14
    CONST           shift and go to state 17
    CONSOLE         shift and go to state 32
    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    VAR             shift and go to state 33

  ! LBRACE          [ reduce using rule 96 (empty -> .) ]
  ! RETURN          [ reduce using rule 96 (empty -> .) ]
  ! LET             [ reduce using rule 96 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 96 (empty -> .) ]
  ! CONST           [ reduce using rule 96 (empty -> .) ]
  ! CONSOLE         [ reduce using rule 96 (empty -> .) ]
  ! LBRACKET        [ reduce using rule 96 (empty -> .) ]
  ! PROMPT          [ reduce using rule 96 (empty -> .) ]
  ! NOT             [ reduce using rule 96 (empty -> .) ]
  ! LPAREN          [ reduce using rule 96 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 96 (empty -> .) ]
  ! NUMBER          [ reduce using rule 96 (empty -> .) ]
  ! FLOAT           [ reduce using rule 96 (empty -> .) ]
  ! STRING          [ reduce using rule 96 (empty -> .) ]
  ! TRUE            [ reduce using rule 96 (empty -> .) ]
  ! FALSE           [ reduce using rule 96 (empty -> .) ]
  ! PLUSPLUS        [ reduce using rule 96 (empty -> .) ]
  ! MINUSMINUS      [ reduce using rule 96 (empty -> .) ]
  ! IF              [ reduce using rule 96 (empty -> .) ]
  ! WHILE           [ reduce using rule 96 (empty -> .) ]
  ! FOR             [ reduce using rule 96 (empty -> .) ]
  ! VAR             [ reduce using rule 96 (empty -> .) ]

    body_function                  shift and go to state 219
    instruction_list               shift and go to state 218
    statement                      shift and go to state 67
    empty                          shift and go to state 68
    letAssignment                  shift and go to state 69
    declaracion                    shift and go to state 70
    function                       shift and go to state 71
    consolelog                     shift and go to state 72
    expression                     shift and go to state 73
    controlEstructure              shift and go to state 74
    forEstructure                  shift and go to state 75
    varAssignment                  shift and go to state 22

state 209

    (81) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN . expression RPAREN statement
    (82) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN . expression RPAREN statement ELSE statement
    (79) controlEstructure -> IF LPAREN . expression RPAREN statement
    (80) controlEstructure -> IF LPAREN . expression RPAREN statement ELSE statement
    (81) controlEstructure -> IF LPAREN . expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (82) controlEstructure -> IF LPAREN . expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression

    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31

    expression                     shift and go to state 220

state 210

    (24) for_update -> expression PLUSPLUS .
    (74) expression -> expression PLUSPLUS .

  ! reduce/reduce conflict for RPAREN resolved using rule 24 (for_update -> expression PLUSPLUS .)
    RPAREN          reduce using rule 24 (for_update -> expression PLUSPLUS .)
    PLUSPLUS        reduce using rule 74 (expression -> expression PLUSPLUS .)
    MINUSMINUS      reduce using rule 74 (expression -> expression PLUSPLUS .)
    PLUS            reduce using rule 74 (expression -> expression PLUSPLUS .)
    MINUS           reduce using rule 74 (expression -> expression PLUSPLUS .)
    TIMES           reduce using rule 74 (expression -> expression PLUSPLUS .)
    DIV             reduce using rule 74 (expression -> expression PLUSPLUS .)
    MOD             reduce using rule 74 (expression -> expression PLUSPLUS .)
    PLUS_ASSIGN     reduce using rule 74 (expression -> expression PLUSPLUS .)
    MINUS_ASSIGN    reduce using rule 74 (expression -> expression PLUSPLUS .)
    MULT_ASSIGN     reduce using rule 74 (expression -> expression PLUSPLUS .)
    DIV_ASSIGN      reduce using rule 74 (expression -> expression PLUSPLUS .)
    MOD_ASSIGN      reduce using rule 74 (expression -> expression PLUSPLUS .)
    POT             reduce using rule 74 (expression -> expression PLUSPLUS .)
    AND             reduce using rule 74 (expression -> expression PLUSPLUS .)
    OR              reduce using rule 74 (expression -> expression PLUSPLUS .)
    EQ              reduce using rule 74 (expression -> expression PLUSPLUS .)
    NEQ             reduce using rule 74 (expression -> expression PLUSPLUS .)
    STRICT_EQ       reduce using rule 74 (expression -> expression PLUSPLUS .)
    STRICT_NEQ      reduce using rule 74 (expression -> expression PLUSPLUS .)
    LT              reduce using rule 74 (expression -> expression PLUSPLUS .)
    GT              reduce using rule 74 (expression -> expression PLUSPLUS .)
    LE              reduce using rule 74 (expression -> expression PLUSPLUS .)
    GE              reduce using rule 74 (expression -> expression PLUSPLUS .)
    DOT             reduce using rule 74 (expression -> expression PLUSPLUS .)
    LBRACKET        reduce using rule 74 (expression -> expression PLUSPLUS .)

  ! RPAREN          [ reduce using rule 74 (expression -> expression PLUSPLUS .) ]


state 211

    (25) for_update -> expression MINUSMINUS .
    (75) expression -> expression MINUSMINUS .

  ! reduce/reduce conflict for RPAREN resolved using rule 25 (for_update -> expression MINUSMINUS .)
    RPAREN          reduce using rule 25 (for_update -> expression MINUSMINUS .)
    PLUSPLUS        reduce using rule 75 (expression -> expression MINUSMINUS .)
    MINUSMINUS      reduce using rule 75 (expression -> expression MINUSMINUS .)
    PLUS            reduce using rule 75 (expression -> expression MINUSMINUS .)
    MINUS           reduce using rule 75 (expression -> expression MINUSMINUS .)
    TIMES           reduce using rule 75 (expression -> expression MINUSMINUS .)
    DIV             reduce using rule 75 (expression -> expression MINUSMINUS .)
    MOD             reduce using rule 75 (expression -> expression MINUSMINUS .)
    PLUS_ASSIGN     reduce using rule 75 (expression -> expression MINUSMINUS .)
    MINUS_ASSIGN    reduce using rule 75 (expression -> expression MINUSMINUS .)
    MULT_ASSIGN     reduce using rule 75 (expression -> expression MINUSMINUS .)
    DIV_ASSIGN      reduce using rule 75 (expression -> expression MINUSMINUS .)
    MOD_ASSIGN      reduce using rule 75 (expression -> expression MINUSMINUS .)
    POT             reduce using rule 75 (expression -> expression MINUSMINUS .)
    AND             reduce using rule 75 (expression -> expression MINUSMINUS .)
    OR              reduce using rule 75 (expression -> expression MINUSMINUS .)
    EQ              reduce using rule 75 (expression -> expression MINUSMINUS .)
    NEQ             reduce using rule 75 (expression -> expression MINUSMINUS .)
    STRICT_EQ       reduce using rule 75 (expression -> expression MINUSMINUS .)
    STRICT_NEQ      reduce using rule 75 (expression -> expression MINUSMINUS .)
    LT              reduce using rule 75 (expression -> expression MINUSMINUS .)
    GT              reduce using rule 75 (expression -> expression MINUSMINUS .)
    LE              reduce using rule 75 (expression -> expression MINUSMINUS .)
    GE              reduce using rule 75 (expression -> expression MINUSMINUS .)
    DOT             reduce using rule 75 (expression -> expression MINUSMINUS .)
    LBRACKET        reduce using rule 75 (expression -> expression MINUSMINUS .)

  ! RPAREN          [ reduce using rule 75 (expression -> expression MINUSMINUS .) ]


state 212

    (18) forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN . statement
    (83) statement -> . LBRACE instruction_list RBRACE
    (84) statement -> . letAssignment
    (85) statement -> . declaracion
    (86) statement -> . function
    (87) statement -> . consolelog
    (88) statement -> . expression SEMICOLON
    (89) statement -> . controlEstructure
    (90) statement -> . RETURN expression SEMICOLON
    (91) statement -> . forEstructure
    (92) statement -> . varAssignment
    (11) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (12) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (13) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (29) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (100) function -> . CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (78) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression
    (79) controlEstructure -> . IF LPAREN expression RPAREN statement
    (80) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (81) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (82) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (97) controlEstructure -> . WHILE LPAREN expression RPAREN statement
    (18) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (98) varAssignment -> . VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
    (99) varAssignment -> . VAR IDENTIFIER EQUAL expression SEMICOLON

    LBRACE          shift and go to state 16
    RETURN          shift and go to state 21
    LET             shift and go to state 11
    FUNCTION        shift and go to state 14
    CONST           shift and go to state 17
    CONSOLE         shift and go to state 32
    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    VAR             shift and go to state 33

    expression                     shift and go to state 73
    statement                      shift and go to state 221
    letAssignment                  shift and go to state 69
    declaracion                    shift and go to state 70
    function                       shift and go to state 71
    consolelog                     shift and go to state 72
    controlEstructure              shift and go to state 74
    forEstructure                  shift and go to state 75
    varAssignment                  shift and go to state 22

state 213

    (26) for_update -> PLUSPLUS expression .
    (76) expression -> PLUSPLUS expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

  ! reduce/reduce conflict for RPAREN resolved using rule 26 (for_update -> PLUSPLUS expression .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    RPAREN          reduce using rule 26 (for_update -> PLUSPLUS expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60

  ! PLUSPLUS        [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! MINUSMINUS      [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! PLUS            [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! MINUS           [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! TIMES           [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! DIV             [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! MOD             [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! POT             [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! AND             [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! OR              [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! EQ              [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! NEQ             [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! STRICT_EQ       [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! STRICT_NEQ      [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! LT              [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! GT              [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! LE              [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! GE              [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! DOT             [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! LBRACKET        [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]
  ! RPAREN          [ reduce using rule 76 (expression -> PLUSPLUS expression .) ]


state 214

    (27) for_update -> MINUSMINUS expression .
    (77) expression -> MINUSMINUS expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

  ! reduce/reduce conflict for RPAREN resolved using rule 27 (for_update -> MINUSMINUS expression .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MINUS_ASSIGN resolved as shift
  ! shift/reduce conflict for MULT_ASSIGN resolved as shift
  ! shift/reduce conflict for DIV_ASSIGN resolved as shift
  ! shift/reduce conflict for MOD_ASSIGN resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICT_EQ resolved as shift
  ! shift/reduce conflict for STRICT_NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    RPAREN          reduce using rule 27 (for_update -> MINUSMINUS expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60

  ! PLUSPLUS        [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! MINUSMINUS      [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! PLUS            [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! MINUS           [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! TIMES           [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! DIV             [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! MOD             [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! PLUS_ASSIGN     [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! MINUS_ASSIGN    [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! MULT_ASSIGN     [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! DIV_ASSIGN      [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! MOD_ASSIGN      [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! POT             [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! AND             [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! OR              [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! EQ              [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! NEQ             [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! STRICT_EQ       [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! STRICT_NEQ      [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! LT              [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! GT              [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! LE              [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! GE              [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! DOT             [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! LBRACKET        [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]
  ! RPAREN          [ reduce using rule 77 (expression -> MINUSMINUS expression .) ]


state 215

    (20) for_init -> LET IDENTIFIER COLON type EQUAL expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

    SEMICOLON       reduce using rule 20 (for_init -> LET IDENTIFIER COLON type EQUAL expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60


state 216

    (13) declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt . RBRACKET SEMICOLON

    RBRACKET        shift and go to state 222


state 217

    (29) function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function . RBRACE

    RBRACE          shift and go to state 223


state 218

    (33) body_function -> instruction_list .
    (93) instruction_list -> instruction_list . statement
    (83) statement -> . LBRACE instruction_list RBRACE
    (84) statement -> . letAssignment
    (85) statement -> . declaracion
    (86) statement -> . function
    (87) statement -> . consolelog
    (88) statement -> . expression SEMICOLON
    (89) statement -> . controlEstructure
    (90) statement -> . RETURN expression SEMICOLON
    (91) statement -> . forEstructure
    (92) statement -> . varAssignment
    (11) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (12) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (13) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (29) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (100) function -> . CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (78) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression
    (79) controlEstructure -> . IF LPAREN expression RPAREN statement
    (80) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (81) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (82) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (97) controlEstructure -> . WHILE LPAREN expression RPAREN statement
    (18) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (98) varAssignment -> . VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
    (99) varAssignment -> . VAR IDENTIFIER EQUAL expression SEMICOLON

    RBRACE          reduce using rule 33 (body_function -> instruction_list .)
    LBRACE          shift and go to state 16
    RETURN          shift and go to state 21
    LET             shift and go to state 11
    FUNCTION        shift and go to state 14
    CONST           shift and go to state 17
    CONSOLE         shift and go to state 32
    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    VAR             shift and go to state 33

    statement                      shift and go to state 120
    letAssignment                  shift and go to state 69
    declaracion                    shift and go to state 70
    function                       shift and go to state 71
    consolelog                     shift and go to state 72
    expression                     shift and go to state 73
    controlEstructure              shift and go to state 74
    forEstructure                  shift and go to state 75
    varAssignment                  shift and go to state 22

state 219

    (100) function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function . RBRACE SEMICOLON

    RBRACE          shift and go to state 224


state 220

    (81) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression . RPAREN statement
    (82) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression . RPAREN statement ELSE statement
    (79) controlEstructure -> IF LPAREN expression . RPAREN statement
    (80) controlEstructure -> IF LPAREN expression . RPAREN statement ELSE statement
    (81) controlEstructure -> IF LPAREN expression . RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (82) controlEstructure -> IF LPAREN expression . RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . DIV expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . PLUS_ASSIGN expression
    (47) expression -> expression . MINUS_ASSIGN expression
    (48) expression -> expression . MULT_ASSIGN expression
    (49) expression -> expression . DIV_ASSIGN expression
    (50) expression -> expression . MOD_ASSIGN expression
    (51) expression -> expression . POT expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NEQ expression
    (56) expression -> expression . STRICT_EQ expression
    (57) expression -> expression . STRICT_NEQ expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . LE expression
    (61) expression -> expression . GE expression
    (65) expression -> expression . DOT IDENTIFIER
    (66) expression -> expression . LBRACKET expression RBRACKET
    (74) expression -> expression . PLUSPLUS
    (75) expression -> expression . MINUSMINUS

    RPAREN          shift and go to state 225
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIV             shift and go to state 39
    MOD             shift and go to state 40
    PLUS_ASSIGN     shift and go to state 41
    MINUS_ASSIGN    shift and go to state 42
    MULT_ASSIGN     shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    POT             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48
    EQ              shift and go to state 49
    NEQ             shift and go to state 50
    STRICT_EQ       shift and go to state 51
    STRICT_NEQ      shift and go to state 52
    LT              shift and go to state 53
    GT              shift and go to state 54
    LE              shift and go to state 55
    GE              shift and go to state 56
    DOT             shift and go to state 57
    LBRACKET        shift and go to state 58
    PLUSPLUS        shift and go to state 59
    MINUSMINUS      shift and go to state 60


state 221

    (18) forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .

    LET             reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    FUNCTION        reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    CONST           reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    IF              reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    WHILE           reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    FOR             reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    LBRACE          reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    RETURN          reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    LBRACKET        reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    PROMPT          reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    NOT             reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    LPAREN          reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    IDENTIFIER      reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    NUMBER          reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    FLOAT           reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    STRING          reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    TRUE            reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    FALSE           reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    PLUSPLUS        reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    MINUSMINUS      reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    CONSOLE         reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    VAR             reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    $end            reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    RBRACE          reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)
    ELSE            reduce using rule 18 (forEstructure -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement .)


state 222

    (13) declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 226


state 223

    (29) function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .

    LET             reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    FUNCTION        reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    CONST           reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    IF              reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    WHILE           reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    FOR             reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    LBRACE          reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    RETURN          reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    LBRACKET        reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    PROMPT          reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    NOT             reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    LPAREN          reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    IDENTIFIER      reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    NUMBER          reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    FLOAT           reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    STRING          reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    TRUE            reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    FALSE           reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    PLUSPLUS        reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    MINUSMINUS      reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    CONSOLE         reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    VAR             reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    $end            reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    RBRACE          reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)
    ELSE            reduce using rule 29 (function -> FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE .)


state 224

    (100) function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 227


state 225

    (81) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN . statement
    (82) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN . statement ELSE statement
    (79) controlEstructure -> IF LPAREN expression RPAREN . statement
    (80) controlEstructure -> IF LPAREN expression RPAREN . statement ELSE statement
    (81) controlEstructure -> IF LPAREN expression RPAREN . statement ELSE IF LPAREN expression RPAREN statement
    (82) controlEstructure -> IF LPAREN expression RPAREN . statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (83) statement -> . LBRACE instruction_list RBRACE
    (84) statement -> . letAssignment
    (85) statement -> . declaracion
    (86) statement -> . function
    (87) statement -> . consolelog
    (88) statement -> . expression SEMICOLON
    (89) statement -> . controlEstructure
    (90) statement -> . RETURN expression SEMICOLON
    (91) statement -> . forEstructure
    (92) statement -> . varAssignment
    (11) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (12) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (13) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (29) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (100) function -> . CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (78) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression
    (79) controlEstructure -> . IF LPAREN expression RPAREN statement
    (80) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (81) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (82) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (97) controlEstructure -> . WHILE LPAREN expression RPAREN statement
    (18) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (98) varAssignment -> . VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
    (99) varAssignment -> . VAR IDENTIFIER EQUAL expression SEMICOLON

    LBRACE          shift and go to state 16
    RETURN          shift and go to state 21
    LET             shift and go to state 11
    FUNCTION        shift and go to state 14
    CONST           shift and go to state 17
    CONSOLE         shift and go to state 32
    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    VAR             shift and go to state 33

    expression                     shift and go to state 73
    statement                      shift and go to state 228
    letAssignment                  shift and go to state 69
    declaracion                    shift and go to state 70
    function                       shift and go to state 71
    consolelog                     shift and go to state 72
    controlEstructure              shift and go to state 74
    forEstructure                  shift and go to state 75
    varAssignment                  shift and go to state 22

state 226

    (13) declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .

    LET             reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    FUNCTION        reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    CONST           reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    IF              reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    WHILE           reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    FOR             reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    LBRACE          reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    RETURN          reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    LBRACKET        reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    PROMPT          reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    NOT             reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    LPAREN          reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    IDENTIFIER      reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    NUMBER          reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    FLOAT           reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    STRING          reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    TRUE            reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    FALSE           reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    PLUSPLUS        reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    MINUSMINUS      reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    CONSOLE         reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    VAR             reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    $end            reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    RBRACE          reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)
    ELSE            reduce using rule 13 (declaracion -> LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON .)


state 227

    (100) function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .

    LET             reduce using rule 100 (function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    FUNCTION        reduce using rule 100 (function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    CONST           reduce using rule 100 (function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    IF              reduce using rule 100 (function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    WHILE           reduce using rule 100 (function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    FOR             reduce using rule 100 (function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    LBRACE          reduce using rule 100 (function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    RETURN          reduce using rule 100 (function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    LBRACKET        reduce using rule 100 (function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    PROMPT          reduce using rule 100 (function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    NOT             reduce using rule 100 (function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    LPAREN          reduce using rule 100 (function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    IDENTIFIER      reduce using rule 100 (function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    NUMBER          reduce using rule 100 (function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    FLOAT           reduce using rule 100 (function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    STRING          reduce using rule 100 (function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    TRUE            reduce using rule 100 (function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    FALSE           reduce using rule 100 (function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    PLUSPLUS        reduce using rule 100 (function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    MINUSMINUS      reduce using rule 100 (function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    CONSOLE         reduce using rule 100 (function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    VAR             reduce using rule 100 (function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    $end            reduce using rule 100 (function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    RBRACE          reduce using rule 100 (function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)
    ELSE            reduce using rule 100 (function -> CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON .)


state 228

    (81) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .
    (82) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement . ELSE statement
    (79) controlEstructure -> IF LPAREN expression RPAREN statement .
    (80) controlEstructure -> IF LPAREN expression RPAREN statement . ELSE statement
    (81) controlEstructure -> IF LPAREN expression RPAREN statement . ELSE IF LPAREN expression RPAREN statement
    (82) controlEstructure -> IF LPAREN expression RPAREN statement . ELSE IF LPAREN expression RPAREN statement ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! reduce/reduce conflict for LET resolved using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for CONST resolved using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for IF resolved using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for WHILE resolved using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for FOR resolved using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for LBRACE resolved using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for RETURN resolved using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for PROMPT resolved using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for NOT resolved using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for LPAREN resolved using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for NUMBER resolved using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for FLOAT resolved using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for STRING resolved using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for TRUE resolved using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for FALSE resolved using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for PLUSPLUS resolved using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for MINUSMINUS resolved using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for VAR resolved using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for $end resolved using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
  ! reduce/reduce conflict for RBRACE resolved using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 229
    LET             reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    FUNCTION        reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    CONST           reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    IF              reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    FOR             reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    LBRACKET        reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    PROMPT          reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    NOT             reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    IDENTIFIER      reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    NUMBER          reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    FLOAT           reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    STRING          reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    TRUE            reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    FALSE           reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    PLUSPLUS        reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    MINUSMINUS      reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    CONSOLE         reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    VAR             reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    $end            reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .)

  ! LET             [ reduce using rule 81 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! FUNCTION        [ reduce using rule 81 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! CONST           [ reduce using rule 81 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! IF              [ reduce using rule 81 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! WHILE           [ reduce using rule 81 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! FOR             [ reduce using rule 81 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! LBRACE          [ reduce using rule 81 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! RETURN          [ reduce using rule 81 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! LBRACKET        [ reduce using rule 81 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! PROMPT          [ reduce using rule 81 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! NOT             [ reduce using rule 81 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! LPAREN          [ reduce using rule 81 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! IDENTIFIER      [ reduce using rule 81 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! NUMBER          [ reduce using rule 81 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! FLOAT           [ reduce using rule 81 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! STRING          [ reduce using rule 81 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! TRUE            [ reduce using rule 81 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! FALSE           [ reduce using rule 81 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! PLUSPLUS        [ reduce using rule 81 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! MINUSMINUS      [ reduce using rule 81 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! CONSOLE         [ reduce using rule 81 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! VAR             [ reduce using rule 81 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! $end            [ reduce using rule 81 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! RBRACE          [ reduce using rule 81 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! ELSE            [ reduce using rule 81 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement .) ]
  ! ELSE            [ reduce using rule 79 (controlEstructure -> IF LPAREN expression RPAREN statement .) ]


state 229

    (82) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE . statement
    (80) controlEstructure -> IF LPAREN expression RPAREN statement ELSE . statement
    (81) controlEstructure -> IF LPAREN expression RPAREN statement ELSE . IF LPAREN expression RPAREN statement
    (82) controlEstructure -> IF LPAREN expression RPAREN statement ELSE . IF LPAREN expression RPAREN statement ELSE statement
    (83) statement -> . LBRACE instruction_list RBRACE
    (84) statement -> . letAssignment
    (85) statement -> . declaracion
    (86) statement -> . function
    (87) statement -> . consolelog
    (88) statement -> . expression SEMICOLON
    (89) statement -> . controlEstructure
    (90) statement -> . RETURN expression SEMICOLON
    (91) statement -> . forEstructure
    (92) statement -> . varAssignment
    (11) letAssignment -> . LET IDENTIFIER COLON type EQUAL expression SEMICOLON
    (12) letAssignment -> . LET IDENTIFIER EQUAL expression SEMICOLON
    (13) declaracion -> . LET IDENTIFIER COLON type LBRACKET RBRACKET EQUAL LBRACKET lista_expresiones_opt RBRACKET SEMICOLON
    (29) function -> . FUNCTION IDENTIFIER LPAREN parameters RPAREN COLON type LBRACE body_function RBRACE
    (100) function -> . CONST IDENTIFIER EQUAL LPAREN parameters RPAREN ARROW LBRACE body_function RBRACE SEMICOLON
    (78) consolelog -> . CONSOLE DOT LOG LPAREN lista_expresiones_opt RPAREN SEMICOLON
    (35) expression -> . LBRACKET expression COMMA expression RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression DIV expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression PLUS_ASSIGN expression
    (47) expression -> . expression MINUS_ASSIGN expression
    (48) expression -> . expression MULT_ASSIGN expression
    (49) expression -> . expression DIV_ASSIGN expression
    (50) expression -> . expression MOD_ASSIGN expression
    (51) expression -> . expression POT expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NEQ expression
    (56) expression -> . expression STRICT_EQ expression
    (57) expression -> . expression STRICT_NEQ expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression LE expression
    (61) expression -> . expression GE expression
    (62) expression -> . PROMPT LPAREN STRING RPAREN
    (63) expression -> . NOT expression
    (64) expression -> . LPAREN expression RPAREN
    (65) expression -> . expression DOT IDENTIFIER
    (66) expression -> . expression LBRACKET expression RBRACKET
    (67) expression -> . IDENTIFIER LPAREN lista_expresiones_opt RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . IDENTIFIER
    (72) expression -> . TRUE
    (73) expression -> . FALSE
    (74) expression -> . expression PLUSPLUS
    (75) expression -> . expression MINUSMINUS
    (76) expression -> . PLUSPLUS expression
    (77) expression -> . MINUSMINUS expression
    (79) controlEstructure -> . IF LPAREN expression RPAREN statement
    (80) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE statement
    (81) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement
    (82) controlEstructure -> . IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement
    (97) controlEstructure -> . WHILE LPAREN expression RPAREN statement
    (18) forEstructure -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN statement
    (98) varAssignment -> . VAR IDENTIFIER COLON type EQUAL expression SEMICOLON
    (99) varAssignment -> . VAR IDENTIFIER EQUAL expression SEMICOLON

    IF              shift and go to state 194
    LBRACE          shift and go to state 16
    RETURN          shift and go to state 21
    LET             shift and go to state 11
    FUNCTION        shift and go to state 14
    CONST           shift and go to state 17
    CONSOLE         shift and go to state 32
    LBRACKET        shift and go to state 13
    PROMPT          shift and go to state 23
    NOT             shift and go to state 25
    LPAREN          shift and go to state 15
    IDENTIFIER      shift and go to state 12
    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 24
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    PLUSPLUS        shift and go to state 30
    MINUSMINUS      shift and go to state 31
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    VAR             shift and go to state 33

    expression                     shift and go to state 73
    statement                      shift and go to state 230
    letAssignment                  shift and go to state 69
    declaracion                    shift and go to state 70
    function                       shift and go to state 71
    consolelog                     shift and go to state 72
    controlEstructure              shift and go to state 74
    forEstructure                  shift and go to state 75
    varAssignment                  shift and go to state 22

state 230

    (82) controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .
    (80) controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .

  ! reduce/reduce conflict for ELSE resolved using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for LET resolved using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for CONST resolved using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for IF resolved using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for WHILE resolved using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for FOR resolved using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for LBRACE resolved using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for RETURN resolved using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for PROMPT resolved using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for NOT resolved using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for LPAREN resolved using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for NUMBER resolved using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for FLOAT resolved using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for STRING resolved using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for TRUE resolved using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for FALSE resolved using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for PLUSPLUS resolved using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for MINUSMINUS resolved using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for VAR resolved using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for $end resolved using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
  ! reduce/reduce conflict for RBRACE resolved using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSE            reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    LET             reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    FUNCTION        reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    CONST           reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    IF              reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    WHILE           reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    FOR             reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    LBRACE          reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    RETURN          reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    LBRACKET        reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    PROMPT          reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    NOT             reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    LPAREN          reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    IDENTIFIER      reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    NUMBER          reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    FLOAT           reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    STRING          reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    TRUE            reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    FALSE           reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    PLUSPLUS        reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    MINUSMINUS      reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    CONSOLE         reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    VAR             reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    $end            reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)
    RBRACE          reduce using rule 80 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement .)

  ! LET             [ reduce using rule 82 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! FUNCTION        [ reduce using rule 82 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! CONST           [ reduce using rule 82 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! IF              [ reduce using rule 82 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! WHILE           [ reduce using rule 82 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! FOR             [ reduce using rule 82 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! LBRACE          [ reduce using rule 82 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! RETURN          [ reduce using rule 82 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! LBRACKET        [ reduce using rule 82 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! PROMPT          [ reduce using rule 82 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! NOT             [ reduce using rule 82 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! LPAREN          [ reduce using rule 82 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! IDENTIFIER      [ reduce using rule 82 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! NUMBER          [ reduce using rule 82 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! FLOAT           [ reduce using rule 82 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! STRING          [ reduce using rule 82 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! TRUE            [ reduce using rule 82 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! FALSE           [ reduce using rule 82 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! PLUSPLUS        [ reduce using rule 82 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! MINUSMINUS      [ reduce using rule 82 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! CONSOLE         [ reduce using rule 82 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! VAR             [ reduce using rule 82 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! $end            [ reduce using rule 82 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! RBRACE          [ reduce using rule 82 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]
  ! ELSE            [ reduce using rule 82 (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement .) ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LBRACE in state 16 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 16 resolved as shift
WARNING: shift/reduce conflict for LET in state 16 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 16 resolved as shift
WARNING: shift/reduce conflict for CONST in state 16 resolved as shift
WARNING: shift/reduce conflict for CONSOLE in state 16 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 16 resolved as shift
WARNING: shift/reduce conflict for PROMPT in state 16 resolved as shift
WARNING: shift/reduce conflict for NOT in state 16 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 16 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 16 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 16 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 16 resolved as shift
WARNING: shift/reduce conflict for STRING in state 16 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 16 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 16 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 16 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 16 resolved as shift
WARNING: shift/reduce conflict for IF in state 16 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 16 resolved as shift
WARNING: shift/reduce conflict for FOR in state 16 resolved as shift
WARNING: shift/reduce conflict for VAR in state 16 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 82 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 82 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 82 resolved as shift
WARNING: shift/reduce conflict for DIV in state 82 resolved as shift
WARNING: shift/reduce conflict for MOD in state 82 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 82 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 82 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 82 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 82 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 82 resolved as shift
WARNING: shift/reduce conflict for POT in state 82 resolved as shift
WARNING: shift/reduce conflict for AND in state 82 resolved as shift
WARNING: shift/reduce conflict for OR in state 82 resolved as shift
WARNING: shift/reduce conflict for EQ in state 82 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 82 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 82 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 82 resolved as shift
WARNING: shift/reduce conflict for LT in state 82 resolved as shift
WARNING: shift/reduce conflict for GT in state 82 resolved as shift
WARNING: shift/reduce conflict for LE in state 82 resolved as shift
WARNING: shift/reduce conflict for GE in state 82 resolved as shift
WARNING: shift/reduce conflict for DOT in state 82 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 82 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 82 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 82 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 83 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 83 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 83 resolved as shift
WARNING: shift/reduce conflict for DIV in state 83 resolved as shift
WARNING: shift/reduce conflict for MOD in state 83 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 83 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 83 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 83 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 83 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 83 resolved as shift
WARNING: shift/reduce conflict for POT in state 83 resolved as shift
WARNING: shift/reduce conflict for AND in state 83 resolved as shift
WARNING: shift/reduce conflict for OR in state 83 resolved as shift
WARNING: shift/reduce conflict for EQ in state 83 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 83 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 83 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 83 resolved as shift
WARNING: shift/reduce conflict for LT in state 83 resolved as shift
WARNING: shift/reduce conflict for GT in state 83 resolved as shift
WARNING: shift/reduce conflict for LE in state 83 resolved as shift
WARNING: shift/reduce conflict for GE in state 83 resolved as shift
WARNING: shift/reduce conflict for DOT in state 83 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 83 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 83 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 83 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 84 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 84 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 84 resolved as shift
WARNING: shift/reduce conflict for DIV in state 84 resolved as shift
WARNING: shift/reduce conflict for MOD in state 84 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 84 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 84 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 84 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 84 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 84 resolved as shift
WARNING: shift/reduce conflict for POT in state 84 resolved as shift
WARNING: shift/reduce conflict for AND in state 84 resolved as shift
WARNING: shift/reduce conflict for OR in state 84 resolved as shift
WARNING: shift/reduce conflict for EQ in state 84 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 84 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 84 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 84 resolved as shift
WARNING: shift/reduce conflict for LT in state 84 resolved as shift
WARNING: shift/reduce conflict for GT in state 84 resolved as shift
WARNING: shift/reduce conflict for LE in state 84 resolved as shift
WARNING: shift/reduce conflict for GE in state 84 resolved as shift
WARNING: shift/reduce conflict for DOT in state 84 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 84 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 84 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 84 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 87 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 87 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 87 resolved as shift
WARNING: shift/reduce conflict for DIV in state 87 resolved as shift
WARNING: shift/reduce conflict for MOD in state 87 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 87 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 87 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 87 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 87 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 87 resolved as shift
WARNING: shift/reduce conflict for POT in state 87 resolved as shift
WARNING: shift/reduce conflict for AND in state 87 resolved as shift
WARNING: shift/reduce conflict for OR in state 87 resolved as shift
WARNING: shift/reduce conflict for EQ in state 87 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 87 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 87 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 87 resolved as shift
WARNING: shift/reduce conflict for LT in state 87 resolved as shift
WARNING: shift/reduce conflict for GT in state 87 resolved as shift
WARNING: shift/reduce conflict for LE in state 87 resolved as shift
WARNING: shift/reduce conflict for GE in state 87 resolved as shift
WARNING: shift/reduce conflict for DOT in state 87 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 87 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 87 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 87 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 88 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 88 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 88 resolved as shift
WARNING: shift/reduce conflict for DIV in state 88 resolved as shift
WARNING: shift/reduce conflict for MOD in state 88 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 88 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 88 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 88 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 88 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 88 resolved as shift
WARNING: shift/reduce conflict for POT in state 88 resolved as shift
WARNING: shift/reduce conflict for AND in state 88 resolved as shift
WARNING: shift/reduce conflict for OR in state 88 resolved as shift
WARNING: shift/reduce conflict for EQ in state 88 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 88 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 88 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 88 resolved as shift
WARNING: shift/reduce conflict for LT in state 88 resolved as shift
WARNING: shift/reduce conflict for GT in state 88 resolved as shift
WARNING: shift/reduce conflict for LE in state 88 resolved as shift
WARNING: shift/reduce conflict for GE in state 88 resolved as shift
WARNING: shift/reduce conflict for DOT in state 88 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 88 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 88 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 88 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 89 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 89 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 89 resolved as shift
WARNING: shift/reduce conflict for DIV in state 89 resolved as shift
WARNING: shift/reduce conflict for MOD in state 89 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 89 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 89 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 89 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 89 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 89 resolved as shift
WARNING: shift/reduce conflict for POT in state 89 resolved as shift
WARNING: shift/reduce conflict for AND in state 89 resolved as shift
WARNING: shift/reduce conflict for OR in state 89 resolved as shift
WARNING: shift/reduce conflict for EQ in state 89 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 89 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 89 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 89 resolved as shift
WARNING: shift/reduce conflict for LT in state 89 resolved as shift
WARNING: shift/reduce conflict for GT in state 89 resolved as shift
WARNING: shift/reduce conflict for LE in state 89 resolved as shift
WARNING: shift/reduce conflict for GE in state 89 resolved as shift
WARNING: shift/reduce conflict for DOT in state 89 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 89 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 89 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 89 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 90 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 90 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 90 resolved as shift
WARNING: shift/reduce conflict for DIV in state 90 resolved as shift
WARNING: shift/reduce conflict for MOD in state 90 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 90 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 90 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 90 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 90 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 90 resolved as shift
WARNING: shift/reduce conflict for POT in state 90 resolved as shift
WARNING: shift/reduce conflict for AND in state 90 resolved as shift
WARNING: shift/reduce conflict for OR in state 90 resolved as shift
WARNING: shift/reduce conflict for EQ in state 90 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 90 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 90 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 90 resolved as shift
WARNING: shift/reduce conflict for LT in state 90 resolved as shift
WARNING: shift/reduce conflict for GT in state 90 resolved as shift
WARNING: shift/reduce conflict for LE in state 90 resolved as shift
WARNING: shift/reduce conflict for GE in state 90 resolved as shift
WARNING: shift/reduce conflict for DOT in state 90 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 90 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 90 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 90 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 91 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 91 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 91 resolved as shift
WARNING: shift/reduce conflict for DIV in state 91 resolved as shift
WARNING: shift/reduce conflict for MOD in state 91 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 91 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 91 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 91 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 91 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 91 resolved as shift
WARNING: shift/reduce conflict for POT in state 91 resolved as shift
WARNING: shift/reduce conflict for AND in state 91 resolved as shift
WARNING: shift/reduce conflict for OR in state 91 resolved as shift
WARNING: shift/reduce conflict for EQ in state 91 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 91 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 91 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 91 resolved as shift
WARNING: shift/reduce conflict for LT in state 91 resolved as shift
WARNING: shift/reduce conflict for GT in state 91 resolved as shift
WARNING: shift/reduce conflict for LE in state 91 resolved as shift
WARNING: shift/reduce conflict for GE in state 91 resolved as shift
WARNING: shift/reduce conflict for DOT in state 91 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 91 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 91 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 91 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 92 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 92 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 92 resolved as shift
WARNING: shift/reduce conflict for DIV in state 92 resolved as shift
WARNING: shift/reduce conflict for MOD in state 92 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 92 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 92 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 92 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 92 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 92 resolved as shift
WARNING: shift/reduce conflict for POT in state 92 resolved as shift
WARNING: shift/reduce conflict for AND in state 92 resolved as shift
WARNING: shift/reduce conflict for OR in state 92 resolved as shift
WARNING: shift/reduce conflict for EQ in state 92 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 92 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 92 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 92 resolved as shift
WARNING: shift/reduce conflict for LT in state 92 resolved as shift
WARNING: shift/reduce conflict for GT in state 92 resolved as shift
WARNING: shift/reduce conflict for LE in state 92 resolved as shift
WARNING: shift/reduce conflict for GE in state 92 resolved as shift
WARNING: shift/reduce conflict for DOT in state 92 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 92 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 92 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 92 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 93 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 93 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 93 resolved as shift
WARNING: shift/reduce conflict for DIV in state 93 resolved as shift
WARNING: shift/reduce conflict for MOD in state 93 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 93 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 93 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 93 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 93 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 93 resolved as shift
WARNING: shift/reduce conflict for POT in state 93 resolved as shift
WARNING: shift/reduce conflict for AND in state 93 resolved as shift
WARNING: shift/reduce conflict for OR in state 93 resolved as shift
WARNING: shift/reduce conflict for EQ in state 93 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 93 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 93 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 93 resolved as shift
WARNING: shift/reduce conflict for LT in state 93 resolved as shift
WARNING: shift/reduce conflict for GT in state 93 resolved as shift
WARNING: shift/reduce conflict for LE in state 93 resolved as shift
WARNING: shift/reduce conflict for GE in state 93 resolved as shift
WARNING: shift/reduce conflict for DOT in state 93 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 93 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 93 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 93 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 94 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 94 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 94 resolved as shift
WARNING: shift/reduce conflict for DIV in state 94 resolved as shift
WARNING: shift/reduce conflict for MOD in state 94 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 94 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 94 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 94 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 94 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 94 resolved as shift
WARNING: shift/reduce conflict for POT in state 94 resolved as shift
WARNING: shift/reduce conflict for AND in state 94 resolved as shift
WARNING: shift/reduce conflict for OR in state 94 resolved as shift
WARNING: shift/reduce conflict for EQ in state 94 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 94 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 94 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 94 resolved as shift
WARNING: shift/reduce conflict for LT in state 94 resolved as shift
WARNING: shift/reduce conflict for GT in state 94 resolved as shift
WARNING: shift/reduce conflict for LE in state 94 resolved as shift
WARNING: shift/reduce conflict for GE in state 94 resolved as shift
WARNING: shift/reduce conflict for DOT in state 94 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 94 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 94 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 94 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 95 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 95 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 95 resolved as shift
WARNING: shift/reduce conflict for DIV in state 95 resolved as shift
WARNING: shift/reduce conflict for MOD in state 95 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 95 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 95 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 95 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 95 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 95 resolved as shift
WARNING: shift/reduce conflict for POT in state 95 resolved as shift
WARNING: shift/reduce conflict for AND in state 95 resolved as shift
WARNING: shift/reduce conflict for OR in state 95 resolved as shift
WARNING: shift/reduce conflict for EQ in state 95 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 95 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 95 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 95 resolved as shift
WARNING: shift/reduce conflict for LT in state 95 resolved as shift
WARNING: shift/reduce conflict for GT in state 95 resolved as shift
WARNING: shift/reduce conflict for LE in state 95 resolved as shift
WARNING: shift/reduce conflict for GE in state 95 resolved as shift
WARNING: shift/reduce conflict for DOT in state 95 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 95 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 95 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 95 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 96 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 96 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 96 resolved as shift
WARNING: shift/reduce conflict for DIV in state 96 resolved as shift
WARNING: shift/reduce conflict for MOD in state 96 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 96 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 96 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 96 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 96 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 96 resolved as shift
WARNING: shift/reduce conflict for POT in state 96 resolved as shift
WARNING: shift/reduce conflict for AND in state 96 resolved as shift
WARNING: shift/reduce conflict for OR in state 96 resolved as shift
WARNING: shift/reduce conflict for EQ in state 96 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 96 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 96 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 96 resolved as shift
WARNING: shift/reduce conflict for LT in state 96 resolved as shift
WARNING: shift/reduce conflict for GT in state 96 resolved as shift
WARNING: shift/reduce conflict for LE in state 96 resolved as shift
WARNING: shift/reduce conflict for GE in state 96 resolved as shift
WARNING: shift/reduce conflict for DOT in state 96 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 96 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 96 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 96 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 97 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 97 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 97 resolved as shift
WARNING: shift/reduce conflict for DIV in state 97 resolved as shift
WARNING: shift/reduce conflict for MOD in state 97 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 97 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 97 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 97 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 97 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 97 resolved as shift
WARNING: shift/reduce conflict for POT in state 97 resolved as shift
WARNING: shift/reduce conflict for AND in state 97 resolved as shift
WARNING: shift/reduce conflict for OR in state 97 resolved as shift
WARNING: shift/reduce conflict for EQ in state 97 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 97 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 97 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 97 resolved as shift
WARNING: shift/reduce conflict for LT in state 97 resolved as shift
WARNING: shift/reduce conflict for GT in state 97 resolved as shift
WARNING: shift/reduce conflict for LE in state 97 resolved as shift
WARNING: shift/reduce conflict for GE in state 97 resolved as shift
WARNING: shift/reduce conflict for DOT in state 97 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 97 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 97 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 97 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 98 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 98 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 98 resolved as shift
WARNING: shift/reduce conflict for DIV in state 98 resolved as shift
WARNING: shift/reduce conflict for MOD in state 98 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 98 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 98 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 98 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 98 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 98 resolved as shift
WARNING: shift/reduce conflict for POT in state 98 resolved as shift
WARNING: shift/reduce conflict for AND in state 98 resolved as shift
WARNING: shift/reduce conflict for OR in state 98 resolved as shift
WARNING: shift/reduce conflict for EQ in state 98 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 98 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 98 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 98 resolved as shift
WARNING: shift/reduce conflict for LT in state 98 resolved as shift
WARNING: shift/reduce conflict for GT in state 98 resolved as shift
WARNING: shift/reduce conflict for LE in state 98 resolved as shift
WARNING: shift/reduce conflict for GE in state 98 resolved as shift
WARNING: shift/reduce conflict for DOT in state 98 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 98 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 98 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 98 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 99 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 99 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 99 resolved as shift
WARNING: shift/reduce conflict for DIV in state 99 resolved as shift
WARNING: shift/reduce conflict for MOD in state 99 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 99 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 99 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 99 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 99 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 99 resolved as shift
WARNING: shift/reduce conflict for POT in state 99 resolved as shift
WARNING: shift/reduce conflict for AND in state 99 resolved as shift
WARNING: shift/reduce conflict for OR in state 99 resolved as shift
WARNING: shift/reduce conflict for EQ in state 99 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 99 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 99 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 99 resolved as shift
WARNING: shift/reduce conflict for LT in state 99 resolved as shift
WARNING: shift/reduce conflict for GT in state 99 resolved as shift
WARNING: shift/reduce conflict for LE in state 99 resolved as shift
WARNING: shift/reduce conflict for GE in state 99 resolved as shift
WARNING: shift/reduce conflict for DOT in state 99 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 99 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 99 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 99 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 100 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 100 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 100 resolved as shift
WARNING: shift/reduce conflict for DIV in state 100 resolved as shift
WARNING: shift/reduce conflict for MOD in state 100 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 100 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 100 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 100 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 100 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 100 resolved as shift
WARNING: shift/reduce conflict for POT in state 100 resolved as shift
WARNING: shift/reduce conflict for AND in state 100 resolved as shift
WARNING: shift/reduce conflict for OR in state 100 resolved as shift
WARNING: shift/reduce conflict for EQ in state 100 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 100 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 100 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 100 resolved as shift
WARNING: shift/reduce conflict for LT in state 100 resolved as shift
WARNING: shift/reduce conflict for GT in state 100 resolved as shift
WARNING: shift/reduce conflict for LE in state 100 resolved as shift
WARNING: shift/reduce conflict for GE in state 100 resolved as shift
WARNING: shift/reduce conflict for DOT in state 100 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 100 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 100 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 100 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 101 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 101 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 101 resolved as shift
WARNING: shift/reduce conflict for DIV in state 101 resolved as shift
WARNING: shift/reduce conflict for MOD in state 101 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 101 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 101 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 101 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 101 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 101 resolved as shift
WARNING: shift/reduce conflict for POT in state 101 resolved as shift
WARNING: shift/reduce conflict for AND in state 101 resolved as shift
WARNING: shift/reduce conflict for OR in state 101 resolved as shift
WARNING: shift/reduce conflict for EQ in state 101 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 101 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 101 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 101 resolved as shift
WARNING: shift/reduce conflict for LT in state 101 resolved as shift
WARNING: shift/reduce conflict for GT in state 101 resolved as shift
WARNING: shift/reduce conflict for LE in state 101 resolved as shift
WARNING: shift/reduce conflict for GE in state 101 resolved as shift
WARNING: shift/reduce conflict for DOT in state 101 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 101 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 101 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 101 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 102 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 102 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 102 resolved as shift
WARNING: shift/reduce conflict for DIV in state 102 resolved as shift
WARNING: shift/reduce conflict for MOD in state 102 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 102 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 102 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 102 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 102 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 102 resolved as shift
WARNING: shift/reduce conflict for POT in state 102 resolved as shift
WARNING: shift/reduce conflict for AND in state 102 resolved as shift
WARNING: shift/reduce conflict for OR in state 102 resolved as shift
WARNING: shift/reduce conflict for EQ in state 102 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 102 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 102 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 102 resolved as shift
WARNING: shift/reduce conflict for LT in state 102 resolved as shift
WARNING: shift/reduce conflict for GT in state 102 resolved as shift
WARNING: shift/reduce conflict for LE in state 102 resolved as shift
WARNING: shift/reduce conflict for GE in state 102 resolved as shift
WARNING: shift/reduce conflict for DOT in state 102 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 102 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 102 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 102 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 103 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 103 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 103 resolved as shift
WARNING: shift/reduce conflict for DIV in state 103 resolved as shift
WARNING: shift/reduce conflict for MOD in state 103 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 103 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 103 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 103 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 103 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 103 resolved as shift
WARNING: shift/reduce conflict for POT in state 103 resolved as shift
WARNING: shift/reduce conflict for AND in state 103 resolved as shift
WARNING: shift/reduce conflict for OR in state 103 resolved as shift
WARNING: shift/reduce conflict for EQ in state 103 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 103 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 103 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 103 resolved as shift
WARNING: shift/reduce conflict for LT in state 103 resolved as shift
WARNING: shift/reduce conflict for GT in state 103 resolved as shift
WARNING: shift/reduce conflict for LE in state 103 resolved as shift
WARNING: shift/reduce conflict for GE in state 103 resolved as shift
WARNING: shift/reduce conflict for DOT in state 103 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 103 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 103 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 103 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 104 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 104 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 104 resolved as shift
WARNING: shift/reduce conflict for DIV in state 104 resolved as shift
WARNING: shift/reduce conflict for MOD in state 104 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 104 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 104 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 104 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 104 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 104 resolved as shift
WARNING: shift/reduce conflict for POT in state 104 resolved as shift
WARNING: shift/reduce conflict for AND in state 104 resolved as shift
WARNING: shift/reduce conflict for OR in state 104 resolved as shift
WARNING: shift/reduce conflict for EQ in state 104 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 104 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 104 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 104 resolved as shift
WARNING: shift/reduce conflict for LT in state 104 resolved as shift
WARNING: shift/reduce conflict for GT in state 104 resolved as shift
WARNING: shift/reduce conflict for LE in state 104 resolved as shift
WARNING: shift/reduce conflict for GE in state 104 resolved as shift
WARNING: shift/reduce conflict for DOT in state 104 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 104 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 104 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 104 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 105 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 105 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 105 resolved as shift
WARNING: shift/reduce conflict for DIV in state 105 resolved as shift
WARNING: shift/reduce conflict for MOD in state 105 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 105 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 105 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 105 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 105 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 105 resolved as shift
WARNING: shift/reduce conflict for POT in state 105 resolved as shift
WARNING: shift/reduce conflict for AND in state 105 resolved as shift
WARNING: shift/reduce conflict for OR in state 105 resolved as shift
WARNING: shift/reduce conflict for EQ in state 105 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 105 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 105 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 105 resolved as shift
WARNING: shift/reduce conflict for LT in state 105 resolved as shift
WARNING: shift/reduce conflict for GT in state 105 resolved as shift
WARNING: shift/reduce conflict for LE in state 105 resolved as shift
WARNING: shift/reduce conflict for GE in state 105 resolved as shift
WARNING: shift/reduce conflict for DOT in state 105 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 105 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 105 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 105 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 106 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 106 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 106 resolved as shift
WARNING: shift/reduce conflict for DIV in state 106 resolved as shift
WARNING: shift/reduce conflict for MOD in state 106 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 106 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 106 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 106 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 106 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 106 resolved as shift
WARNING: shift/reduce conflict for POT in state 106 resolved as shift
WARNING: shift/reduce conflict for AND in state 106 resolved as shift
WARNING: shift/reduce conflict for OR in state 106 resolved as shift
WARNING: shift/reduce conflict for EQ in state 106 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 106 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 106 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 106 resolved as shift
WARNING: shift/reduce conflict for LT in state 106 resolved as shift
WARNING: shift/reduce conflict for GT in state 106 resolved as shift
WARNING: shift/reduce conflict for LE in state 106 resolved as shift
WARNING: shift/reduce conflict for GE in state 106 resolved as shift
WARNING: shift/reduce conflict for DOT in state 106 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 106 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 106 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 106 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 107 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 107 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 107 resolved as shift
WARNING: shift/reduce conflict for DIV in state 107 resolved as shift
WARNING: shift/reduce conflict for MOD in state 107 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 107 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 107 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 107 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 107 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 107 resolved as shift
WARNING: shift/reduce conflict for POT in state 107 resolved as shift
WARNING: shift/reduce conflict for AND in state 107 resolved as shift
WARNING: shift/reduce conflict for OR in state 107 resolved as shift
WARNING: shift/reduce conflict for EQ in state 107 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 107 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 107 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 107 resolved as shift
WARNING: shift/reduce conflict for LT in state 107 resolved as shift
WARNING: shift/reduce conflict for GT in state 107 resolved as shift
WARNING: shift/reduce conflict for LE in state 107 resolved as shift
WARNING: shift/reduce conflict for GE in state 107 resolved as shift
WARNING: shift/reduce conflict for DOT in state 107 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 107 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 107 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 107 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 166 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 176 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 207 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 207 resolved as shift
WARNING: shift/reduce conflict for LET in state 207 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 207 resolved as shift
WARNING: shift/reduce conflict for CONST in state 207 resolved as shift
WARNING: shift/reduce conflict for CONSOLE in state 207 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 207 resolved as shift
WARNING: shift/reduce conflict for PROMPT in state 207 resolved as shift
WARNING: shift/reduce conflict for NOT in state 207 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 207 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 207 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 207 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 207 resolved as shift
WARNING: shift/reduce conflict for STRING in state 207 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 207 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 207 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 207 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 207 resolved as shift
WARNING: shift/reduce conflict for IF in state 207 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 207 resolved as shift
WARNING: shift/reduce conflict for FOR in state 207 resolved as shift
WARNING: shift/reduce conflict for VAR in state 207 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 208 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 208 resolved as shift
WARNING: shift/reduce conflict for LET in state 208 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 208 resolved as shift
WARNING: shift/reduce conflict for CONST in state 208 resolved as shift
WARNING: shift/reduce conflict for CONSOLE in state 208 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 208 resolved as shift
WARNING: shift/reduce conflict for PROMPT in state 208 resolved as shift
WARNING: shift/reduce conflict for NOT in state 208 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 208 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 208 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 208 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 208 resolved as shift
WARNING: shift/reduce conflict for STRING in state 208 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 208 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 208 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 208 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 208 resolved as shift
WARNING: shift/reduce conflict for IF in state 208 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 208 resolved as shift
WARNING: shift/reduce conflict for FOR in state 208 resolved as shift
WARNING: shift/reduce conflict for VAR in state 208 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 213 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 213 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 213 resolved as shift
WARNING: shift/reduce conflict for DIV in state 213 resolved as shift
WARNING: shift/reduce conflict for MOD in state 213 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 213 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 213 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 213 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 213 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 213 resolved as shift
WARNING: shift/reduce conflict for POT in state 213 resolved as shift
WARNING: shift/reduce conflict for AND in state 213 resolved as shift
WARNING: shift/reduce conflict for OR in state 213 resolved as shift
WARNING: shift/reduce conflict for EQ in state 213 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 213 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 213 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 213 resolved as shift
WARNING: shift/reduce conflict for LT in state 213 resolved as shift
WARNING: shift/reduce conflict for GT in state 213 resolved as shift
WARNING: shift/reduce conflict for LE in state 213 resolved as shift
WARNING: shift/reduce conflict for GE in state 213 resolved as shift
WARNING: shift/reduce conflict for DOT in state 213 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 213 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 213 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 213 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 214 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 214 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 214 resolved as shift
WARNING: shift/reduce conflict for DIV in state 214 resolved as shift
WARNING: shift/reduce conflict for MOD in state 214 resolved as shift
WARNING: shift/reduce conflict for PLUS_ASSIGN in state 214 resolved as shift
WARNING: shift/reduce conflict for MINUS_ASSIGN in state 214 resolved as shift
WARNING: shift/reduce conflict for MULT_ASSIGN in state 214 resolved as shift
WARNING: shift/reduce conflict for DIV_ASSIGN in state 214 resolved as shift
WARNING: shift/reduce conflict for MOD_ASSIGN in state 214 resolved as shift
WARNING: shift/reduce conflict for POT in state 214 resolved as shift
WARNING: shift/reduce conflict for AND in state 214 resolved as shift
WARNING: shift/reduce conflict for OR in state 214 resolved as shift
WARNING: shift/reduce conflict for EQ in state 214 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 214 resolved as shift
WARNING: shift/reduce conflict for STRICT_EQ in state 214 resolved as shift
WARNING: shift/reduce conflict for STRICT_NEQ in state 214 resolved as shift
WARNING: shift/reduce conflict for LT in state 214 resolved as shift
WARNING: shift/reduce conflict for GT in state 214 resolved as shift
WARNING: shift/reduce conflict for LE in state 214 resolved as shift
WARNING: shift/reduce conflict for GE in state 214 resolved as shift
WARNING: shift/reduce conflict for DOT in state 214 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 214 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 214 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 214 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 228 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 228 resolved as shift
WARNING: reduce/reduce conflict in state 3 resolved using rule (element -> letAssignment)
WARNING: rejected rule (statement -> letAssignment) in state 3
WARNING: reduce/reduce conflict in state 4 resolved using rule (element -> declaracion)
WARNING: rejected rule (statement -> declaracion) in state 4
WARNING: reduce/reduce conflict in state 5 resolved using rule (element -> function)
WARNING: rejected rule (statement -> function) in state 5
WARNING: reduce/reduce conflict in state 6 resolved using rule (element -> controlEstructure)
WARNING: rejected rule (statement -> controlEstructure) in state 6
WARNING: reduce/reduce conflict in state 7 resolved using rule (element -> forEstructure)
WARNING: rejected rule (statement -> forEstructure) in state 7
WARNING: reduce/reduce conflict in state 10 resolved using rule (element -> consolelog)
WARNING: rejected rule (statement -> consolelog) in state 10
WARNING: reduce/reduce conflict in state 35 resolved using rule (element -> expression SEMICOLON)
WARNING: rejected rule (statement -> expression SEMICOLON) in state 35
WARNING: reduce/reduce conflict in state 210 resolved using rule (for_update -> expression PLUSPLUS)
WARNING: rejected rule (expression -> expression PLUSPLUS) in state 210
WARNING: reduce/reduce conflict in state 211 resolved using rule (for_update -> expression MINUSMINUS)
WARNING: rejected rule (expression -> expression MINUSMINUS) in state 211
WARNING: reduce/reduce conflict in state 213 resolved using rule (for_update -> PLUSPLUS expression)
WARNING: rejected rule (expression -> PLUSPLUS expression) in state 213
WARNING: reduce/reduce conflict in state 214 resolved using rule (for_update -> MINUSMINUS expression)
WARNING: rejected rule (expression -> MINUSMINUS expression) in state 214
WARNING: reduce/reduce conflict in state 228 resolved using rule (controlEstructure -> IF LPAREN expression RPAREN statement)
WARNING: rejected rule (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement) in state 228
WARNING: reduce/reduce conflict in state 230 resolved using rule (controlEstructure -> IF LPAREN expression RPAREN statement ELSE statement)
WARNING: rejected rule (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement) in state 230
WARNING: Rule (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement) is never reduced
WARNING: Rule (controlEstructure -> IF LPAREN expression RPAREN statement ELSE IF LPAREN expression RPAREN statement ELSE statement) is never reduced
